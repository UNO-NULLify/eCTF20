#!/usr/bin/env python3
"""
Description: Generates system wide secrets containing all potential regions
Use: Once per ecosystem of devices
"""
import json
from argparse import ArgumentParser
# Replace
from nacl import utils, public, secret
# End Replace
import monocypher
import os


def main(region_dict, file_name):
    try:
        secrets = open(file_name, "w")
    except Exception as e:
        print("Unable to open secrets file: %s" % (e,))
        return 0

    info = json.dumps(region_dict, indent=4, sort_keys=True)
    secrets.write(info)
    secrets.close()


def get_args():
    """gets arguments from command line"""
    parser = ArgumentParser(description='main interface to provision system')
    parser.add_argument('--region-list', help='list of regions for provisioning purposes',
                        required=True, nargs='+')
    parser.add_argument('--outfile', help='file to save region secrets to', required=True)
    args = parser.parse_args()
    return args.region_list, args.outfile


if __name__ == '__main__':
    region_list, outfile = get_args()
    print("generating region specific secrets")
    regions = {}
    i = 1
    for r in region_list:
        # create a public / private key pair (Curve25519)
        #pvt_key = public.PrivateKey.generate()
        pair = monocypher.generate_key_exchange_key_pair()
        pvt_key = pair[0]

        #Encrypt Region key
        secure_key = monocypher.generate_key(method="chacha20")
        #box = secret.SecretBox(secure_key)
        pvt_key_enc = monocypher.lock(secure_key, os.urandom(24), pvt_key)

        regions[r] = {"id": i,
                      "pub_key": pair[1].hex(),                  # to convert .hex() back to bytes bytes.fromhex(salt-as-hex)
                      "priv_key": pvt_key.hex(), #NEVER TOUCH DEVICE
                      "priv_key_enc": pvt_key_enc[1].hex(),
                      "rand_pass": secure_key.hex(),   #Goes on devices that are from this region. Store in secure place.
                      }
        i = i+1
    main(regions, outfile)
