Xilinx HDMI TX Subsystem

The Xilinx HDMI TX Subsystem contains several subcores to implement
a HDMI receiver. /hdmi/xilinx_drm_hdmi.c implements a
DRM/KMS driver that slaves to xilinx_drm_drv.c in the output pipeline.

retimer-clk is optional. If specified, the corresponding driver
should offer a CCF clock that supports .set_rate(). Through this,
the device can retime/redrive the HDMI TX signal on the connector
depending on the TX clock line rate.

There are 2 optional HDCP cores that can be included in the IP configuration.
Below provided sample device tree depicts the configuration when both cores are 
included. If an optional core is included then corresponding entries for the 
core parameters (interrupts, key-management block address) must be included in
the device tree

Note: If HDCP cores are included in the design, the user must provide valid
	  HDCP keys for the encryption to work. 

Refer to xlnx,vphy.txt for the phy specifics.
	  
Required properties:
 - compatible: Should be "xlnx,v-hdmi-tx-ss-3.0".
 - reg: Base address and size of the IP core and hdcp1x key management block
 - reg-names: Identification string for included register blocks
		"hdmi-txss": Identification string for hdmitx subsystem. Always present
		"hdcp1x-keymngmt": Identification string for Key management block for
			hdcp1x. [Optional]

 - interrupts-parent: phandle for interrupt controller.
 - interrupts: Interrupt numbers for mandatory and optional blocks
 - interrupt-names: Identification string that binds irq number to block 
		generating the interrupt
		"hdmitx": interrupt for tx subcore [always present]
		"hdcp1x": interrupt for hdcp1.4 core [optional]
		"hdcp1x-timer": interrupt for hdcp1.4 timer [present if hdcp1x is 
			included]
		"hdcp22": interrupt for hdcp22 core [optional]
		"hdcp22-timer": interrupt for hdcp2.2 timer [present if hdcp22 is
			included]

 - clocks: phandle for axi-lite, video stream and retimer clock
 - clock-names: The identification string, "axi-lite", is always required for
                the axi-lite clock, "video" is always required for video stream
				clock and "retimer-clk" is required only when retimer is being 
				used 
   
 - phys: phandle for phy lanes registered for hdmi protocol. HDMI always 
         require 3 lanes
 - phy-names: The identification string, "hdmi-phy0" and so on
 
 - xlnx,input-pixels-per-clock: IP configuration for samples/clk (2, 4)
         Note: Only 2 is supported at this time
 - xlnx,max-bits-per-component: The data width per video component (8,10,12,16)
         Note: Only 8 & 10 is supported at this time
 - xlnx,include-hdcp-1-4: Boolean parameter that denotes if hdcp14 is included.
		If present indicates inclusion of the optional core
 - xlnx,include-hdcp-2-2: Boolean parameter that denotes if hdcp22 is included.
		If present indicates inclusion of the optional core
 - xlnx,hdcp-authenticate: Flag to enable/disable hdcp authentication. 
		Applicable when either hdcp14 or hdcp22 is included in the design
 - xlnx,hdcp-encrypt: Flag to enable/disable stream encryption
 		Applicable when either hdcp14 or hdcp22 is included in the design
		
The "retimer-clk" is optional. If present, it is notified of TX link
clock changes through set_rate(). Tested with dp159.c driver.

==Example==
If hdcp1.4 is included in the design then key management block node should be
added to the device tree

	hdmi_output_hdcp_keymngmt_blk_top_0: hdcp_keymngmt_blk_top@a0280000 {
		compatible = "xlnx,hdcp-keymngmt-blk-top-1.0";
		reg = <0x0 0xa0280000 0x0 0x10000>;
	};

	hdmi_output_v_hdmi_tx_ss_0: v_hdmi_tx_ss@a0020000 {
		compatible = "xlnx,v-hdmi-tx-ss-3.0";
		reg = <0x0 0xa0100000 0x0 0x100000>, <0x0 0xa0280000 0x0 0x10000>;
		reg-names = "hdmi-txss", "hdcp1x-keymngmt";			
		interrupt-parent = <&gic>;
		interrupts = <0 93 4>, <0 104 4>, <0 105 4>, <0 106 4>, <0 107 4>;
		interrupt-names = "hdmitx", "hdcp1x", "hdcp1x-timer", "hdcp22", "hdcp22-timer";
		
		clocks = <&vid_s_axi_clk>, <&vid_stream_clk>, <&dp159>;
		clock-names = "axi-lite", "video", "retimer-clk";
		phy-names = "hdmi-phy0", "hdmi-phy1", "hdmi-phy2";
		phys = <&vphy_lane0 0 1 1 1>, <&vphy_lane1 0 1 1 1>, <&vphy_lane2 0 1 1 1>;
	
		xlnx,input-pixels-per-clock = <0x2>;
		xlnx,max-bits-per-component = <0x8>;
		xlnx,include-hdcp-1-4;
		xlnx,include-hdcp-2-2;

		/* settings for HDCP */
		xlnx,hdcp-authenticate = <0x0>;
		xlnx,hdcp-encrypt = <0x0>;			
	};

