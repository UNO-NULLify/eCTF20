# 1 "../src/platform.c"
# 1 "/ectf/mb/drm_audio_fw/Debug//"
# 1 "<built-in>"
#define __STDC__ 1
#define __STDC_VERSION__ 201112L
#define __STDC_UTF_16__ 1
#define __STDC_UTF_32__ 1
#define __STDC_HOSTED__ 1
#define __GNUC__ 6
#define __GNUC_MINOR__ 2
#define __GNUC_PATCHLEVEL__ 0
#define __VERSION__ "6.2.0"
#define __ATOMIC_RELAXED 0
#define __ATOMIC_SEQ_CST 5
#define __ATOMIC_ACQUIRE 2
#define __ATOMIC_RELEASE 3
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_CONSUME 1
#define __FINITE_MATH_ONLY__ 0
#define __SIZEOF_INT__ 4
#define __SIZEOF_LONG__ 4
#define __SIZEOF_LONG_LONG__ 8
#define __SIZEOF_SHORT__ 2
#define __SIZEOF_FLOAT__ 4
#define __SIZEOF_DOUBLE__ 8
#define __SIZEOF_LONG_DOUBLE__ 8
#define __SIZEOF_SIZE_T__ 4
#define __CHAR_BIT__ 8
#define __BIGGEST_ALIGNMENT__ 4
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_PDP_ENDIAN__ 3412
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __SIZEOF_POINTER__ 4
#define __SIZE_TYPE__ unsigned int
#define __PTRDIFF_TYPE__ int
#define __WCHAR_TYPE__ int
#define __WINT_TYPE__ unsigned int
#define __INTMAX_TYPE__ long long int
#define __UINTMAX_TYPE__ long long unsigned int
#define __CHAR16_TYPE__ short unsigned int
#define __CHAR32_TYPE__ long unsigned int
#define __SIG_ATOMIC_TYPE__ int
#define __INT8_TYPE__ signed char
#define __INT16_TYPE__ short int
#define __INT32_TYPE__ long int
#define __INT64_TYPE__ long long int
#define __UINT8_TYPE__ unsigned char
#define __UINT16_TYPE__ short unsigned int
#define __UINT32_TYPE__ long unsigned int
#define __UINT64_TYPE__ long long unsigned int
#define __INT_LEAST8_TYPE__ signed char
#define __INT_LEAST16_TYPE__ short int
#define __INT_LEAST32_TYPE__ long int
#define __INT_LEAST64_TYPE__ long long int
#define __UINT_LEAST8_TYPE__ unsigned char
#define __UINT_LEAST16_TYPE__ short unsigned int
#define __UINT_LEAST32_TYPE__ long unsigned int
#define __UINT_LEAST64_TYPE__ long long unsigned int
#define __INT_FAST8_TYPE__ int
#define __INT_FAST16_TYPE__ int
#define __INT_FAST32_TYPE__ int
#define __INT_FAST64_TYPE__ long long int
#define __UINT_FAST8_TYPE__ unsigned int
#define __UINT_FAST16_TYPE__ unsigned int
#define __UINT_FAST32_TYPE__ unsigned int
#define __UINT_FAST64_TYPE__ long long unsigned int
#define __INTPTR_TYPE__ int
#define __UINTPTR_TYPE__ unsigned int
#define __has_include(STR) __has_include__(STR)
#define __has_include_next(STR) __has_include_next__(STR)
#define __GXX_ABI_VERSION 1010
#define __SCHAR_MAX__ 0x7f
#define __SHRT_MAX__ 0x7fff
#define __INT_MAX__ 0x7fffffff
#define __LONG_MAX__ 0x7fffffffL
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
#define __WCHAR_MAX__ 0x7fffffff
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
#define __WINT_MAX__ 0xffffffffU
#define __WINT_MIN__ 0U
#define __PTRDIFF_MAX__ 0x7fffffff
#define __SIZE_MAX__ 0xffffffffU
#define __INTMAX_MAX__ 0x7fffffffffffffffLL
#define __INTMAX_C(c) c ## LL
#define __UINTMAX_MAX__ 0xffffffffffffffffULL
#define __UINTMAX_C(c) c ## ULL
#define __SIG_ATOMIC_MAX__ 0x7fffffff
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define __INT8_MAX__ 0x7f
#define __INT16_MAX__ 0x7fff
#define __INT32_MAX__ 0x7fffffffL
#define __INT64_MAX__ 0x7fffffffffffffffLL
#define __UINT8_MAX__ 0xff
#define __UINT16_MAX__ 0xffff
#define __UINT32_MAX__ 0xffffffffUL
#define __UINT64_MAX__ 0xffffffffffffffffULL
#define __INT_LEAST8_MAX__ 0x7f
#define __INT8_C(c) c
#define __INT_LEAST16_MAX__ 0x7fff
#define __INT16_C(c) c
#define __INT_LEAST32_MAX__ 0x7fffffffL
#define __INT32_C(c) c ## L
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffLL
#define __INT64_C(c) c ## LL
#define __UINT_LEAST8_MAX__ 0xff
#define __UINT8_C(c) c
#define __UINT_LEAST16_MAX__ 0xffff
#define __UINT16_C(c) c
#define __UINT_LEAST32_MAX__ 0xffffffffUL
#define __UINT32_C(c) c ## UL
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffULL
#define __UINT64_C(c) c ## ULL
#define __INT_FAST8_MAX__ 0x7fffffff
#define __INT_FAST16_MAX__ 0x7fffffff
#define __INT_FAST32_MAX__ 0x7fffffff
#define __INT_FAST64_MAX__ 0x7fffffffffffffffLL
#define __UINT_FAST8_MAX__ 0xffffffffU
#define __UINT_FAST16_MAX__ 0xffffffffU
#define __UINT_FAST32_MAX__ 0xffffffffU
#define __UINT_FAST64_MAX__ 0xffffffffffffffffULL
#define __INTPTR_MAX__ 0x7fffffff
#define __UINTPTR_MAX__ 0xffffffffU
#define __GCC_IEC_559 0
#define __GCC_IEC_559_COMPLEX 0
#define __FLT_EVAL_METHOD__ 0
#define __DEC_EVAL_METHOD__ 2
#define __FLT_RADIX__ 2
#define __FLT_MANT_DIG__ 24
#define __FLT_DIG__ 6
#define __FLT_MIN_EXP__ (-125)
#define __FLT_MIN_10_EXP__ (-37)
#define __FLT_MAX_EXP__ 128
#define __FLT_MAX_10_EXP__ 38
#define __FLT_DECIMAL_DIG__ 9
#define __FLT_MAX__ 3.4028234663852886e+38F
#define __FLT_MIN__ 1.1754943508222875e-38F
#define __FLT_EPSILON__ 1.1920928955078125e-7F
#define __FLT_DENORM_MIN__ 1.4012984643248171e-45F
#define __FLT_HAS_DENORM__ 1
#define __FLT_HAS_INFINITY__ 1
#define __FLT_HAS_QUIET_NAN__ 1
#define __DBL_MANT_DIG__ 53
#define __DBL_DIG__ 15
#define __DBL_MIN_EXP__ (-1021)
#define __DBL_MIN_10_EXP__ (-307)
#define __DBL_MAX_EXP__ 1024
#define __DBL_MAX_10_EXP__ 308
#define __DBL_DECIMAL_DIG__ 17
#define __DBL_MAX__ ((double)1.7976931348623157e+308L)
#define __DBL_MIN__ ((double)2.2250738585072014e-308L)
#define __DBL_EPSILON__ ((double)2.2204460492503131e-16L)
#define __DBL_DENORM_MIN__ ((double)4.9406564584124654e-324L)
#define __DBL_HAS_DENORM__ 1
#define __DBL_HAS_INFINITY__ 1
#define __DBL_HAS_QUIET_NAN__ 1
#define __LDBL_MANT_DIG__ 53
#define __LDBL_DIG__ 15
#define __LDBL_MIN_EXP__ (-1021)
#define __LDBL_MIN_10_EXP__ (-307)
#define __LDBL_MAX_EXP__ 1024
#define __LDBL_MAX_10_EXP__ 308
#define __DECIMAL_DIG__ 17
#define __LDBL_MAX__ 1.7976931348623157e+308L
#define __LDBL_MIN__ 2.2250738585072014e-308L
#define __LDBL_EPSILON__ 2.2204460492503131e-16L
#define __LDBL_DENORM_MIN__ 4.9406564584124654e-324L
#define __LDBL_HAS_DENORM__ 1
#define __LDBL_HAS_INFINITY__ 1
#define __LDBL_HAS_QUIET_NAN__ 1
#define __DEC32_MANT_DIG__ 7
#define __DEC32_MIN_EXP__ (-94)
#define __DEC32_MAX_EXP__ 97
#define __DEC32_MIN__ 1E-95DF
#define __DEC32_MAX__ 9.999999E96DF
#define __DEC32_EPSILON__ 1E-6DF
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define __DEC64_MANT_DIG__ 16
#define __DEC64_MIN_EXP__ (-382)
#define __DEC64_MAX_EXP__ 385
#define __DEC64_MIN__ 1E-383DD
#define __DEC64_MAX__ 9.999999999999999E384DD
#define __DEC64_EPSILON__ 1E-15DD
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __DEC128_MANT_DIG__ 34
#define __DEC128_MIN_EXP__ (-6142)
#define __DEC128_MAX_EXP__ 6145
#define __DEC128_MIN__ 1E-6143DL
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __DEC128_EPSILON__ 1E-33DL
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define __REGISTER_PREFIX__ 
#define __USER_LABEL_PREFIX__ 
#define __GNUC_STDC_INLINE__ 1
#define __NO_INLINE__ 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __GCC_ATOMIC_BOOL_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __GCC_ATOMIC_SHORT_LOCK_FREE 1
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define __GCC_ATOMIC_LLONG_LOCK_FREE 1
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __SIZEOF_WCHAR_T__ 4
#define __SIZEOF_WINT_T__ 4
#define __SIZEOF_PTRDIFF_T__ 4
#define __MICROBLAZE__ 1
#define __microblaze__ 1
#define _LITTLE_ENDIAN 1
#define __LITTLE_ENDIAN__ 1
#define __MICROBLAZEEL__ 1
# 1 "<command-line>"
# 1 "../src/platform.c"
# 33 "../src/platform.c"
# 1 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xparameters.h" 1

#define XPARAMETERS_H 


#define XPAR_CPU_M_AXI_DP_FREQ_HZ 100000000
#define XPAR_CPU_M_AXI_IP_FREQ_HZ 100000000



#define XPAR_PROC_BUS_0_FREQ_HZ 100000000
#define XPAR_PROC_BUS_1_FREQ_HZ 100000000


#define XPAR_CPU_CORE_CLOCK_FREQ_HZ 100000000
#define XPAR_MICROBLAZE_CORE_CLOCK_FREQ_HZ 100000000





#define XPAR_MICROBLAZE_0_ADDR_SIZE 32
#define XPAR_MICROBLAZE_0_ADDR_TAG_BITS 0
#define XPAR_MICROBLAZE_0_ALLOW_DCACHE_WR 1
#define XPAR_MICROBLAZE_0_ALLOW_ICACHE_WR 1
#define XPAR_MICROBLAZE_0_AREA_OPTIMIZED 0
#define XPAR_MICROBLAZE_0_ASYNC_INTERRUPT 1
#define XPAR_MICROBLAZE_0_ASYNC_WAKEUP 3
#define XPAR_MICROBLAZE_0_AVOID_PRIMITIVES 0
#define XPAR_MICROBLAZE_0_BASE_VECTORS 0x0000000000000000
#define XPAR_MICROBLAZE_0_BRANCH_TARGET_CACHE_SIZE 0
#define XPAR_MICROBLAZE_0_CACHE_BYTE_SIZE 8192
#define XPAR_MICROBLAZE_0_DADDR_SIZE 32
#define XPAR_MICROBLAZE_0_DATA_SIZE 32
#define XPAR_MICROBLAZE_0_DCACHE_ADDR_TAG 0
#define XPAR_MICROBLAZE_0_DCACHE_ALWAYS_USED 0
#define XPAR_MICROBLAZE_0_DCACHE_BASEADDR 0x00000000
#define XPAR_MICROBLAZE_0_DCACHE_BYTE_SIZE 8192
#define XPAR_MICROBLAZE_0_DCACHE_DATA_WIDTH 0
#define XPAR_MICROBLAZE_0_DCACHE_FORCE_TAG_LUTRAM 0
#define XPAR_MICROBLAZE_0_DCACHE_HIGHADDR 0x3FFFFFFF
#define XPAR_MICROBLAZE_0_DCACHE_LINE_LEN 4
#define XPAR_MICROBLAZE_0_DCACHE_USE_WRITEBACK 0
#define XPAR_MICROBLAZE_0_DCACHE_VICTIMS 0
#define XPAR_MICROBLAZE_0_DC_AXI_MON 0
#define XPAR_MICROBLAZE_0_DEBUG_COUNTER_WIDTH 32
#define XPAR_MICROBLAZE_0_DEBUG_ENABLED 2
#define XPAR_MICROBLAZE_0_DEBUG_EVENT_COUNTERS 0
#define XPAR_MICROBLAZE_0_DEBUG_EXTERNAL_TRACE 0
#define XPAR_MICROBLAZE_0_DEBUG_INTERFACE 0
#define XPAR_MICROBLAZE_0_DEBUG_LATENCY_COUNTERS 0
#define XPAR_MICROBLAZE_0_DEBUG_PROFILE_SIZE 0
#define XPAR_MICROBLAZE_0_DEBUG_TRACE_ASYNC_RESET 0
#define XPAR_MICROBLAZE_0_DEBUG_TRACE_SIZE 8192
#define XPAR_MICROBLAZE_0_DIV_ZERO_EXCEPTION 0
#define XPAR_MICROBLAZE_0_DP_AXI_MON 0
#define XPAR_MICROBLAZE_0_DYNAMIC_BUS_SIZING 0
#define XPAR_MICROBLAZE_0_D_AXI 1
#define XPAR_MICROBLAZE_0_D_LMB 1
#define XPAR_MICROBLAZE_0_D_LMB_MON 0
#define XPAR_MICROBLAZE_0_ECC_USE_CE_EXCEPTION 0
#define XPAR_MICROBLAZE_0_EDGE_IS_POSITIVE 1
#define XPAR_MICROBLAZE_0_ENABLE_DISCRETE_PORTS 0
#define XPAR_MICROBLAZE_0_ENDIANNESS 1
#define XPAR_MICROBLAZE_0_FAULT_TOLERANT 0
#define XPAR_MICROBLAZE_0_FPU_EXCEPTION 0
#define XPAR_MICROBLAZE_0_FREQ 100000000
#define XPAR_MICROBLAZE_0_FSL_EXCEPTION 0
#define XPAR_MICROBLAZE_0_FSL_LINKS 1
#define XPAR_MICROBLAZE_0_IADDR_SIZE 32
#define XPAR_MICROBLAZE_0_ICACHE_ALWAYS_USED 0
#define XPAR_MICROBLAZE_0_ICACHE_BASEADDR 0x00000000
#define XPAR_MICROBLAZE_0_ICACHE_DATA_WIDTH 0
#define XPAR_MICROBLAZE_0_ICACHE_FORCE_TAG_LUTRAM 0
#define XPAR_MICROBLAZE_0_ICACHE_HIGHADDR 0x3FFFFFFF
#define XPAR_MICROBLAZE_0_ICACHE_LINE_LEN 4
#define XPAR_MICROBLAZE_0_ICACHE_STREAMS 0
#define XPAR_MICROBLAZE_0_ICACHE_VICTIMS 0
#define XPAR_MICROBLAZE_0_IC_AXI_MON 0
#define XPAR_MICROBLAZE_0_ILL_OPCODE_EXCEPTION 0
#define XPAR_MICROBLAZE_0_IMPRECISE_EXCEPTIONS 0
#define XPAR_MICROBLAZE_0_INSTR_SIZE 32
#define XPAR_MICROBLAZE_0_INTERCONNECT 2
#define XPAR_MICROBLAZE_0_INTERRUPT_IS_EDGE 1
#define XPAR_MICROBLAZE_0_INTERRUPT_MON 0
#define XPAR_MICROBLAZE_0_IP_AXI_MON 0
#define XPAR_MICROBLAZE_0_I_AXI 1
#define XPAR_MICROBLAZE_0_I_LMB 1
#define XPAR_MICROBLAZE_0_I_LMB_MON 0
#define XPAR_MICROBLAZE_0_LOCKSTEP_MASTER 0
#define XPAR_MICROBLAZE_0_LOCKSTEP_SELECT 0
#define XPAR_MICROBLAZE_0_LOCKSTEP_SLAVE 0
#define XPAR_MICROBLAZE_0_M0_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M0_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M1_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M1_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M2_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M2_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M3_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M3_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M4_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M4_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M5_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M5_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M6_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M6_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M7_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M7_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M8_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M8_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M9_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M9_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M10_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M10_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M11_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M11_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M12_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M12_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M13_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M13_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M14_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M14_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_M15_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M15_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_MMU_DTLB_SIZE 4
#define XPAR_MICROBLAZE_0_MMU_ITLB_SIZE 2
#define XPAR_MICROBLAZE_0_MMU_PRIVILEGED_INSTR 0
#define XPAR_MICROBLAZE_0_MMU_TLB_ACCESS 3
#define XPAR_MICROBLAZE_0_MMU_ZONES 16
#define XPAR_MICROBLAZE_0_M_AXI_DC_ADDR_WIDTH 32
#define XPAR_MICROBLAZE_0_M_AXI_DC_ARUSER_WIDTH 5
#define XPAR_MICROBLAZE_0_M_AXI_DC_AWUSER_WIDTH 5
#define XPAR_MICROBLAZE_0_M_AXI_DC_BUSER_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_DC_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M_AXI_DC_EXCLUSIVE_ACCESS 0
#define XPAR_MICROBLAZE_0_M_AXI_DC_RUSER_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_DC_THREAD_ID_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_DC_USER_SIGNALS 0
#define XPAR_MICROBLAZE_0_M_AXI_DC_USER_VALUE 31
#define XPAR_MICROBLAZE_0_M_AXI_DC_WUSER_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_DP_ADDR_WIDTH 32
#define XPAR_MICROBLAZE_0_M_AXI_DP_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M_AXI_DP_EXCLUSIVE_ACCESS 0
#define XPAR_MICROBLAZE_0_M_AXI_DP_THREAD_ID_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_D_BUS_EXCEPTION 0
#define XPAR_MICROBLAZE_0_M_AXI_IC_ADDR_WIDTH 32
#define XPAR_MICROBLAZE_0_M_AXI_IC_ARUSER_WIDTH 5
#define XPAR_MICROBLAZE_0_M_AXI_IC_AWUSER_WIDTH 5
#define XPAR_MICROBLAZE_0_M_AXI_IC_BUSER_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_IC_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M_AXI_IC_RUSER_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_IC_THREAD_ID_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_IC_USER_SIGNALS 0
#define XPAR_MICROBLAZE_0_M_AXI_IC_USER_VALUE 31
#define XPAR_MICROBLAZE_0_M_AXI_IC_WUSER_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_IP_ADDR_WIDTH 32
#define XPAR_MICROBLAZE_0_M_AXI_IP_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_M_AXI_IP_THREAD_ID_WIDTH 1
#define XPAR_MICROBLAZE_0_M_AXI_I_BUS_EXCEPTION 0
#define XPAR_MICROBLAZE_0_NUMBER_OF_PC_BRK 2
#define XPAR_MICROBLAZE_0_NUMBER_OF_RD_ADDR_BRK 0
#define XPAR_MICROBLAZE_0_NUMBER_OF_WR_ADDR_BRK 0
#define XPAR_MICROBLAZE_0_NUM_SYNC_FF_CLK 2
#define XPAR_MICROBLAZE_0_NUM_SYNC_FF_CLK_DEBUG 2
#define XPAR_MICROBLAZE_0_NUM_SYNC_FF_CLK_IRQ 1
#define XPAR_MICROBLAZE_0_NUM_SYNC_FF_DBG_CLK 1
#define XPAR_MICROBLAZE_0_NUM_SYNC_FF_DBG_TRACE_CLK 2
#define XPAR_MICROBLAZE_0_OPCODE_0X0_ILLEGAL 0
#define XPAR_MICROBLAZE_0_OPTIMIZATION 0
#define XPAR_MICROBLAZE_0_PC_WIDTH 32
#define XPAR_MICROBLAZE_0_PIADDR_SIZE 32
#define XPAR_MICROBLAZE_0_PVR 0
#define XPAR_MICROBLAZE_0_PVR_USER1 0x00
#define XPAR_MICROBLAZE_0_PVR_USER2 0x00000000
#define XPAR_MICROBLAZE_0_RESET_MSR 0x00000000
#define XPAR_MICROBLAZE_0_RESET_MSR_BIP 0
#define XPAR_MICROBLAZE_0_RESET_MSR_DCE 0
#define XPAR_MICROBLAZE_0_RESET_MSR_EE 0
#define XPAR_MICROBLAZE_0_RESET_MSR_EIP 0
#define XPAR_MICROBLAZE_0_RESET_MSR_ICE 0
#define XPAR_MICROBLAZE_0_RESET_MSR_IE 0
#define XPAR_MICROBLAZE_0_S0_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S0_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S1_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S1_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S2_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S2_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S3_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S3_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S4_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S4_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S5_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S5_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S6_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S6_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S7_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S7_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S8_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S8_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S9_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S9_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S10_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S10_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S11_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S11_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S12_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S12_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S13_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S13_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S14_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S14_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_S15_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_0_S15_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_0_SCO 0
#define XPAR_MICROBLAZE_0_TRACE 0
#define XPAR_MICROBLAZE_0_UNALIGNED_EXCEPTIONS 0
#define XPAR_MICROBLAZE_0_USE_BARREL 1
#define XPAR_MICROBLAZE_0_USE_BRANCH_TARGET_CACHE 0
#define XPAR_MICROBLAZE_0_USE_CONFIG_RESET 0
#define XPAR_MICROBLAZE_0_USE_DCACHE 0
#define XPAR_MICROBLAZE_0_USE_DIV 1
#define XPAR_MICROBLAZE_0_USE_EXTENDED_FSL_INSTR 0
#define XPAR_MICROBLAZE_0_USE_EXT_BRK 0
#define XPAR_MICROBLAZE_0_USE_EXT_NM_BRK 0
#define XPAR_MICROBLAZE_0_USE_FPU 0
#define XPAR_MICROBLAZE_0_USE_HW_MUL 1
#define XPAR_MICROBLAZE_0_USE_ICACHE 0
#define XPAR_MICROBLAZE_0_USE_INTERRUPT 1
#define XPAR_MICROBLAZE_0_USE_MMU 0
#define XPAR_MICROBLAZE_0_USE_MSR_INSTR 0
#define XPAR_MICROBLAZE_0_USE_NON_SECURE 0
#define XPAR_MICROBLAZE_0_USE_PCMP_INSTR 0
#define XPAR_MICROBLAZE_0_USE_REORDER_INSTR 1
#define XPAR_MICROBLAZE_0_USE_STACK_PROTECTION 0
#define XPAR_MICROBLAZE_0_COMPONENT_NAME system_microblaze_0_0
#define XPAR_MICROBLAZE_0_EDK_IPTYPE PROCESSOR
#define XPAR_MICROBLAZE_0_EDK_SPECIAL microblaze
#define XPAR_MICROBLAZE_0_G_TEMPLATE_LIST 0
#define XPAR_MICROBLAZE_0_G_USE_EXCEPTIONS 0



#define XPAR_CPU_ID 0
#define XPAR_MICROBLAZE_ID 0
#define XPAR_MICROBLAZE_ADDR_SIZE 32
#define XPAR_MICROBLAZE_ADDR_TAG_BITS 0
#define XPAR_MICROBLAZE_ALLOW_DCACHE_WR 1
#define XPAR_MICROBLAZE_ALLOW_ICACHE_WR 1
#define XPAR_MICROBLAZE_AREA_OPTIMIZED 0
#define XPAR_MICROBLAZE_ASYNC_INTERRUPT 1
#define XPAR_MICROBLAZE_ASYNC_WAKEUP 3
#define XPAR_MICROBLAZE_AVOID_PRIMITIVES 0
#define XPAR_MICROBLAZE_BASE_VECTORS 0x0000000000000000
#define XPAR_MICROBLAZE_BRANCH_TARGET_CACHE_SIZE 0
#define XPAR_MICROBLAZE_CACHE_BYTE_SIZE 8192
#define XPAR_MICROBLAZE_DADDR_SIZE 32
#define XPAR_MICROBLAZE_DATA_SIZE 32
#define XPAR_MICROBLAZE_DCACHE_ADDR_TAG 0
#define XPAR_MICROBLAZE_DCACHE_ALWAYS_USED 0
#define XPAR_MICROBLAZE_DCACHE_BASEADDR 0x00000000
#define XPAR_MICROBLAZE_DCACHE_BYTE_SIZE 8192
#define XPAR_MICROBLAZE_DCACHE_DATA_WIDTH 0
#define XPAR_MICROBLAZE_DCACHE_FORCE_TAG_LUTRAM 0
#define XPAR_MICROBLAZE_DCACHE_HIGHADDR 0x3FFFFFFF
#define XPAR_MICROBLAZE_DCACHE_LINE_LEN 4
#define XPAR_MICROBLAZE_DCACHE_USE_WRITEBACK 0
#define XPAR_MICROBLAZE_DCACHE_VICTIMS 0
#define XPAR_MICROBLAZE_DC_AXI_MON 0
#define XPAR_MICROBLAZE_DEBUG_COUNTER_WIDTH 32
#define XPAR_MICROBLAZE_DEBUG_ENABLED 2
#define XPAR_MICROBLAZE_DEBUG_EVENT_COUNTERS 0
#define XPAR_MICROBLAZE_DEBUG_EXTERNAL_TRACE 0
#define XPAR_MICROBLAZE_DEBUG_INTERFACE 0
#define XPAR_MICROBLAZE_DEBUG_LATENCY_COUNTERS 0
#define XPAR_MICROBLAZE_DEBUG_PROFILE_SIZE 0
#define XPAR_MICROBLAZE_DEBUG_TRACE_ASYNC_RESET 0
#define XPAR_MICROBLAZE_DEBUG_TRACE_SIZE 8192
#define XPAR_MICROBLAZE_DIV_ZERO_EXCEPTION 0
#define XPAR_MICROBLAZE_DP_AXI_MON 0
#define XPAR_MICROBLAZE_DYNAMIC_BUS_SIZING 0
#define XPAR_MICROBLAZE_D_AXI 1
#define XPAR_MICROBLAZE_D_LMB 1
#define XPAR_MICROBLAZE_D_LMB_MON 0
#define XPAR_MICROBLAZE_ECC_USE_CE_EXCEPTION 0
#define XPAR_MICROBLAZE_EDGE_IS_POSITIVE 1
#define XPAR_MICROBLAZE_ENABLE_DISCRETE_PORTS 0
#define XPAR_MICROBLAZE_ENDIANNESS 1
#define XPAR_MICROBLAZE_FAULT_TOLERANT 0
#define XPAR_MICROBLAZE_FPU_EXCEPTION 0
#define XPAR_MICROBLAZE_FREQ 100000000
#define XPAR_MICROBLAZE_FSL_EXCEPTION 0
#define XPAR_MICROBLAZE_FSL_LINKS 1
#define XPAR_MICROBLAZE_IADDR_SIZE 32
#define XPAR_MICROBLAZE_ICACHE_ALWAYS_USED 0
#define XPAR_MICROBLAZE_ICACHE_BASEADDR 0x00000000
#define XPAR_MICROBLAZE_ICACHE_DATA_WIDTH 0
#define XPAR_MICROBLAZE_ICACHE_FORCE_TAG_LUTRAM 0
#define XPAR_MICROBLAZE_ICACHE_HIGHADDR 0x3FFFFFFF
#define XPAR_MICROBLAZE_ICACHE_LINE_LEN 4
#define XPAR_MICROBLAZE_ICACHE_STREAMS 0
#define XPAR_MICROBLAZE_ICACHE_VICTIMS 0
#define XPAR_MICROBLAZE_IC_AXI_MON 0
#define XPAR_MICROBLAZE_ILL_OPCODE_EXCEPTION 0
#define XPAR_MICROBLAZE_IMPRECISE_EXCEPTIONS 0
#define XPAR_MICROBLAZE_INSTR_SIZE 32
#define XPAR_MICROBLAZE_INTERCONNECT 2
#define XPAR_MICROBLAZE_INTERRUPT_IS_EDGE 1
#define XPAR_MICROBLAZE_INTERRUPT_MON 0
#define XPAR_MICROBLAZE_IP_AXI_MON 0
#define XPAR_MICROBLAZE_I_AXI 1
#define XPAR_MICROBLAZE_I_LMB 1
#define XPAR_MICROBLAZE_I_LMB_MON 0
#define XPAR_MICROBLAZE_LOCKSTEP_MASTER 0
#define XPAR_MICROBLAZE_LOCKSTEP_SELECT 0
#define XPAR_MICROBLAZE_LOCKSTEP_SLAVE 0
#define XPAR_MICROBLAZE_M0_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M0_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M1_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M1_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M2_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M2_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M3_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M3_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M4_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M4_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M5_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M5_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M6_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M6_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M7_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M7_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M8_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M8_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M9_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M9_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M10_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M10_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M11_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M11_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M12_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M12_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M13_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M13_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M14_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M14_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_M15_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M15_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_MMU_DTLB_SIZE 4
#define XPAR_MICROBLAZE_MMU_ITLB_SIZE 2
#define XPAR_MICROBLAZE_MMU_PRIVILEGED_INSTR 0
#define XPAR_MICROBLAZE_MMU_TLB_ACCESS 3
#define XPAR_MICROBLAZE_MMU_ZONES 16
#define XPAR_MICROBLAZE_M_AXI_DC_ADDR_WIDTH 32
#define XPAR_MICROBLAZE_M_AXI_DC_ARUSER_WIDTH 5
#define XPAR_MICROBLAZE_M_AXI_DC_AWUSER_WIDTH 5
#define XPAR_MICROBLAZE_M_AXI_DC_BUSER_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_DC_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M_AXI_DC_EXCLUSIVE_ACCESS 0
#define XPAR_MICROBLAZE_M_AXI_DC_RUSER_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_DC_THREAD_ID_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_DC_USER_SIGNALS 0
#define XPAR_MICROBLAZE_M_AXI_DC_USER_VALUE 31
#define XPAR_MICROBLAZE_M_AXI_DC_WUSER_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_DP_ADDR_WIDTH 32
#define XPAR_MICROBLAZE_M_AXI_DP_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M_AXI_DP_EXCLUSIVE_ACCESS 0
#define XPAR_MICROBLAZE_M_AXI_DP_THREAD_ID_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_D_BUS_EXCEPTION 0
#define XPAR_MICROBLAZE_M_AXI_IC_ADDR_WIDTH 32
#define XPAR_MICROBLAZE_M_AXI_IC_ARUSER_WIDTH 5
#define XPAR_MICROBLAZE_M_AXI_IC_AWUSER_WIDTH 5
#define XPAR_MICROBLAZE_M_AXI_IC_BUSER_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_IC_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M_AXI_IC_RUSER_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_IC_THREAD_ID_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_IC_USER_SIGNALS 0
#define XPAR_MICROBLAZE_M_AXI_IC_USER_VALUE 31
#define XPAR_MICROBLAZE_M_AXI_IC_WUSER_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_IP_ADDR_WIDTH 32
#define XPAR_MICROBLAZE_M_AXI_IP_DATA_WIDTH 32
#define XPAR_MICROBLAZE_M_AXI_IP_THREAD_ID_WIDTH 1
#define XPAR_MICROBLAZE_M_AXI_I_BUS_EXCEPTION 0
#define XPAR_MICROBLAZE_NUMBER_OF_PC_BRK 2
#define XPAR_MICROBLAZE_NUMBER_OF_RD_ADDR_BRK 0
#define XPAR_MICROBLAZE_NUMBER_OF_WR_ADDR_BRK 0
#define XPAR_MICROBLAZE_NUM_SYNC_FF_CLK 2
#define XPAR_MICROBLAZE_NUM_SYNC_FF_CLK_DEBUG 2
#define XPAR_MICROBLAZE_NUM_SYNC_FF_CLK_IRQ 1
#define XPAR_MICROBLAZE_NUM_SYNC_FF_DBG_CLK 1
#define XPAR_MICROBLAZE_NUM_SYNC_FF_DBG_TRACE_CLK 2
#define XPAR_MICROBLAZE_OPCODE_0X0_ILLEGAL 0
#define XPAR_MICROBLAZE_OPTIMIZATION 0
#define XPAR_MICROBLAZE_PC_WIDTH 32
#define XPAR_MICROBLAZE_PIADDR_SIZE 32
#define XPAR_MICROBLAZE_PVR 0
#define XPAR_MICROBLAZE_PVR_USER1 0x00
#define XPAR_MICROBLAZE_PVR_USER2 0x00000000
#define XPAR_MICROBLAZE_RESET_MSR 0x00000000
#define XPAR_MICROBLAZE_RESET_MSR_BIP 0
#define XPAR_MICROBLAZE_RESET_MSR_DCE 0
#define XPAR_MICROBLAZE_RESET_MSR_EE 0
#define XPAR_MICROBLAZE_RESET_MSR_EIP 0
#define XPAR_MICROBLAZE_RESET_MSR_ICE 0
#define XPAR_MICROBLAZE_RESET_MSR_IE 0
#define XPAR_MICROBLAZE_S0_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S0_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S1_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S1_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S2_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S2_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S3_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S3_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S4_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S4_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S5_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S5_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S6_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S6_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S7_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S7_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S8_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S8_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S9_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S9_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S10_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S10_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S11_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S11_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S12_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S12_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S13_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S13_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S14_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S14_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_S15_AXIS_DATA_WIDTH 32
#define XPAR_MICROBLAZE_S15_AXIS_PROTOCOL GENERIC
#define XPAR_MICROBLAZE_SCO 0
#define XPAR_MICROBLAZE_TRACE 0
#define XPAR_MICROBLAZE_UNALIGNED_EXCEPTIONS 0
#define XPAR_MICROBLAZE_USE_BARREL 1
#define XPAR_MICROBLAZE_USE_BRANCH_TARGET_CACHE 0
#define XPAR_MICROBLAZE_USE_CONFIG_RESET 0
#define XPAR_MICROBLAZE_USE_DCACHE 0
#define XPAR_MICROBLAZE_USE_DIV 1
#define XPAR_MICROBLAZE_USE_EXTENDED_FSL_INSTR 0
#define XPAR_MICROBLAZE_USE_EXT_BRK 0
#define XPAR_MICROBLAZE_USE_EXT_NM_BRK 0
#define XPAR_MICROBLAZE_USE_FPU 0
#define XPAR_MICROBLAZE_USE_HW_MUL 1
#define XPAR_MICROBLAZE_USE_ICACHE 0
#define XPAR_MICROBLAZE_USE_INTERRUPT 1
#define XPAR_MICROBLAZE_USE_MMU 0
#define XPAR_MICROBLAZE_USE_MSR_INSTR 0
#define XPAR_MICROBLAZE_USE_NON_SECURE 0
#define XPAR_MICROBLAZE_USE_PCMP_INSTR 0
#define XPAR_MICROBLAZE_USE_REORDER_INSTR 1
#define XPAR_MICROBLAZE_USE_STACK_PROTECTION 0
#define XPAR_MICROBLAZE_COMPONENT_NAME system_microblaze_0_0
#define XPAR_MICROBLAZE_EDK_IPTYPE PROCESSOR
#define XPAR_MICROBLAZE_EDK_SPECIAL microblaze
#define XPAR_MICROBLAZE_G_TEMPLATE_LIST 0
#define XPAR_MICROBLAZE_G_USE_EXCEPTIONS 0



#define STDIN_BASEADDRESS 0xE0000000
#define STDOUT_BASEADDRESS 0xE0000000




#define XPAR_PWM_NUM_INSTANCES 1


#define XPAR_RGB_PWM_0_DEVICE_ID 0
#define XPAR_RGB_PWM_0_PWM_AXI_BASEADDR 0x04A10000
#define XPAR_RGB_PWM_0_PWM_AXI_HIGHADDR 0x04A1FFFF





#define XPAR_XAXIDMA_NUM_INSTANCES 1


#define XPAR_AXI_DMA_0_DEVICE_ID 0
#define XPAR_AXI_DMA_0_BASEADDR 0x04B10000
#define XPAR_AXI_DMA_0_HIGHADDR 0x04B1FFFF
#define XPAR_AXI_DMA_0_SG_INCLUDE_STSCNTRL_STRM 0
#define XPAR_AXI_DMA_0_INCLUDE_MM2S_DRE 0
#define XPAR_AXI_DMA_0_INCLUDE_S2MM_DRE 0
#define XPAR_AXI_DMA_0_INCLUDE_MM2S 1
#define XPAR_AXI_DMA_0_INCLUDE_S2MM 0
#define XPAR_AXI_DMA_0_M_AXI_MM2S_DATA_WIDTH 32
#define XPAR_AXI_DMA_0_M_AXI_S2MM_DATA_WIDTH 32
#define XPAR_AXI_DMA_0_INCLUDE_SG 0
#define XPAR_AXI_DMA_0_ENABLE_MULTI_CHANNEL 0
#define XPAR_AXI_DMA_0_NUM_MM2S_CHANNELS 1
#define XPAR_AXI_DMA_0_NUM_S2MM_CHANNELS 1
#define XPAR_AXI_DMA_0_MM2S_BURST_SIZE 16
#define XPAR_AXI_DMA_0_S2MM_BURST_SIZE 16
#define XPAR_AXI_DMA_0_MICRO_DMA 0
#define XPAR_AXI_DMA_0_ADDR_WIDTH 32





#define XPAR_AXIDMA_0_DEVICE_ID XPAR_AXI_DMA_0_DEVICE_ID
#define XPAR_AXIDMA_0_BASEADDR 0x04B10000
#define XPAR_AXIDMA_0_SG_INCLUDE_STSCNTRL_STRM 0
#define XPAR_AXIDMA_0_INCLUDE_MM2S 1
#define XPAR_AXIDMA_0_INCLUDE_MM2S_DRE 0
#define XPAR_AXIDMA_0_M_AXI_MM2S_DATA_WIDTH 32
#define XPAR_AXIDMA_0_INCLUDE_S2MM 0
#define XPAR_AXIDMA_0_INCLUDE_S2MM_DRE 0
#define XPAR_AXIDMA_0_M_AXI_S2MM_DATA_WIDTH 32
#define XPAR_AXIDMA_0_INCLUDE_SG 0
#define XPAR_AXIDMA_0_ENABLE_MULTI_CHANNEL 0
#define XPAR_AXIDMA_0_NUM_MM2S_CHANNELS 1
#define XPAR_AXIDMA_0_NUM_S2MM_CHANNELS 1
#define XPAR_AXIDMA_0_MM2S_BURST_SIZE 16
#define XPAR_AXIDMA_0_S2MM_BURST_SIZE 16
#define XPAR_AXIDMA_0_MICRO_DMA 0
#define XPAR_AXIDMA_0_c_addr_width 32





#define XPAR_BIRDWTCH_IFACE_NUM_INSTANCES 1


#define XPAR_BIRDWTCH_IFACE_0_DEVICE_ID 0
#define XPAR_BIRDWTCH_IFACE_0_S00_AXI_BASEADDR 0x43C00000
#define XPAR_BIRDWTCH_IFACE_0_S00_AXI_HIGHADDR 0x43C0FFFF





#define XPAR_XBRAM_NUM_INSTANCES 4U


#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_DEVICE_ID 0U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_DATA_WIDTH 32U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_ECC 0U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_FAULT_INJECT 0U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_CE_FAILING_REGISTERS 0U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_UE_FAILING_REGISTERS 0U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_ECC_STATUS_REGISTERS 0U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_CE_COUNTER_WIDTH 0U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_ECC_ONOFF_REGISTER 0U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_ECC_ONOFF_RESET_VALUE 1U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_WRITE_ACCESS 2U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_BASEADDR 0x00000000U
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_HIGHADDR 0x0001FFFFU
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_S_AXI_CTRL_BASEADDR 0xFFFFFFFFU
#define XPAR_DATA_LMB_BRAM_IF_CNTLR_1_S_AXI_CTRL_HIGHADDR 0xFFFFFFFFU



#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_DEVICE_ID 1U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_DATA_WIDTH 32U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_ECC 0U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_FAULT_INJECT 0U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_CE_FAILING_REGISTERS 0U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_UE_FAILING_REGISTERS 0U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_ECC_STATUS_REGISTERS 0U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_CE_COUNTER_WIDTH 0U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_ECC_ONOFF_REGISTER 0U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_ECC_ONOFF_RESET_VALUE 1U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_WRITE_ACCESS 2U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_BASEADDR 0x00000000U
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_HIGHADDR 0x0001FFFFU
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_S_AXI_CTRL_BASEADDR 0xFFFFFFFFU
#define XPAR_INS_LMB_BRAM_IF_CNTLR_0_S_AXI_CTRL_HIGHADDR 0xFFFFFFFFU



#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_DEVICE_ID 2U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_DATA_WIDTH 32U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_ECC 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_FAULT_INJECT 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_CE_FAILING_REGISTERS 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_UE_FAILING_REGISTERS 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_ECC_STATUS_REGISTERS 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_CE_COUNTER_WIDTH 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_ECC_ONOFF_REGISTER 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_ECC_ONOFF_RESET_VALUE 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_WRITE_ACCESS 0U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_S_AXI_BASEADDR 0xC0000000U
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_S_AXI_HIGHADDR 0xC0007FFFU
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_S_AXI_CTRL_BASEADDR 0xFFFFFFFFU
#define XPAR_MB_DMA_AXI_BRAM_CTRL_0_S_AXI_CTRL_HIGHADDR 0xFFFFFFFFU



#define XPAR_SHARE_AXI_BRAM_CTRL_0_DEVICE_ID 3U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_DATA_WIDTH 32U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_ECC 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_FAULT_INJECT 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_CE_FAILING_REGISTERS 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_UE_FAILING_REGISTERS 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_ECC_STATUS_REGISTERS 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_CE_COUNTER_WIDTH 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_ECC_ONOFF_REGISTER 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_ECC_ONOFF_RESET_VALUE 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_WRITE_ACCESS 0U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_S_AXI_BASEADDR 0x04B00000U
#define XPAR_SHARE_AXI_BRAM_CTRL_0_S_AXI_HIGHADDR 0x04B01FFFU
#define XPAR_SHARE_AXI_BRAM_CTRL_0_S_AXI_CTRL_BASEADDR 0xFFFFFFFFU
#define XPAR_SHARE_AXI_BRAM_CTRL_0_S_AXI_CTRL_HIGHADDR 0xFFFFFFFFU





#define XPAR_BRAM_0_DEVICE_ID XPAR_DATA_LMB_BRAM_IF_CNTLR_1_DEVICE_ID
#define XPAR_BRAM_0_DATA_WIDTH 32U
#define XPAR_BRAM_0_ECC 0U
#define XPAR_BRAM_0_FAULT_INJECT 0U
#define XPAR_BRAM_0_CE_FAILING_REGISTERS 0U
#define XPAR_BRAM_0_UE_FAILING_REGISTERS 0U
#define XPAR_BRAM_0_ECC_STATUS_REGISTERS 0U
#define XPAR_BRAM_0_CE_COUNTER_WIDTH 0U
#define XPAR_BRAM_0_ECC_ONOFF_REGISTER 0U
#define XPAR_BRAM_0_ECC_ONOFF_RESET_VALUE 1U
#define XPAR_BRAM_0_WRITE_ACCESS 2U
#define XPAR_BRAM_0_BASEADDR 0x00000000U
#define XPAR_BRAM_0_HIGHADDR 0x0001FFFFU


#define XPAR_BRAM_1_DEVICE_ID XPAR_INS_LMB_BRAM_IF_CNTLR_0_DEVICE_ID
#define XPAR_BRAM_1_DATA_WIDTH 32U
#define XPAR_BRAM_1_ECC 0U
#define XPAR_BRAM_1_FAULT_INJECT 0U
#define XPAR_BRAM_1_CE_FAILING_REGISTERS 0U
#define XPAR_BRAM_1_UE_FAILING_REGISTERS 0U
#define XPAR_BRAM_1_ECC_STATUS_REGISTERS 0U
#define XPAR_BRAM_1_CE_COUNTER_WIDTH 0U
#define XPAR_BRAM_1_ECC_ONOFF_REGISTER 0U
#define XPAR_BRAM_1_ECC_ONOFF_RESET_VALUE 1U
#define XPAR_BRAM_1_WRITE_ACCESS 2U
#define XPAR_BRAM_1_BASEADDR 0x00000000U
#define XPAR_BRAM_1_HIGHADDR 0x0001FFFFU


#define XPAR_BRAM_2_DEVICE_ID XPAR_MB_DMA_AXI_BRAM_CTRL_0_DEVICE_ID
#define XPAR_BRAM_2_DATA_WIDTH 32U
#define XPAR_BRAM_2_ECC 0U
#define XPAR_BRAM_2_FAULT_INJECT 0U
#define XPAR_BRAM_2_CE_FAILING_REGISTERS 0U
#define XPAR_BRAM_2_UE_FAILING_REGISTERS 0U
#define XPAR_BRAM_2_ECC_STATUS_REGISTERS 0U
#define XPAR_BRAM_2_CE_COUNTER_WIDTH 0U
#define XPAR_BRAM_2_ECC_ONOFF_REGISTER 0U
#define XPAR_BRAM_2_ECC_ONOFF_RESET_VALUE 0U
#define XPAR_BRAM_2_WRITE_ACCESS 0U
#define XPAR_BRAM_2_BASEADDR 0xC0000000U
#define XPAR_BRAM_2_HIGHADDR 0xC0007FFFU


#define XPAR_BRAM_3_DEVICE_ID XPAR_SHARE_AXI_BRAM_CTRL_0_DEVICE_ID
#define XPAR_BRAM_3_DATA_WIDTH 32U
#define XPAR_BRAM_3_ECC 0U
#define XPAR_BRAM_3_FAULT_INJECT 0U
#define XPAR_BRAM_3_CE_FAILING_REGISTERS 0U
#define XPAR_BRAM_3_UE_FAILING_REGISTERS 0U
#define XPAR_BRAM_3_ECC_STATUS_REGISTERS 0U
#define XPAR_BRAM_3_CE_COUNTER_WIDTH 0U
#define XPAR_BRAM_3_ECC_ONOFF_REGISTER 0U
#define XPAR_BRAM_3_ECC_ONOFF_RESET_VALUE 0U
#define XPAR_BRAM_3_WRITE_ACCESS 0U
#define XPAR_BRAM_3_BASEADDR 0x04B00000U
#define XPAR_BRAM_3_HIGHADDR 0x04B01FFFU





#define XPAR_XCLK_WIZ_NUM_INSTANCES 1


#define XPAR_CLK_WIZ_25M_DEVICE_ID 0
#define XPAR_CLK_WIZ_25M_BASEADDR 0x80010000
#define XPAR_CLK_WIZ_25M_HIGHADDR 0x8001FFFF
#define XPAR_CLK_WIZ_25M_ENABLE_CLOCK_MONITOR 0
#define XPAR_CLK_WIZ_25M_ENABLE_USER_CLOCK0 0
#define XPAR_CLK_WIZ_25M_ENABLE_USER_CLOCK1 0
#define XPAR_CLK_WIZ_25M_ENABLE_USER_CLOCK2 0
#define XPAR_CLK_WIZ_25M_ENABLE_USER_CLOCK3 0
#define XPAR_CLK_WIZ_25M_REF_CLK_FREQ 100.0
#define XPAR_CLK_WIZ_25M_USER_CLK_FREQ0 100.0
#define XPAR_CLK_WIZ_25M_USER_CLK_FREQ1 100.0
#define XPAR_CLK_WIZ_25M_USER_CLK_FREQ2 100.0
#define XPAR_CLK_WIZ_25M_USER_CLK_FREQ3 100.0
#define XPAR_CLK_WIZ_25M_PRECISION 1
#define XPAR_CLK_WIZ_25M_ENABLE_PLL0 0
#define XPAR_CLK_WIZ_25M_ENABLE_PLL1 0





#define XPAR_CLK_WIZ_0_DEVICE_ID XPAR_CLK_WIZ_25M_DEVICE_ID
#define XPAR_CLK_WIZ_0_BASEADDR 0x80010000
#define XPAR_CLK_WIZ_0_HIGHADDR 0x8001FFFF
#define XPAR_CLK_WIZ_0_ENABLE_CLOCK_MONITOR 0
#define XPAR_CLK_WIZ_0_ENABLE_USER_CLOCK0 0
#define XPAR_CLK_WIZ_0_ENABLE_USER_CLOCK1 0
#define XPAR_CLK_WIZ_0_ENABLE_USER_CLOCK2 0
#define XPAR_CLK_WIZ_0_ENABLE_USER_CLOCK3 0
#define XPAR_CLK_WIZ_0_REF_CLK_FREQ 100.0
#define XPAR_CLK_WIZ_0_USER_CLK_FREQ0 100.0
#define XPAR_CLK_WIZ_0_USER_CLK_FREQ1 100.0
#define XPAR_CLK_WIZ_0_USER_CLK_FREQ2 100.0
#define XPAR_CLK_WIZ_0_USER_CLK_FREQ3 100.0
#define XPAR_CLK_WIZ_0_PRECISION 1
#define XPAR_CLK_WIZ_0_Enable_PLL0 0
#define XPAR_CLK_WIZ_0_Enable_PLL1 0





#define XPAR_XEMACPS_NUM_INSTANCES 1


#define XPAR_PS7_ETHERNET_0_DEVICE_ID 0
#define XPAR_PS7_ETHERNET_0_BASEADDR 0xE000B000
#define XPAR_PS7_ETHERNET_0_HIGHADDR 0xE000BFFF
#define XPAR_PS7_ETHERNET_0_ENET_CLK_FREQ_HZ 125000000
#define XPAR_PS7_ETHERNET_0_ENET_SLCR_1000MBPS_DIV0 8
#define XPAR_PS7_ETHERNET_0_ENET_SLCR_1000MBPS_DIV1 1
#define XPAR_PS7_ETHERNET_0_ENET_SLCR_100MBPS_DIV0 8
#define XPAR_PS7_ETHERNET_0_ENET_SLCR_100MBPS_DIV1 5
#define XPAR_PS7_ETHERNET_0_ENET_SLCR_10MBPS_DIV0 8
#define XPAR_PS7_ETHERNET_0_ENET_SLCR_10MBPS_DIV1 50




#define XPAR_PS7_ETHERNET_0_IS_CACHE_COHERENT 0

#define XPAR_XEMACPS_0_DEVICE_ID XPAR_PS7_ETHERNET_0_DEVICE_ID
#define XPAR_XEMACPS_0_BASEADDR 0xE000B000
#define XPAR_XEMACPS_0_HIGHADDR 0xE000BFFF
#define XPAR_XEMACPS_0_ENET_CLK_FREQ_HZ 125000000
#define XPAR_XEMACPS_0_ENET_SLCR_1000Mbps_DIV0 8
#define XPAR_XEMACPS_0_ENET_SLCR_1000Mbps_DIV1 1
#define XPAR_XEMACPS_0_ENET_SLCR_100Mbps_DIV0 8
#define XPAR_XEMACPS_0_ENET_SLCR_100Mbps_DIV1 5
#define XPAR_XEMACPS_0_ENET_SLCR_10Mbps_DIV0 8
#define XPAR_XEMACPS_0_ENET_SLCR_10Mbps_DIV1 50






#define XPAR_PS7_M_AXI_GP0_S_AXI_BASEADDR 0x40000000
#define XPAR_PS7_M_AXI_GP0_S_AXI_HIGHADDR 0x7FFFFFFF
# 771 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xparameters.h"
#define XPAR_XGPIO_NUM_INSTANCES 1


#define XPAR_FIFO_COUNT_AXI_GPIO_0_BASEADDR 0x04B20000
#define XPAR_FIFO_COUNT_AXI_GPIO_0_HIGHADDR 0x04B2FFFF
#define XPAR_FIFO_COUNT_AXI_GPIO_0_DEVICE_ID 0
#define XPAR_FIFO_COUNT_AXI_GPIO_0_INTERRUPT_PRESENT 0
#define XPAR_FIFO_COUNT_AXI_GPIO_0_IS_DUAL 1





#define XPAR_GPIO_0_BASEADDR 0x04B20000
#define XPAR_GPIO_0_HIGHADDR 0x04B2FFFF
#define XPAR_GPIO_0_DEVICE_ID XPAR_FIFO_COUNT_AXI_GPIO_0_DEVICE_ID
#define XPAR_GPIO_0_INTERRUPT_PRESENT 0
#define XPAR_GPIO_0_IS_DUAL 1





#define XPAR_XGPIOPS_NUM_INSTANCES 1


#define XPAR_PS7_GPIO_0_DEVICE_ID 0
#define XPAR_PS7_GPIO_0_BASEADDR 0xE000A000
#define XPAR_PS7_GPIO_0_HIGHADDR 0xE000AFFF





#define XPAR_XGPIOPS_0_DEVICE_ID XPAR_PS7_GPIO_0_DEVICE_ID
#define XPAR_XGPIOPS_0_BASEADDR 0xE000A000
#define XPAR_XGPIOPS_0_HIGHADDR 0xE000AFFF





#define XPAR_XIICPS_NUM_INSTANCES 1


#define XPAR_PS7_I2C_0_DEVICE_ID 0
#define XPAR_PS7_I2C_0_BASEADDR 0xE0004000
#define XPAR_PS7_I2C_0_HIGHADDR 0xE0004FFF
#define XPAR_PS7_I2C_0_I2C_CLK_FREQ_HZ 108333336





#define XPAR_XIICPS_0_DEVICE_ID XPAR_PS7_I2C_0_DEVICE_ID
#define XPAR_XIICPS_0_BASEADDR 0xE0004000
#define XPAR_XIICPS_0_HIGHADDR 0xE0004FFF
#define XPAR_XIICPS_0_I2C_CLK_FREQ_HZ 108333336




#define XPAR_INTC_MAX_NUM_INTR_INPUTS 1
#define XPAR_XINTC_HAS_IPR 1
#define XPAR_XINTC_HAS_SIE 1
#define XPAR_XINTC_HAS_CIE 1
#define XPAR_XINTC_HAS_IVR 1

#define XPAR_XINTC_NUM_INSTANCES 1


#define XPAR_AXI_INTC_0_DEVICE_ID 0
#define XPAR_AXI_INTC_0_BASEADDR 0x04B30000
#define XPAR_AXI_INTC_0_HIGHADDR 0x04B3FFFF
#define XPAR_AXI_INTC_0_KIND_OF_INTR 0xFFFFFFFF
#define XPAR_AXI_INTC_0_HAS_FAST 0
#define XPAR_AXI_INTC_0_IVAR_RESET_VALUE 0x00000010
#define XPAR_AXI_INTC_0_NUM_INTR_INPUTS 1




#define XPAR_INTC_SINGLE_BASEADDR 0x04B30000
#define XPAR_INTC_SINGLE_HIGHADDR 0x04B3FFFF
#define XPAR_INTC_SINGLE_DEVICE_ID XPAR_AXI_INTC_0_DEVICE_ID
#define XPAR_AXI_INTC_0_TYPE 0U
#define XPAR_BIRDWTCH_IFACE_0_INT_MB_MASK 0X000001U
#define XPAR_AXI_INTC_0_BIRDWTCH_IFACE_0_INT_MB_INTR 0U




#define XPAR_INTC_0_DEVICE_ID XPAR_AXI_INTC_0_DEVICE_ID
#define XPAR_INTC_0_BASEADDR 0x04B30000U
#define XPAR_INTC_0_HIGHADDR 0x04B3FFFFU
#define XPAR_INTC_0_KIND_OF_INTR 0xFFFFFFFFU
#define XPAR_INTC_0_HAS_FAST 0U
#define XPAR_INTC_0_IVAR_RESET_VALUE 0x00000010U
#define XPAR_INTC_0_NUM_INTR_INPUTS 1U
#define XPAR_INTC_0_INTC_TYPE 0U

#define XPAR_INTC_0_BIRDWTCH_IFACE_0_VEC_ID XPAR_AXI_INTC_0_BIRDWTCH_IFACE_0_INT_MB_INTR




#define XPAR_XSDPS_NUM_INSTANCES 1


#define XPAR_PS7_SD_0_DEVICE_ID 0
#define XPAR_PS7_SD_0_BASEADDR 0xE0100000
#define XPAR_PS7_SD_0_HIGHADDR 0xE0100FFF
#define XPAR_PS7_SD_0_SDIO_CLK_FREQ_HZ 50000000
#define XPAR_PS7_SD_0_HAS_CD 1
#define XPAR_PS7_SD_0_HAS_WP 0
#define XPAR_PS7_SD_0_BUS_WIDTH 0
#define XPAR_PS7_SD_0_MIO_BANK 0
#define XPAR_PS7_SD_0_HAS_EMIO 0




#define XPAR_PS7_SD_0_IS_CACHE_COHERENT 0

#define XPAR_XSDPS_0_DEVICE_ID XPAR_PS7_SD_0_DEVICE_ID
#define XPAR_XSDPS_0_BASEADDR 0xE0100000
#define XPAR_XSDPS_0_HIGHADDR 0xE0100FFF
#define XPAR_XSDPS_0_SDIO_CLK_FREQ_HZ 50000000
#define XPAR_XSDPS_0_HAS_CD 1
#define XPAR_XSDPS_0_HAS_WP 0
#define XPAR_XSDPS_0_BUS_WIDTH 0
#define XPAR_XSDPS_0_MIO_BANK 0
#define XPAR_XSDPS_0_HAS_EMIO 0





#define XPAR_XSPIPS_NUM_INSTANCES 1


#define XPAR_PS7_SPI_0_DEVICE_ID 0
#define XPAR_PS7_SPI_0_BASEADDR 0xE0006000
#define XPAR_PS7_SPI_0_HIGHADDR 0xE0006FFF
#define XPAR_PS7_SPI_0_SPI_CLK_FREQ_HZ 166666672





#define XPAR_XSPIPS_0_DEVICE_ID XPAR_PS7_SPI_0_DEVICE_ID
#define XPAR_XSPIPS_0_BASEADDR 0xE0006000
#define XPAR_XSPIPS_0_HIGHADDR 0xE0006FFF
#define XPAR_XSPIPS_0_SPI_CLK_FREQ_HZ 166666672





#define XPAR_XUARTPS_NUM_INSTANCES 1


#define XPAR_PS7_UART_0_DEVICE_ID 0
#define XPAR_PS7_UART_0_BASEADDR 0xE0000000
#define XPAR_PS7_UART_0_HIGHADDR 0xE0000FFF
#define XPAR_PS7_UART_0_UART_CLK_FREQ_HZ 100000000
#define XPAR_PS7_UART_0_HAS_MODEM 0





#define XPAR_XUARTPS_0_DEVICE_ID XPAR_PS7_UART_0_DEVICE_ID
#define XPAR_XUARTPS_0_BASEADDR 0xE0000000
#define XPAR_XUARTPS_0_HIGHADDR 0xE0000FFF
#define XPAR_XUARTPS_0_UART_CLK_FREQ_HZ 100000000
#define XPAR_XUARTPS_0_HAS_MODEM 0





#define XPAR_XUSBPS_NUM_INSTANCES 1


#define XPAR_PS7_USB_0_DEVICE_ID 0
#define XPAR_PS7_USB_0_BASEADDR 0xE0002000
#define XPAR_PS7_USB_0_HIGHADDR 0xE0002FFF





#define XPAR_XUSBPS_0_DEVICE_ID XPAR_PS7_USB_0_DEVICE_ID
#define XPAR_XUSBPS_0_BASEADDR 0xE0002000
#define XPAR_XUSBPS_0_HIGHADDR 0xE0002FFF
# 34 "../src/platform.c" 2
# 1 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h" 1
# 68 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define XIL_CACHE_H 







# 1 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h" 1
# 50 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h"
#define _MICROBLAZE_INTERFACE_H_ 

# 1 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h" 1
# 57 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h"
#define XIL_TYPES_H 

# 1 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stdint.h" 1 3 4
# 9 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stdint.h" 3 4
# 1 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 1 3 4
# 10 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define _STDINT_H 

# 1 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 1 3 4





#define _MACHINE__DEFAULT_TYPES_H 

# 1 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 1 3 4
# 22 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 3 4
#define _SYS_FEATURES_H 





# 1 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/_newlib_version.h" 1 3 4



#define _NEWLIB_VERSION_H__ 1

#define _NEWLIB_VERSION "2.4.0"
#define __NEWLIB__ 2
#define __NEWLIB_MINOR__ 4
#define __NEWLIB_PATCHLEVEL__ 0
# 29 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 2 3 4




#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))






#define __GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)
# 128 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 3 4
#undef _DEFAULT_SOURCE
#define _DEFAULT_SOURCE 1



#undef _POSIX_SOURCE
#define _POSIX_SOURCE 1
#undef _POSIX_C_SOURCE
#define _POSIX_C_SOURCE 200809L
# 155 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 3 4
#undef _ATFILE_SOURCE
#define _ATFILE_SOURCE 1
# 242 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 3 4
#define __ATFILE_VISIBLE 1





#define __BSD_VISIBLE 1







#define __GNU_VISIBLE 0




#define __ISO_C_VISIBLE 2011
# 272 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 3 4
#define __LARGEFILE_VISIBLE 0



#define __MISC_VISIBLE 1





#define __POSIX_VISIBLE 200809
# 298 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 3 4
#define __SVID_VISIBLE 1
# 314 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/features.h" 3 4
#define __XSI_VISIBLE 0
# 9 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 2 3 4






#define __EXP(x) __ ##x ##__
# 27 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4

# 27 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4
typedef signed char __int8_t;

typedef unsigned char __uint8_t;



#define ___int8_t_defined 1







typedef short int __int16_t;

typedef short unsigned int __uint16_t;



#define ___int16_t_defined 1
# 63 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4
typedef long int __int32_t;

typedef long unsigned int __uint32_t;



#define ___int32_t_defined 1
# 89 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4
typedef long long int __int64_t;

typedef long long unsigned int __uint64_t;



#define ___int64_t_defined 1
# 120 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4
typedef signed char __int_least8_t;

typedef unsigned char __uint_least8_t;



#define ___int_least8_t_defined 1
# 146 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4
typedef short int __int_least16_t;

typedef short unsigned int __uint_least16_t;



#define ___int_least16_t_defined 1
# 168 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4
typedef long int __int_least32_t;

typedef long unsigned int __uint_least32_t;



#define ___int_least32_t_defined 1
# 186 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4
typedef long long int __int_least64_t;

typedef long long unsigned int __uint_least64_t;



#define ___int_least64_t_defined 1







typedef int __intptr_t;

typedef unsigned int __uintptr_t;
# 214 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine/_default_types.h" 3 4
#undef __EXP
# 13 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 2 3 4
# 1 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 1 3 4
# 10 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define _SYS__INTSUP_H 





#define __STDINT_EXP(x) __ ##x ##__
# 26 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __have_longlong64 1






#define __have_long32 1
# 49 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
       
       
       
       
       
       
       
#undef signed
#undef unsigned
#undef char
#undef short
#undef int
#undef __int20
#undef long
#define signed +0
#define unsigned +0
#define char +0
#define short +1
#define __int20 +2
#define int +2
#define long +4
# 78 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define _INTPTR_EQ_INT 






#define _INT32_EQ_LONG 







#define __INT8 "hh"
# 104 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __INT16 "h"
# 115 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __INT32 "l"
# 124 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __INT64 "ll"






#define __FAST8 
# 140 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __FAST16 






#define __FAST32 
# 158 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __FAST64 "ll"



#define __LEAST8 "hh"
# 173 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __LEAST16 "h"
# 184 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __LEAST32 "l"
# 193 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#define __LEAST64 "ll"

#undef signed
#undef unsigned
#undef char
#undef short
#undef int
#undef long
       
       
       
       
       
# 205 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_intsup.h" 3 4
#undef __int20
       
       
# 14 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 2 3 4
# 1 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_stdint.h" 1 3 4
# 10 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_stdint.h" 3 4
#define _SYS__STDINT_H 
# 19 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys/_stdint.h" 3 4
typedef __int8_t int8_t ;
typedef __uint8_t uint8_t ;
#define __int8_t_defined 1



typedef __int16_t int16_t ;
typedef __uint16_t uint16_t ;
#define __int16_t_defined 1



typedef __int32_t int32_t ;
typedef __uint32_t uint32_t ;
#define __int32_t_defined 1



typedef __int64_t int64_t ;
typedef __uint64_t uint64_t ;
#define __int64_t_defined 1


typedef __intptr_t intptr_t;
typedef __uintptr_t uintptr_t;
# 15 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 2 3 4






typedef __int_least8_t int_least8_t;
typedef __uint_least8_t uint_least8_t;
#define __int_least8_t_defined 1



typedef __int_least16_t int_least16_t;
typedef __uint_least16_t uint_least16_t;
#define __int_least16_t_defined 1



typedef __int_least32_t int_least32_t;
typedef __uint_least32_t uint_least32_t;
#define __int_least32_t_defined 1



typedef __int_least64_t int_least64_t;
typedef __uint_least64_t uint_least64_t;
#define __int_least64_t_defined 1
# 51 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
  typedef int int_fast8_t;
  typedef unsigned int uint_fast8_t;
#define __int_fast8_t_defined 1







  typedef int int_fast16_t;
  typedef unsigned int uint_fast16_t;
#define __int_fast16_t_defined 1







  typedef int int_fast32_t;
  typedef unsigned int uint_fast32_t;
#define __int_fast32_t_defined 1







  typedef long long int int_fast64_t;
  typedef long long unsigned int uint_fast64_t;
#define __int_fast64_t_defined 1
# 130 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
  typedef long long int intmax_t;
# 139 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
  typedef long long unsigned int uintmax_t;







#define INTPTR_MIN (-__INTPTR_MAX__ - 1)
#define INTPTR_MAX (__INTPTR_MAX__)
#define UINTPTR_MAX (__UINTPTR_MAX__)
# 171 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT8_MIN (-__INT8_MAX__ - 1)
#define INT8_MAX (__INT8_MAX__)
#define UINT8_MAX (__UINT8_MAX__)







#define INT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)
#define INT_LEAST8_MAX (__INT_LEAST8_MAX__)
#define UINT_LEAST8_MAX (__UINT_LEAST8_MAX__)
# 193 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT16_MIN (-__INT16_MAX__ - 1)
#define INT16_MAX (__INT16_MAX__)
#define UINT16_MAX (__UINT16_MAX__)







#define INT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)
#define INT_LEAST16_MAX (__INT_LEAST16_MAX__)
#define UINT_LEAST16_MAX (__UINT_LEAST16_MAX__)
# 215 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT32_MIN (-__INT32_MAX__ - 1)
#define INT32_MAX (__INT32_MAX__)
#define UINT32_MAX (__UINT32_MAX__)
# 231 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)
#define INT_LEAST32_MAX (__INT_LEAST32_MAX__)
#define UINT_LEAST32_MAX (__UINT_LEAST32_MAX__)
# 249 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT64_MIN (-__INT64_MAX__ - 1)
#define INT64_MAX (__INT64_MAX__)
#define UINT64_MAX (__UINT64_MAX__)
# 265 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)
#define INT_LEAST64_MAX (__INT_LEAST64_MAX__)
#define UINT_LEAST64_MAX (__UINT_LEAST64_MAX__)
# 281 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)
#define INT_FAST8_MAX (__INT_FAST8_MAX__)
#define UINT_FAST8_MAX (__UINT_FAST8_MAX__)
# 297 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)
#define INT_FAST16_MAX (__INT_FAST16_MAX__)
#define UINT_FAST16_MAX (__UINT_FAST16_MAX__)
# 313 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)
#define INT_FAST32_MAX (__INT_FAST32_MAX__)
#define UINT_FAST32_MAX (__UINT_FAST32_MAX__)
# 329 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)
#define INT_FAST64_MAX (__INT_FAST64_MAX__)
#define UINT_FAST64_MAX (__UINT_FAST64_MAX__)
# 345 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INTMAX_MAX (__INTMAX_MAX__)
#define INTMAX_MIN (-INTMAX_MAX - 1)







#define UINTMAX_MAX (__UINTMAX_MAX__)







#define SIZE_MAX (__SIZE_MAX__)





#define SIG_ATOMIC_MIN (-__STDINT_EXP(INT_MAX) - 1)
#define SIG_ATOMIC_MAX (__STDINT_EXP(INT_MAX))



#define PTRDIFF_MAX (__PTRDIFF_MAX__)



#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)




#define WCHAR_MIN (__WCHAR_MIN__)
# 393 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define WCHAR_MAX (__WCHAR_MAX__)
# 403 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define WINT_MAX (__WINT_MAX__)




#define WINT_MIN (__WINT_MIN__)






#define INT8_C(x) __INT8_C(x)
#define UINT8_C(x) __UINT8_C(x)
# 427 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT16_C(x) __INT16_C(x)
#define UINT16_C(x) __UINT16_C(x)
# 439 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT32_C(x) __INT32_C(x)
#define UINT32_C(x) __UINT32_C(x)
# 452 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INT64_C(x) __INT64_C(x)
#define UINT64_C(x) __UINT64_C(x)
# 468 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/stdint.h" 3 4
#define INTMAX_C(x) __INTMAX_C(x)
#define UINTMAX_C(x) __UINTMAX_C(x)
# 10 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stdint.h" 2 3 4



#define _GCC_WRAP_STDINT_H 
# 60 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h" 2
# 1 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 1 3 4
# 39 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#define _STDDEF_H 
#define _STDDEF_H_ 

#define _ANSI_STDDEF_H 
# 137 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#define _PTRDIFF_T 
#define _T_PTRDIFF_ 
#define _T_PTRDIFF 
#define __PTRDIFF_T 
#define _PTRDIFF_T_ 
#define _BSD_PTRDIFF_T_ 
#define ___int_ptrdiff_t_h 
#define _GCC_PTRDIFF_T 
#define _PTRDIFF_T_DECLARED 



typedef int ptrdiff_t;
# 161 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#undef __need_ptrdiff_t
# 187 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#define __size_t__ 
#define __SIZE_T__ 
#define _SIZE_T 
#define _SYS_SIZE_T_H 
#define _T_SIZE_ 
#define _T_SIZE 
#define __SIZE_T 
#define _SIZE_T_ 
#define _BSD_SIZE_T_ 
#define _SIZE_T_DEFINED_ 
#define _SIZE_T_DEFINED 
#define _BSD_SIZE_T_DEFINED_ 
#define _SIZE_T_DECLARED 
#define ___int_size_t_h 
#define _GCC_SIZE_T 
#define _SIZET_ 







#define __size_t 





typedef unsigned int size_t;
# 238 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#undef __need_size_t
# 267 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#define __wchar_t__ 
#define __WCHAR_T__ 
#define _WCHAR_T 
#define _T_WCHAR_ 
#define _T_WCHAR 
#define __WCHAR_T 
#define _WCHAR_T_ 
#define _BSD_WCHAR_T_ 
#define _WCHAR_T_DEFINED_ 
#define _WCHAR_T_DEFINED 
#define _WCHAR_T_H 
#define ___int_wchar_t_h 
#define __INT_WCHAR_T_H 
#define _GCC_WCHAR_T 
#define _WCHAR_T_DECLARED 
# 294 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#undef _BSD_WCHAR_T_
# 328 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
typedef int wchar_t;
# 347 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#undef __need_wchar_t
# 401 "/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include/stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL




#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)




#define _GCC_MAX_ALIGN_T 



typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
} max_align_t;
# 61 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h" 2




#define TRUE 1U



#define FALSE 0U






#define XIL_COMPONENT_IS_READY 0x11111111U



#define XIL_COMPONENT_IS_STARTED 0x22222222U
# 94 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h"

# 94 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h"
typedef uint8_t u8;
typedef uint16_t u16;
typedef uint32_t u32;

#define __XUINT64__ 
typedef struct
{
 u32 Upper;
 u32 Lower;
} Xuint64;
# 115 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h"
#define XUINT64_MSW(x) ((x).Upper)
# 126 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h"
#define XUINT64_LSW(x) ((x).Lower)







typedef char char8;
typedef int8_t s8;
typedef int16_t s16;
typedef int32_t s32;
typedef int64_t s64;
typedef uint64_t u64;
typedef int sint32;

typedef intptr_t INTPTR;
typedef uintptr_t UINTPTR;
typedef ptrdiff_t PTRDIFF;


typedef long LONG;
typedef unsigned long ULONG;


#define ULONG64_HI_MASK 0xFFFFFFFF00000000U
#define ULONG64_LO_MASK ~ULONG64_HI_MASK
# 163 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h"
typedef void (*XInterruptHandler) (void *InstancePtr);





typedef void (*XExceptionHandler) (void *InstancePtr);
# 180 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_types.h"
#define UPPER_32_BITS(n) ((u32)(((n) >> 16) >> 16))






#define LOWER_32_BITS(n) ((u32)(n))
# 53 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h" 2
# 1 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_assert.h" 1
# 58 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_assert.h"
#define XIL_ASSERT_H 
# 72 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_assert.h"
#define XIL_ASSERT_NONE 0U
#define XIL_ASSERT_OCCURRED 1U
#define XNULL NULL

extern u32 Xil_AssertStatus;
extern s32 Xil_AssertWait;
extern void Xil_Assert(const char8 *File, s32 Line);
void XNullHandler(void *NullParameter);





typedef void (*Xil_AssertCallback) (const char8 *File, s32 Line);
# 105 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_assert.h"
#define Xil_AssertVoid(Expression) { if (Expression) { Xil_AssertStatus = XIL_ASSERT_NONE; } else { Xil_Assert(__FILE__, __LINE__); Xil_AssertStatus = XIL_ASSERT_OCCURRED; return; } }
# 130 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_assert.h"
#define Xil_AssertNonvoid(Expression) { if (Expression) { Xil_AssertStatus = XIL_ASSERT_NONE; } else { Xil_Assert(__FILE__, __LINE__); Xil_AssertStatus = XIL_ASSERT_OCCURRED; return 0; } }
# 150 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_assert.h"
#define Xil_AssertVoidAlways() { Xil_Assert(__FILE__, __LINE__); Xil_AssertStatus = XIL_ASSERT_OCCURRED; return; }
# 167 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_assert.h"
#define Xil_AssertNonvoidAlways() { Xil_Assert(__FILE__, __LINE__); Xil_AssertStatus = XIL_ASSERT_OCCURRED; return 0; }
# 186 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_assert.h"
void Xil_AssertSetCallback(Xil_AssertCallback Routine);
# 54 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h" 2
# 1 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_exception.h" 1
# 61 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_exception.h"
#define XIL_EXCEPTION_H 
# 75 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_exception.h"
#define XIL_EXCEPTION_ID_FIRST 0U
#define XIL_EXCEPTION_ID_FSL 0U
#define XIL_EXCEPTION_ID_UNALIGNED_ACCESS 1U
#define XIL_EXCEPTION_ID_ILLEGAL_OPCODE 2U
#define XIL_EXCEPTION_ID_M_AXI_I_EXCEPTION 3U
#define XIL_EXCEPTION_ID_IPLB_EXCEPTION 3U
#define XIL_EXCEPTION_ID_M_AXI_D_EXCEPTION 4U
#define XIL_EXCEPTION_ID_DPLB_EXCEPTION 4U
#define XIL_EXCEPTION_ID_DIV_BY_ZERO 5U
#define XIL_EXCEPTION_ID_FPU 6U
#define XIL_EXCEPTION_ID_STACK_VIOLATION 7U
#define XIL_EXCEPTION_ID_MMU 7U
#define XIL_EXCEPTION_ID_LAST XIL_EXCEPTION_ID_MMU




#define XIL_EXCEPTION_ID_INT 16U
# 101 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_exception.h"
typedef void (*Xil_ExceptionHandler)(void *Data);





typedef void (*XInterruptHandler) (void *InstancePtr);






extern void Xil_ExceptionRegisterHandler(u32 Id,
      Xil_ExceptionHandler Handler,
      void *Data);

extern void Xil_ExceptionRemoveHandler(u32 Id);

extern void Xil_ExceptionInit(void);
extern void Xil_ExceptionEnable(void);
extern void Xil_ExceptionDisable(void);
# 55 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h" 2




extern void microblaze_enable_interrupts(void);
extern void microblaze_disable_interrupts(void);
extern void microblaze_enable_icache(void);
extern void microblaze_disable_icache(void);
extern void microblaze_enable_dcache(void);
extern void microblaze_disable_dcache(void);
extern void microblaze_enable_exceptions(void);
extern void microblaze_disable_exceptions(void);
extern void microblaze_register_handler(XInterruptHandler Handler, void *DataPtr);
extern void microblaze_register_exception_handler(u32 ExceptionId, Xil_ExceptionHandler Handler, void *DataPtr);

extern void microblaze_invalidate_icache(void);
extern void microblaze_invalidate_dcache(void);
extern void microblaze_flush_dcache(void);
extern void microblaze_invalidate_icache_range(u32 cacheaddr, u32 len);
extern void microblaze_invalidate_dcache_range(u32 cacheaddr, u32 len);
extern void microblaze_flush_dcache_range(u32 cacheaddr, u32 len);
extern void microblaze_scrub(void);
extern void microblaze_invalidate_cache_ext(void);
extern void microblaze_flush_cache_ext(void);
extern void microblaze_flush_cache_ext_range(u32 cacheaddr,
   u32 len);
extern void microblaze_invalidate_cache_ext_range(u32 cacheaddr,
   u32 len);


extern void microblaze_update_icache (s32 , s32 , s32 ) __attribute__((deprecated));
extern void microblaze_init_icache_range (s32 , s32 ) __attribute__((deprecated));
extern void microblaze_update_dcache (s32 , s32 , s32 ) __attribute__((deprecated));
extern void microblaze_init_dcache_range (s32 , s32 ) __attribute__((deprecated));


#define stringify(s) tostring(s)
#define tostring(s) #s




#define getfsl(val,id) asm volatile ("get\t%0,rfsl" stringify(id) : "=d" (val))
#define putfsl(val,id) asm volatile ("put\t%0,rfsl" stringify(id) :: "d" (val))


#define ngetfsl(val,id) asm volatile ("nget\t%0,rfsl" stringify(id) : "=d" (val))
#define nputfsl(val,id) asm volatile ("nput\t%0,rfsl" stringify(id) :: "d" (val))


#define cgetfsl(val,id) asm volatile ("cget\t%0,rfsl" stringify(id) : "=d" (val))
#define cputfsl(val,id) asm volatile ("cput\t%0,rfsl" stringify(id) :: "d" (val))


#define ncgetfsl(val,id) asm volatile ("ncget\t%0,rfsl" stringify(id) : "=d" (val))
#define ncputfsl(val,id) asm volatile ("ncput\t%0,rfsl" stringify(id) :: "d" (val))


#define getfsl_interruptible(val,id) asm volatile ("\n1:\n\tnget\t%0,rfsl" stringify(id) "\n\t" "addic\tr18,r0,0\n\t" "bnei\tr18,1b\n" : "=d" (val) :: "r18")




#define putfsl_interruptible(val,id) asm volatile ("\n1:\n\tnput\t%0,rfsl" stringify(id) "\n\t" "addic\tr18,r0,0\n\t" "bnei\tr18,1b\n" :: "d" (val) : "r18")




#define cgetfsl_interruptible(val,id) asm volatile ("\n1:\n\tncget\t%0,rfsl" stringify(id) "\n\t" "addic\tr18,r0,0\n\t" "bnei\tr18,1b\n" : "=d" (val) :: "r18")




#define cputfsl_interruptible(val,id) asm volatile ("\n1:\n\tncput\t%0,rfsl" stringify(id) "\n\t" "addic\tr18,r0,0\n\t" "bnei\tr18,1b\n" :: "d" (val) : "r18")




#define fsl_isinvalid(result) asm volatile ("addic\t%0,r0,0" : "=d" (result))
#define fsl_iserror(error) asm volatile ("mfs\t%0,rmsr\n\t" "andi\t%0,%0,0x10" : "=d" (error))



#define clz(v) ({ u32 _rval; __asm__ __volatile__ ( "clz\t%0,%1\n" : "=d"(_rval): "d" (v) ); _rval; })






#define mbar(mask) ({ __asm__ __volatile__ ("mbar\t" stringify(mask) ); })
#define mb_sleep() ({ __asm__ __volatile__ ("sleep\t"); })
#define mb_hibernate() ({ __asm__ __volatile__ ("hibernate\t"); })
#define mb_suspend() ({ __asm__ __volatile__ ("suspend\t"); })
#define mb_swapb(v) ({ u32 _rval; __asm__ __volatile__ ( "swapb\t%0,%1\n" : "=d"(_rval) : "d" (v) ); _rval; })






#define mb_swaph(v) ({ u32 _rval; __asm__ __volatile__ ( "swaph\t%0,%1\n" : "=d"(_rval) : "d" (v) ); _rval; })
# 173 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h"
#define mfgpr(rn) ({ u32 _rval; __asm__ __volatile__ ( "or\t%0,r0," stringify(rn) "\n" : "=d"(_rval) ); _rval; })
# 184 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h"
#define mfmsr() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rmsr\n" : "=d"(_rval) ); _rval; })
# 195 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h"
#define mfear() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rear\n" : "=d"(_rval) ); _rval; })






#define mfeare() ({ u32 _rval; __asm__ __volatile__ ( "mfse\t%0,rear\n" : "=d"(_rval) ); _rval; })
# 212 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h"
#define mfesr() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,resr\n" : "=d"(_rval) ); _rval; })
# 223 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/mb_interface.h"
#define mffsr() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rfsr\n" : "=d"(_rval) ); _rval; })






#define mfpvr(rn) ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rpvr" stringify(rn) "\n" : "=d"(_rval) ); _rval; })






#define mfpvre(rn) ({ u32 _rval; __asm__ __volatile__ ( "mfse\t%0,rpvr" stringify(rn) "\n" : "=d"(_rval) ); _rval; })






#define mfbtr() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rbtr\n" : "=d"(_rval) ); _rval; })






#define mfedr() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,redr\n" : "=d"(_rval) ); _rval; })






#define mfpid() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rpid\n" : "=d"(_rval) ); _rval; })






#define mfzpr() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rzpr\n" : "=d"(_rval) ); _rval; })






#define mftlbx() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rtlbx\n" : "=d"(_rval) ); _rval; })






#define mftlblo() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rtlblo\n" : "=d"(_rval) ); _rval; })






#define mftlbhi() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rtlbhi\n" : "=d"(_rval) ); _rval; })






#define mfslr() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rslr\n" : "=d"(_rval) ); _rval; })






#define mfshr() ({ u32 _rval; __asm__ __volatile__ ( "mfs\t%0,rshr\n" : "=d"(_rval) ); _rval; })






#define mtgpr(rn,v) ({ __asm__ __volatile__ ( "or\t" stringify(rn) ",r0,%0\n" :: "d" (v) ); })




#define mtmsr(v) ({ __asm__ __volatile__ ( "mts\trmsr,%0\n\tnop\n" :: "d" (v) ); })





#define mtfsr(v) ({ __asm__ __volatile__ ( "mts\trfsr,%0\n\tnop\n" :: "d" (v) ); })




#define mtpid(v) ({ __asm__ __volatile__ ( "mts\trpid,%0\n\tnop\n" :: "d" (v) ); })




#define mtzpr(v) ({ __asm__ __volatile__ ( "mts\trzpr,%0\n\tnop\n" :: "d" (v) ); })




#define mttlbx(v) ({ __asm__ __volatile__ ( "mts\trtlbx,%0\n\tnop\n" :: "d" (v) ); })




#define mttlblo(v) ({ __asm__ __volatile__ ( "mts\trtlblo,%0\n\tnop\n" :: "d" (v) ); })




#define mttlbhi(v) ({ __asm__ __volatile__ ( "mts\trtlbhi,%0\n\tnop\n" :: "d" (v) ); })




#define mttlbsx(v) ({ __asm__ __volatile__ ( "mts\trtlbsx,%0\n\tnop\n" :: "d" (v) ); })




#define mtslr(v) ({ __asm__ __volatile__ ( "mts\trslr,%0\n\tnop\n" :: "d" (v) ); })




#define mtshr(v) ({ __asm__ __volatile__ ( "mts\trshr,%0\n\tnop\n" :: "d" (v) ); })




#define lwx(address) ({ u32 _rval; __asm__ __volatile__ ( "lwx\t%0,%1,r0\n" : "=d"(_rval) : "d" (address) ); _rval; })






#define lwr(address) ({ u32 _rval; __asm__ __volatile__ ( "lwr\t%0,%1,r0\n" : "=d"(_rval) : "d" (address) ); _rval; })







#define lwea(lladdr) ({ u32 _rval; __asm__ __volatile__ ( "lwea\t%0,%M1,%L1\n" : "=d"(_rval) : "d" (lladdr) ); _rval; })






#define lhur(address) ({ u32 _rval; __asm__ __volatile__ ( "lhur\t%0,%1,r0\n" : "=d"(_rval) : "d" (address) ); _rval; })






#define lhuea(lladdr) ({ u32 _rval; __asm__ __volatile__ ( "lhuea\t%0,%M1,%L1\n" : "=d"(_rval) : "d" (lladdr) ); _rval; })






#define lbur(address) ({ u32 _rval; __asm__ __volatile__ ( "lbur\t%0,%1,r0\n" : "=d"(_rval) : "d" (address) ); _rval; })






#define lbuea(lladdr) ({ u32 _rval; __asm__ __volatile__ ( "lbuea\t%0,%M1,%L1\n" : "=d"(_rval) : "d" (lladdr) ); _rval; })






#define swx(address,data) ({ __asm__ __volatile__ ( "swx\t%0,%1,r0\n" :: "d" (data), "d" (address) ); })




#define swr(address,data) ({ __asm__ __volatile__ ( "swr\t%0,%1,r0\n" :: "d" (data), "d" (address) ); })




#define swea(lladdr,data) ({ __asm__ __volatile__ ( "swea\t%0,%M1,%L1\n" :: "d" (data), "d" (lladdr) ); })




#define shr(address,data) ({ __asm__ __volatile__ ( "shr\t%0,%1,r0\n" :: "d" (data), "d" (address) ); })




#define shea(lladdr,data) ({ __asm__ __volatile__ ( "shea\t%0,%M1,%L1\n" :: "d" (data), "d" (lladdr) ); })




#define sbr(address,data) ({ __asm__ __volatile__ ( "sbr\t%0,%1,r0\n" :: "d" (data), "d" (address) ); })




#define sbea(lladdr,data) ({ __asm__ __volatile__ ( "sbea\t%0,%M1,%L1\n" :: "d" (data), "d" (lladdr) ); })




#define microblaze_getfpex_operand_a() ({ extern u32 mb_fpex_op_a; mb_fpex_op_a; })




#define microblaze_getfpex_operand_b() ({ extern u32 mb_fpex_op_b; mb_fpex_op_b; })





#define microblaze_bread_datafsl(val,id) getfsl(val,id)
#define microblaze_bwrite_datafsl(val,id) putfsl(val,id)
#define microblaze_nbread_datafsl(val,id) ngetfsl(val,id)
#define microblaze_nbwrite_datafsl(val,id) nputfsl(val,id)
#define microblaze_bread_cntlfsl(val,id) cgetfsl(val,id)
#define microblaze_bwrite_cntlfsl(val,id) cputfsl(val,id)
#define microblaze_nbread_cntlfsl(val,id) ncgetfsl(val,id)
#define microblaze_nbwrite_cntlfsl(val,id) ncputfsl(val,id)
# 77 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h" 2

# 1 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xparameters.h" 1
# 79 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h" 2
# 98 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1DCacheInvalidate() microblaze_invalidate_dcache()
# 114 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L2CacheInvalidate() microblaze_invalidate_cache_ext()
# 133 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1DCacheInvalidateRange(Addr,Len) microblaze_invalidate_dcache_range((Addr), (Len))
# 152 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L2CacheInvalidateRange(Addr,Len) microblaze_invalidate_cache_ext_range((Addr), (Len))
# 172 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1DCacheFlushRange(Addr,Len) microblaze_invalidate_dcache_range((Addr), (Len))
# 189 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L2CacheFlushRange(Addr,Len) microblaze_flush_cache_ext_range((Addr), (Len))
# 204 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1DCacheFlush() microblaze_invalidate_dcache()
# 216 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L2CacheFlush() microblaze_flush_cache_ext()
# 229 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1ICacheInvalidateRange(Addr,Len) microblaze_invalidate_icache_range((Addr), (Len))
# 242 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1ICacheInvalidate() microblaze_invalidate_icache()
# 256 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1DCacheEnable() microblaze_enable_dcache()
# 269 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1DCacheDisable() microblaze_disable_dcache()
# 282 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1ICacheEnable() microblaze_enable_icache()
# 295 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_L1ICacheDisable() microblaze_disable_icache()
# 308 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_DCacheEnable() Xil_L1DCacheEnable()
# 323 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_ICacheEnable() Xil_L1ICacheEnable()
# 336 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_DCacheInvalidate() Xil_L2CacheInvalidate(); Xil_L1DCacheInvalidate();
# 356 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_DCacheInvalidateRange(Addr,Len) Xil_L2CacheInvalidateRange((Addr), (Len)); Xil_L1DCacheInvalidateRange((Addr), (Len));
# 370 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_DCacheFlush() Xil_L2CacheFlush(); Xil_L1DCacheFlush();
# 387 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_DCacheFlushRange(Addr,Len) Xil_L2CacheFlushRange((Addr), (Len)); Xil_L1DCacheFlushRange((Addr), (Len));
# 401 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_ICacheInvalidate() Xil_L2CacheInvalidate(); Xil_L1ICacheInvalidate();
# 421 "/ectf/mb/drm_audio_fw_bsp/microblaze_0/include/xil_cache.h"
#define Xil_ICacheInvalidateRange(Addr,Len) Xil_L2CacheInvalidateRange((Addr), (Len)); Xil_L1ICacheInvalidateRange((Addr), (Len));



void Xil_DCacheDisable(void);
void Xil_ICacheDisable(void);
# 35 "../src/platform.c" 2

# 1 "../src/platform_config.h" 1

#define __PLATFORM_CONFIG_H_ 

#define STDOUT_IS_PS7_UART 
#define UART_DEVICE_ID 0
# 37 "../src/platform.c" 2
# 52 "../src/platform.c"
void
enable_caches()
{





    microblaze_enable_icache();


    microblaze_enable_dcache();


}

void
disable_caches()
{


    Xil_DCacheDisable();


    Xil_ICacheDisable();


}

void
init_uart()
{





}

void
init_platform()
{
# 103 "../src/platform.c"
    enable_caches();
    init_uart();
}

void
cleanup_platform()
{
    disable_caches();
}
