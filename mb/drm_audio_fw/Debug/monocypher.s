	.section	.text.load24_le,"ax",@progbits
	.align	2
	.ent	load24_le
	.type	load24_le, @function
load24_le:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	lbui	r3,r5,1
	lbui	r4,r5,2
	bslli	r3,r3,8
	bslli	r4,r4,16
	or	r3,r3,r4
	lbui	r4,r5,0
	rtsd	r15, 8
	
	or	r3,r3,r4
	.end	load24_le
$Lfe1:
	.size	load24_le,$Lfe1-load24_le
	.section	.text.load32_le,"ax",@progbits
	.align	2
	.ent	load32_le
	.type	load32_le, @function
load32_le:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	lbui	r3,r5,1
	lbui	r4,r5,0
	bslli	r3,r3,8
	or	r3,r3,r4
	lbui	r4,r5,2
	bslli	r4,r4,16
	or	r4,r4,r3
	lbui	r3,r5,3
	bslli	r3,r3,24
	rtsd	r15, 8
	
	or	r3,r3,r4
	.end	load32_le
$Lfe2:
	.size	load32_le,$Lfe2-load32_le
	.section	.text.load64_le,"ax",@progbits
	.align	2
	.ent	load64_le
	.type	load64_le, @function
load64_le:
	.frame	r1,36,r15		# vars= 0, regs= 2, args= 24
	.mask	0x00488000
	addik	r1,r1,-36
	swi	r22,r1,32
	addk	r22,r5,r0
	swi	r15,r1,0
	brlid	r15,load32_le
	
	swi	r19,r1,28
	addk	r19,r3,r0
	brlid	r15,load32_le
	
	addik	r5,r22,4
	addk	r4,r3,r0
	lwi	r15,r1,0
	addk	r3,r19,r0
	lwi	r22,r1,32
	lwi	r19,r1,28
	rtsd	r15,8 
	
	addik	r1,r1,36
	.end	load64_le
$Lfe3:
	.size	load64_le,$Lfe3-load64_le
	.section	.text.store32_le,"ax",@progbits
	.align	2
	.ent	store32_le
	.type	store32_le, @function
store32_le:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	bsrli	r3,r6,8
	sbi	r6,r5,0
	sbi	r3,r5,1
	bsrli	r3,r6,16
	bsrli	r6,r6,24
	sbi	r3,r5,2
	rtsd	r15, 8
	
	sbi	r6,r5,3
	.end	store32_le
$Lfe4:
	.size	store32_le,$Lfe4-store32_le
	.section	.text.store64_le,"ax",@progbits
	.align	2
	.ent	store64_le
	.type	store64_le, @function
store64_le:
	.frame	r1,36,r15		# vars= 0, regs= 2, args= 24
	.mask	0x00488000
	addik	r1,r1,-36
	swi	r22,r1,32
	addk	r22,r7,r0
	swi	r15,r1,0
	swi	r19,r1,28
	brlid	r15,store32_le
	
	addk	r19,r5,r0
	addk	r6,r22,r0
	brlid	r15,store32_le
	
	addik	r5,r19,4
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	rtsd	r15,8 
	
	addik	r1,r1,36
	.end	store64_le
$Lfe5:
	.size	store64_le,$Lfe5-store64_le
	.section	.text.x16,"ax",@progbits
	.align	2
	.ent	x16
	.type	x16, @function
x16:
	.frame	r1,48,r15		# vars= 0, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-48
	swi	r25,r1,44
	addk	r25,r6,r0
	swi	r15,r1,0
	swi	r19,r1,28
	swi	r22,r1,32
	swi	r23,r1,36
	addk	r22,r5,r0
	brlid	r15,load64_le
	
	swi	r24,r1,40
	addk	r5,r25,r0
	addk	r23,r3,r0
	brlid	r15,load64_le
	
	addk	r19,r4,r0
	addik	r5,r22,8
	xor	r23,r23,r3
	brlid	r15,load64_le
	
	xor	r19,r19,r4
	addk	r24,r3,r0
	addk	r22,r4,r0
	brlid	r15,load64_le
	
	addik	r5,r25,8
	xor	r3,r24,r3
	xor	r4,r22,r4
	or	r3,r3,r23
	or	r4,r4,r19
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	rtsd	r15,8 
	
	addik	r1,r1,48
	.end	x16
$Lfe6:
	.size	x16,$Lfe6-x16
	.section	.text.x32,"ax",@progbits
	.align	2
	.ent	x32
	.type	x32, @function
x32:
	.frame	r1,44,r15		# vars= 0, regs= 4, args= 24
	.mask	0x01c88000
	addik	r1,r1,-44
	swi	r23,r1,36
	swi	r24,r1,40
	addk	r23,r5,r0
	addk	r24,r6,r0
	swi	r15,r1,0
	swi	r19,r1,28
	brlid	r15,x16
	
	swi	r22,r1,32
	addk	r22,r3,r0
	addk	r19,r4,r0
	addik	r6,r24,16
	brlid	r15,x16
	
	addik	r5,r23,16
	or	r3,r22,r3
	or	r4,r19,r4
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	rtsd	r15,8 
	
	addik	r1,r1,44
	.end	x32
$Lfe7:
	.size	x32,$Lfe7-x32
	.section	.text.chacha20_rounds,"ax",@progbits
	.align	2
	.ent	chacha20_rounds
	.type	chacha20_rounds, @function
chacha20_rounds:
	.frame	r1,44,r15		# vars= 0, regs= 10, args= 0
	.mask	0x7fc80000
	addik	r1,r1,-44
	swi	r27,r1,28
	swi	r19,r1,4
	swi	r22,r1,8
	swi	r23,r1,12
	swi	r24,r1,16
	swi	r25,r1,20
	swi	r26,r1,24
	swi	r28,r1,32
	swi	r29,r1,36
	swi	r30,r1,40
	lwi	r26,r6,0
	lwi	r25,r6,4
	lwi	r24,r6,8
	lwi	r23,r6,12
	lwi	r29,r6,16
	lwi	r9,r6,20
	lwi	r8,r6,24
	lwi	r7,r6,28
	lwi	r22,r6,32
	lwi	r28,r6,36
	lwi	r19,r6,40
	lwi	r12,r6,44
	lwi	r11,r6,48
	lwi	r10,r6,52
	lwi	r4,r6,56
	lwi	r3,r6,60
	addik	r27,r0,11	# 0xb
$L13:
	addik	r27,r27,-1
	bneid	r27,$L14
	addk	r26,r26,r29
	rsubk	r26,r29,r26
	swi	r26,r5,0
	swi	r25,r5,4
	swi	r24,r5,8
	swi	r23,r5,12
	swi	r29,r5,16
	swi	r22,r5,32
	swi	r28,r5,36
	swi	r19,r5,40
	lwi	r22,r1,8
	lwi	r19,r1,4
	lwi	r23,r1,12
	lwi	r24,r1,16
	lwi	r25,r1,20
	lwi	r26,r1,24
	lwi	r27,r1,28
	lwi	r28,r1,32
	lwi	r29,r1,36
	lwi	r30,r1,40
	swi	r9,r5,20
	swi	r8,r5,24
	swi	r7,r5,28
	swi	r12,r5,44
	swi	r11,r5,48
	swi	r10,r5,52
	swi	r4,r5,56
	swi	r3,r5,60
	rtsd	r15,8 
	
	addik	r1,r1,44
$L14:
	xor	r11,r11,r26
	bslli	r6,r11,16
	bsrli	r11,r11,16
	or	r11,r11,r6
	addk	r22,r22,r11
	xor	r6,r29,r22
	bslli	r29,r6,12
	bsrli	r6,r6,20
	or	r6,r6,r29
	addk	r26,r26,r6
	xor	r11,r11,r26
	bslli	r29,r11,8
	bsrli	r11,r11,24
	or	r11,r11,r29
	addk	r22,r22,r11
	xor	r6,r6,r22
	bslli	r29,r6,7
	bsrli	r6,r6,25
	addk	r25,r25,r9
	xor	r10,r10,r25
	or	r6,r6,r29
	bslli	r29,r10,16
	bsrli	r10,r10,16
	or	r10,r10,r29
	addk	r28,r28,r10
	xor	r9,r9,r28
	bslli	r29,r9,12
	bsrli	r9,r9,20
	or	r9,r9,r29
	addk	r25,r25,r9
	xor	r10,r10,r25
	bslli	r29,r10,8
	bsrli	r10,r10,24
	or	r10,r10,r29
	addk	r28,r28,r10
	xor	r9,r9,r28
	bslli	r29,r9,7
	bsrli	r9,r9,25
	addk	r24,r24,r8
	xor	r4,r4,r24
	or	r9,r9,r29
	bslli	r29,r4,16
	bsrli	r4,r4,16
	or	r4,r4,r29
	addk	r19,r19,r4
	xor	r8,r8,r19
	bslli	r29,r8,12
	bsrli	r8,r8,20
	or	r8,r8,r29
	addk	r24,r24,r8
	xor	r4,r4,r24
	bslli	r29,r4,8
	bsrli	r4,r4,24
	or	r4,r4,r29
	addk	r19,r19,r4
	xor	r8,r8,r19
	bslli	r29,r8,7
	bsrli	r8,r8,25
	addk	r23,r23,r7
	xor	r3,r3,r23
	or	r8,r8,r29
	bslli	r29,r3,16
	bsrli	r3,r3,16
	or	r3,r3,r29
	addk	r12,r12,r3
	xor	r7,r7,r12
	bslli	r29,r7,12
	bsrli	r7,r7,20
	or	r7,r7,r29
	addk	r23,r23,r7
	xor	r3,r3,r23
	bslli	r29,r3,8
	bsrli	r3,r3,24
	or	r3,r3,r29
	addk	r12,r12,r3
	xor	r7,r7,r12
	bslli	r29,r7,7
	bsrli	r7,r7,25
	addk	r26,r26,r9
	xor	r3,r3,r26
	or	r7,r7,r29
	bslli	r29,r3,16
	bsrli	r3,r3,16
	or	r3,r3,r29
	addk	r19,r19,r3
	xor	r9,r9,r19
	bslli	r29,r9,12
	bsrli	r9,r9,20
	or	r9,r9,r29
	addk	r26,r26,r9
	xor	r3,r3,r26
	bslli	r29,r3,8
	bsrli	r3,r3,24
	addk	r25,r25,r8
	xor	r11,r11,r25
	or	r3,r3,r29
	bslli	r29,r11,16
	bsrli	r11,r11,16
	or	r11,r11,r29
	addk	r12,r12,r11
	xor	r8,r8,r12
	bslli	r29,r8,12
	bsrli	r8,r8,20
	or	r8,r8,r29
	addk	r25,r25,r8
	xor	r11,r11,r25
	bslli	r29,r11,8
	bsrli	r11,r11,24
	addk	r24,r24,r7
	xor	r10,r10,r24
	or	r11,r11,r29
	bslli	r29,r10,16
	bsrli	r10,r10,16
	or	r10,r10,r29
	addk	r22,r22,r10
	xor	r7,r7,r22
	bslli	r29,r7,12
	bsrli	r7,r7,20
	or	r7,r7,r29
	addk	r24,r24,r7
	xor	r10,r10,r24
	bslli	r29,r10,8
	bsrli	r10,r10,24
	addk	r23,r6,r23
	xor	r4,r4,r23
	or	r10,r10,r29
	bslli	r29,r4,16
	bsrli	r4,r4,16
	or	r4,r4,r29
	addk	r28,r28,r4
	xor	r6,r6,r28
	bslli	r29,r6,12
	bsrli	r6,r6,20
	or	r6,r6,r29
	addk	r23,r23,r6
	xor	r4,r4,r23
	bslli	r29,r4,8
	bsrli	r4,r4,24
	or	r4,r4,r29
	addk	r19,r19,r3
	addk	r28,r28,r4
	xor	r6,r6,r28
	xor	r9,r9,r19
	bslli	r30,r6,7
	bsrli	r29,r6,25
	bslli	r6,r9,7
	bsrli	r9,r9,25
	addk	r12,r12,r11
	xor	r8,r8,r12
	addk	r22,r22,r10
	or	r9,r9,r6
	bslli	r6,r8,7
	bsrli	r8,r8,25
	xor	r7,r7,r22
	or	r8,r8,r6
	bslli	r6,r7,7
	bsrli	r7,r7,25
	or	r29,r29,r30
	brid	$L13
	or	r7,r7,r6
	.end	chacha20_rounds
$Lfe8:
	.size	chacha20_rounds,$Lfe8-chacha20_rounds
	.rodata
	.align	2
$LC0:
	.ascii "expa\0"
	.align	2
$LC1:
	.ascii "nd 3\0"
	.align	2
$LC2:
	.ascii "2-by\0"
	.align	2
$LC3:
	.ascii "te k\0"
	.section	.text.chacha20_init_key,"ax",@progbits
	.align	2
	.ent	chacha20_init_key
	.type	chacha20_init_key, @function
chacha20_init_key:
	.frame	r1,48,r15		# vars= 0, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-48
	swi	r19,r1,28
	addk	r19,r5,r0
	addik	r5,r0,$LC0
	swi	r15,r1,0
	swi	r23,r1,36
	swi	r24,r1,40
	swi	r25,r1,44
	swi	r22,r1,32
	brlid	r15,load32_le
	
	addk	r25,r6,r0
	addik	r5,r0,$LC1
	swi	r3,r19,0
	brlid	r15,load32_le
	
	addik	r23,r0,8	# 0x8
	addik	r5,r0,$LC2
	swi	r3,r19,4
	brlid	r15,load32_le
	
	addk	r24,r0,r0
	addik	r5,r0,$LC3
	brlid	r15,load32_le
	
	swi	r3,r19,8
	swi	r3,r19,12
$L17:
	addik	r22,r24,4
	bslli	r22,r22,2
	addik	r5,r22,-16
	brlid	r15,load32_le
	
	addk	r5,r25,r5
	sw	r3,r22,r19
	addik	r23,r23,-1
	bneid	r23,$L17
	addik	r24,r24,1
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	rtsd	r15,8 
	
	addik	r1,r1,48
	.end	chacha20_init_key
$Lfe9:
	.size	chacha20_init_key,$Lfe9-chacha20_init_key
	.section	.text.poly_block,"ax",@progbits
	.align	2
	.ent	poly_block
	.type	poly_block, @function
poly_block:
	.frame	r1,120,r15		# vars= 48, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-120
	swi	r19,r1,76
	addk	r19,r5,r0
	swi	r15,r1,0
	swi	r23,r1,84
	swi	r24,r1,88
	addk	r23,r0,r0
	swi	r25,r1,92
	swi	r26,r1,96
	swi	r31,r1,116
	swi	r22,r1,80
	swi	r27,r1,100
	swi	r28,r1,104
	swi	r29,r1,108
	swi	r30,r1,112
	lwi	r22,r5,16
	lwi	r4,r19,36
	addk	r5,r23,r0
	lwi	r27,r19,12
	lwi	r28,r19,4
	add	r6,r22,r4
	addc	r7,r23,r5
	swi	r6,r1,36
	swi	r7,r1,40
	lwi	r4,r19,40
	lwi	r6,r19,20
	addk	r7,r23,r0
	addk	r5,r23,r0
	bsrli	r31,r27,2
	bsrli	r26,r28,2
	add	r8,r6,r4
	addc	r9,r7,r5
	lwi	r6,r19,24
	lwi	r4,r19,44
	addk	r7,r23,r0
	addk	r5,r23,r0
	swi	r8,r1,44
	swi	r9,r1,48
	lwi	r29,r19,8
	add	r8,r6,r4
	addc	r9,r7,r5
	lwi	r6,r19,28
	addk	r7,r23,r0
	lwi	r4,r19,48
	addk	r5,r23,r0
	addk	r31,r31,r27
	swi	r8,r1,52
	swi	r9,r1,56
	add	r8,r6,r4
	addc	r9,r7,r5
	swi	r8,r1,60
	swi	r9,r1,64
	lwi	r22,r19,32
	lwi	r5,r1,44
	lwi	r6,r1,48
	lwi	r30,r19,52
	addk	r7,r31,r0
	addk	r8,r23,r0
	bsrli	r3,r29,2
	addk	r26,r26,r28
	addk	r30,r22,r30
	swi	r26,r1,28
	lwi	r22,r19,0
	brlid	r15,__muldi3
	
	addk	r26,r3,r29
	lwi	r7,r1,60
	lwi	r8,r1,64
	lwi	r5,r1,28
	addk	r6,r23,r0
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r22,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r26,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	bsrli	r3,r22,2
	mul	r3,r3,r30
	addk	r11,r23,r0
	muli	r10,r3,5
	add	r24,r24,r4
	addc	r25,r25,r5
	addk	r7,r28,r0
	lwi	r5,r1,36
	lwi	r6,r1,40
	addk	r8,r23,r0
	add	r10,r24,r10
	addc	r11,r25,r11
	swi	r10,r1,68
	brlid	r15,__muldi3
	
	swi	r11,r1,72
	lwi	r5,r1,44
	lwi	r6,r1,48
	addk	r7,r22,r0
	addk	r8,r23,r0
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r26,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r31,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	lwi	r9,r1,28
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r8,r23,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	mul	r4,r30,r9
	addk	r5,r23,r0
	add	r6,r24,r4
	addc	r7,r25,r5
	swi	r6,r1,28
	swi	r7,r1,32
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	
	addk	r7,r29,r0
	lwi	r5,r1,44
	lwi	r6,r1,48
	addk	r7,r28,r0
	addk	r8,r23,r0
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r22,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r31,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,36
	lwi	r8,r1,40
	addk	r6,r23,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	mul	r4,r30,r26
	addk	r5,r23,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	brlid	r15,__muldi3
	
	addk	r5,r27,r0
	lwi	r5,r1,44
	lwi	r6,r1,48
	addk	r7,r29,r0
	addk	r8,r23,r0
	addk	r26,r3,r0
	brlid	r15,__muldi3
	
	addk	r27,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r22,r0
	addk	r8,r23,r0
	add	r26,r26,r4
	addc	r27,r27,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	andi	r22,r22,3 #and1
	brlid	r15,__muldi3
	
	addk	r29,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r28,r0
	add	r26,r26,r4
	addc	r27,r27,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r10,r1,68
	lwi	r11,r1,72
	add	r26,r26,r4
	addc	r27,r27,r5
	mul	r4,r30,r31
	addk	r5,r23,r0
	mul	r30,r22,r30
	addk	r9,r23,r0
	add	r26,r26,r4
	addc	r27,r27,r5
	addk	r30,r30,r27
	bsrli	r3,r30,2
	addk	r4,r10,r0
	addk	r5,r23,r0
	muli	r8,r3,5
	addk	r6,r11,r0
	add	r8,r8,r4
	addc	r9,r9,r5
	addk	r7,r23,r0
	lwi	r4,r1,28
	addk	r5,r23,r0
	addk	r10,r9,r0
	addk	r11,r23,r0
	add	r6,r4,r6
	addc	r7,r5,r7
	lwi	r4,r1,32
	add	r6,r6,r10
	addc	r7,r7,r11
	addk	r5,r23,r0
	addk	r10,r24,r0
	addk	r11,r23,r0
	addk	r28,r7,r0
	addk	r7,r23,r0
	add	r4,r10,r4
	addc	r5,r11,r5
	add	r4,r4,r28
	addc	r5,r5,r29
	addk	r10,r25,r0
	addk	r11,r23,r0
	addk	r28,r26,r0
	addk	r29,r23,r0
	swi	r4,r19,24
	swi	r6,r19,20
	add	r28,r28,r10
	addc	r29,r29,r11
	addk	r10,r5,r0
	addk	r11,r23,r0
	addk	r5,r23,r0
	andi	r6,r30,3 #and1
	add	r28,r28,r10
	addc	r29,r29,r11
	addk	r4,r29,r0
	swi	r8,r19,16
	swi	r28,r19,28
	add	r4,r4,r6
	addc	r5,r5,r7
	swi	r4,r19,32
	lwi	r15,r1,0
	lwi	r19,r1,76
	lwi	r22,r1,80
	lwi	r23,r1,84
	lwi	r24,r1,88
	lwi	r25,r1,92
	lwi	r26,r1,96
	lwi	r27,r1,100
	lwi	r28,r1,104
	lwi	r29,r1,108
	lwi	r30,r1,112
	lwi	r31,r1,116
	rtsd	r15,8 
	
	addik	r1,r1,120
	.end	poly_block
$Lfe10:
	.size	poly_block,$Lfe10-poly_block
	.section	.text.blake2b_compress,"ax",@progbits
	.align	2
	.ent	blake2b_compress
	.type	blake2b_compress, @function
blake2b_compress:
	.frame	r1,264,r15		# vars= 216, regs= 11, args= 0
	.mask	0xffc80000
	addk	r3,r5,r0
	addik	r1,r1,-264
	swi	r19,r1,220
	swi	r22,r1,224
	swi	r23,r1,228
	swi	r24,r1,232
	swi	r25,r1,236
	swi	r26,r1,240
	swi	r27,r1,244
	swi	r28,r1,248
	swi	r29,r1,252
	swi	r30,r1,256
	swi	r31,r1,260
	lwi	r4,r5,0
	lwi	r5,r5,4
	lwi	r10,r3,32
	lwi	r11,r3,36
	lwi	r22,r3,80
	lwi	r23,r3,84
	lwi	r24,r3,32
	add	r8,r4,r10
	addc	r9,r5,r11
	lwi	r4,r3,64
	lwi	r5,r3,68
	lwi	r25,r3,36
	add	r8,r22,r8
	addc	r9,r23,r9
	xori	r4,r4,-1377402159
	xori	r5,r5,1359893119
	xor	r22,r5,r9
	xor	r23,r4,r8
	addi	r10,r22,0xf3bcc908
	addic	r11,r23,0x6a09e667
	xor	r12,r24,r10
	xor	r7,r25,r11
	lwi	r26,r3,88
	lwi	r27,r3,92
	bslli	r24,r7,8
	bsrli	r19,r12,24
	bsrli	r7,r7,24
	bslli	r12,r12,8
	or	r4,r24,r19
	or	r5,r12,r7
	add	r8,r8,r26
	addc	r9,r9,r27
	add	r28,r4,r8
	addc	r29,r5,r9
	xor	r8,r22,r28
	xor	r7,r23,r29
	bslli	r12,r7,16
	bsrli	r9,r8,16
	bsrli	r7,r7,16
	bslli	r8,r8,16
	or	r9,r12,r9
	or	r7,r8,r7
	swi	r7,r1,192
	swi	r9,r1,188
	lwi	r8,r1,188
	lwi	r9,r1,192
	lwi	r24,r3,40
	lwi	r25,r3,44
	lwi	r22,r3,8
	lwi	r23,r3,12
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r5,r5,r9
	xor	r4,r4,r8
	addk	r7,r5,r5
	bsrli	r5,r5,31
	swi	r8,r1,124
	swi	r9,r1,128
	bsrli	r8,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r3,96
	lwi	r27,r3,100
	swi	r4,r1,132
	lwi	r5,r3,76
	lwi	r4,r3,72
	add	r30,r22,r24
	addc	r31,r23,r25
	add	r30,r26,r30
	addc	r31,r27,r31
	xori	r4,r4,725511199
	xori	r5,r5,-1694144372
	xor	r11,r4,r30
	xor	r10,r5,r31
	addi	r4,r10,0x84caa73b
	addic	r5,r11,0xbb67ae85
	or	r7,r8,r7
	xor	r12,r24,r4
	swi	r28,r1,140
	swi	r29,r1,144
	swi	r7,r1,136
	lwi	r28,r3,104
	lwi	r29,r3,108
	xor	r7,r25,r5
	bslli	r22,r7,8
	bsrli	r19,r12,24
	bsrli	r7,r7,24
	bslli	r12,r12,8
	or	r8,r22,r19
	or	r9,r12,r7
	add	r30,r30,r28
	addc	r31,r31,r29
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r7,r11,r31
	xor	r10,r10,r30
	bslli	r12,r7,16
	bsrli	r11,r10,16
	bsrli	r7,r7,16
	bslli	r10,r10,16
	or	r11,r12,r11
	or	r7,r10,r7
	swi	r11,r1,196
	swi	r7,r1,200
	lwi	r24,r1,196
	lwi	r25,r1,200
	lwi	r26,r3,16
	lwi	r27,r3,20
	lwi	r10,r3,112
	lwi	r11,r3,116
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r8,r4,31
	addk	r7,r5,r5
	or	r29,r8,r7
	lwi	r8,r3,48
	lwi	r9,r3,52
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r28,r5,r4
	rsubk	r6,r6,r0
	add	r4,r26,r8
	addc	r5,r27,r9
	lwi	r12,r3,48
	addk	r8,r0,r6
	add	r9,r8,r8
	addc	r9,r0,r0
	beqi	r9,.+8
	addi	r9,r0,0xffffffff
	lwi	r22,r3,52
	add	r4,r10,r4
	addc	r5,r11,r5
	xori	r7,r9,528734635
	xori	r6,r6,-79577749
	xor	r10,r7,r5
	xor	r11,r6,r4
	addi	r6,r10,0xfe94f82b
	addic	r7,r11,0x3c6ef372
	xor	r19,r12,r6
	swi	r24,r1,60
	swi	r25,r1,64
	xor	r12,r22,r7
	lwi	r24,r3,120
	lwi	r25,r3,124
	bslli	r23,r12,8
	bsrli	r22,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r23,r22
	or	r9,r19,r12
	add	r4,r4,r24
	addc	r5,r5,r25
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r10,r26
	xor	r4,r11,r27
	bslli	r11,r4,16
	bsrli	r10,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r10,r11,r10
	or	r4,r5,r4
	swi	r10,r1,4
	swi	r4,r1,8
	lwi	r24,r1,4
	lwi	r25,r1,8
	swi	r26,r1,20
	swi	r27,r1,24
	lwi	r26,r3,24
	lwi	r27,r3,28
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r10,r5,r4
	lwi	r4,r3,56
	lwi	r5,r3,60
	lwi	r22,r3,128
	lwi	r23,r3,132
	or	r11,r9,r8
	add	r8,r26,r4
	addc	r9,r27,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r26,r3,60
	lwi	r23,r3,56
	xori	r24,r9,1541459225
	xori	r25,r8,327033209
	addi	r4,r24,0x5f1d36f1
	addic	r5,r25,0xa54ff53a
	xor	r19,r23,r4
	xor	r12,r26,r5
	bslli	r27,r12,8
	bsrli	r26,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r27,r26
	lwi	r26,r3,136
	lwi	r27,r3,140
	or	r23,r19,r12
	add	r8,r8,r26
	addc	r9,r9,r27
	add	r26,r22,r8
	addc	r27,r23,r9
	xor	r9,r24,r26
	xor	r8,r25,r27
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r3,144
	lwi	r23,r3,148
	swi	r26,r1,36
	swi	r27,r1,40
	or	r26,r9,r8
	lwi	r8,r1,140
	lwi	r9,r1,144
	or	r27,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r28,r8
	addc	r9,r29,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r24,r29,r28
	lwi	r28,r3,152
	lwi	r29,r3,156
	or	r25,r19,r12
	add	r8,r8,r28
	addc	r9,r9,r29
	add	r28,r24,r8
	addc	r29,r25,r9
	xor	r9,r22,r28
	xor	r8,r23,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r28,r1,44
	swi	r29,r1,48
	lwi	r28,r1,68
	lwi	r29,r1,72
	add	r28,r6,r28
	addc	r29,r7,r29
	xor	r6,r24,r28
	xor	r7,r25,r29
	bsrli	r9,r6,31
	lwi	r24,r3,160
	lwi	r25,r3,164
	addk	r8,r7,r7
	bsrli	r7,r7,31
	addk	r6,r6,r6
	or	r8,r9,r8
	or	r6,r7,r6
	swi	r28,r1,52
	swi	r29,r1,56
	swi	r8,r1,16
	swi	r6,r1,12
	add	r6,r30,r24
	addc	r7,r31,r25
	lwi	r25,r1,192
	lwi	r28,r1,188
	add	r6,r10,r6
	addc	r7,r11,r7
	xor	r8,r25,r7
	xor	r9,r28,r6
	add	r4,r4,r8
	addc	r5,r5,r9
	xor	r12,r10,r4
	lwi	r30,r3,168
	lwi	r31,r3,172
	xor	r10,r11,r5
	bslli	r19,r10,8
	bsrli	r11,r12,24
	bsrli	r10,r10,24
	bslli	r12,r12,8
	or	r22,r19,r11
	or	r23,r12,r10
	add	r6,r6,r30
	addc	r7,r7,r31
	add	r30,r22,r6
	addc	r31,r23,r7
	xor	r7,r8,r30
	xor	r6,r9,r31
	bslli	r9,r6,16
	bsrli	r8,r7,16
	bsrli	r6,r6,16
	bslli	r7,r7,16
	or	r10,r9,r8
	or	r11,r7,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r23,r7
	lwi	r24,r3,176
	lwi	r25,r3,180
	swi	r6,r1,76
	swi	r7,r1,80
	xor	r4,r22,r6
	lwi	r22,r1,20
	lwi	r23,r1,24
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r28,r1,196
	swi	r4,r1,28
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,200
	lwi	r8,r1,124
	lwi	r9,r1,128
	add	r4,r26,r4
	addc	r5,r27,r5
	xor	r22,r25,r5
	xor	r23,r28,r4
	or	r6,r7,r6
	swi	r6,r1,32
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r26,r6
	xor	r12,r27,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,184
	lwi	r25,r3,188
	or	r9,r19,r12
	lwi	r28,r1,8
	add	r4,r4,r24
	addc	r5,r5,r25
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,84
	swi	r27,r1,88
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r3,192
	lwi	r23,r3,196
	swi	r4,r1,20
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r24,r1,132
	lwi	r25,r1,136
	lwi	r29,r1,4
	or	r8,r9,r8
	swi	r8,r1,24
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,60
	lwi	r23,r1,64
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,136
	lwi	r23,r1,132
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,200
	lwi	r29,r3,204
	or	r23,r19,r12
	add	r8,r8,r28
	addc	r9,r9,r29
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r3,192
	lwi	r23,r3,196
	or	r24,r9,r8
	lwi	r8,r1,44
	lwi	r9,r1,48
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,160
	lwi	r25,r3,164
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,4
	swi	r8,r1,8
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,4
	lwi	r25,r1,8
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	bsrli	r9,r6,31
	addk	r8,r7,r7
	swi	r24,r1,92
	swi	r25,r1,96
	or	r8,r9,r8
	swi	r8,r1,64
	lwi	r22,r3,112
	lwi	r23,r3,116
	lwi	r24,r1,12
	lwi	r25,r1,16
	bsrli	r7,r7,31
	add	r30,r22,r30
	addc	r31,r23,r31
	add	r30,r24,r30
	addc	r31,r25,r31
	xor	r8,r27,r31
	xor	r9,r26,r30
	addk	r6,r6,r6
	add	r4,r4,r8
	addc	r5,r5,r9
	or	r6,r7,r6
	lwi	r26,r3,144
	lwi	r27,r3,148
	xor	r7,r24,r4
	swi	r6,r1,60
	xor	r6,r25,r5
	bslli	r19,r6,8
	bsrli	r12,r7,24
	bsrli	r6,r6,24
	bslli	r7,r7,8
	or	r10,r19,r12
	or	r11,r7,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r10,r30
	addc	r31,r11,r31
	xor	r7,r8,r30
	xor	r6,r9,r31
	bslli	r9,r6,16
	bsrli	r8,r7,16
	bsrli	r6,r6,16
	bslli	r7,r7,16
	or	r8,r9,r8
	or	r6,r7,r6
	swi	r8,r1,12
	swi	r6,r1,16
	lwi	r24,r1,12
	lwi	r25,r1,16
	lwi	r26,r3,152
	lwi	r27,r3,156
	lwi	r8,r1,28
	lwi	r9,r1,32
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r10,r24
	xor	r5,r11,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,84
	lwi	r7,r1,88
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,52
	lwi	r25,r1,56
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,200
	lwi	r27,r3,204
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,28
	swi	r4,r1,32
	lwi	r24,r1,28
	lwi	r25,r1,32
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,184
	lwi	r29,r3,188
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,20
	lwi	r23,r1,24
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,76
	lwi	r23,r1,80
	xor	r25,r28,r8
	lwi	r28,r1,24
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,20
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,128
	lwi	r29,r3,132
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,88
	lwi	r9,r3,92
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,176
	lwi	r25,r3,180
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	swi	r24,r1,44
	swi	r25,r1,48
	swi	r12,r1,68
	or	r8,r9,r8
	swi	r8,r1,72
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,80
	lwi	r23,r3,84
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r7,r11,r25
	swi	r24,r1,76
	swi	r25,r1,80
	xor	r6,r10,r24
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r24,r1,4
	lwi	r23,r1,8
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	addk	r6,r6,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r6,r7,r6
	swi	r6,r1,20
	xor	r7,r24,r30
	xor	r6,r23,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,96
	lwi	r27,r3,100
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,24
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r9,r7
	lwi	r24,r1,52
	lwi	r25,r1,56
	lwi	r22,r3,168
	lwi	r23,r3,172
	swi	r6,r1,84
	swi	r7,r1,88
	xor	r4,r8,r6
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r1,12
	swi	r4,r1,4
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,16
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	or	r6,r7,r6
	swi	r6,r1,8
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,136
	lwi	r25,r3,140
	or	r9,r19,r12
	lwi	r28,r1,32
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r4,r1,12
	lwi	r4,r3,120
	lwi	r5,r3,124
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r29,r1,28
	or	r8,r9,r8
	swi	r8,r1,16
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,64
	lwi	r23,r1,60
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,104
	lwi	r29,r3,108
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,168
	lwi	r9,r3,172
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,144
	lwi	r25,r3,148
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,28
	swi	r8,r1,32
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,28
	lwi	r25,r1,32
	lwi	r22,r3,176
	lwi	r23,r3,180
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r24,r1,20
	lwi	r25,r1,24
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	addk	r6,r6,r6
	add	r30,r24,r30
	addc	r31,r25,r31
	or	r6,r7,r6
	swi	r6,r1,60
	xor	r7,r26,r30
	xor	r6,r27,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,80
	lwi	r27,r3,84
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,64
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,20
	swi	r6,r1,24
	lwi	r24,r1,20
	lwi	r25,r1,24
	lwi	r26,r3,120
	lwi	r27,r3,124
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,52
	lwi	r7,r1,56
	lwi	r8,r1,4
	lwi	r9,r1,8
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,76
	lwi	r25,r1,80
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,96
	lwi	r27,r3,100
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,4
	swi	r4,r1,8
	lwi	r24,r1,4
	lwi	r25,r1,8
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,200
	lwi	r29,r3,204
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,12
	lwi	r23,r1,16
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,16
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,12
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,184
	lwi	r29,r3,188
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,160
	lwi	r9,r3,164
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,192
	lwi	r25,r3,196
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,104
	lwi	r23,r3,108
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r7,r11,r25
	swi	r24,r1,76
	swi	r25,r1,80
	xor	r6,r10,r24
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r24,r1,28
	lwi	r23,r1,32
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	addk	r6,r6,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r6,r7,r6
	swi	r6,r1,12
	xor	r7,r24,r30
	xor	r6,r23,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,128
	lwi	r27,r3,132
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,16
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r9,r7
	lwi	r24,r1,52
	lwi	r25,r1,56
	lwi	r22,r3,136
	lwi	r23,r3,140
	swi	r6,r1,84
	swi	r7,r1,88
	xor	r4,r8,r6
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r1,20
	swi	r4,r1,28
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,24
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	or	r6,r7,r6
	swi	r6,r1,32
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,88
	lwi	r25,r3,92
	or	r9,r19,r12
	lwi	r28,r1,8
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r4,r1,20
	lwi	r4,r3,152
	lwi	r5,r3,156
	lwi	r24,r1,60
	lwi	r25,r1,64
	or	r8,r9,r8
	swi	r8,r1,24
	lwi	r29,r1,4
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,64
	lwi	r23,r1,60
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,112
	lwi	r29,r3,116
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,136
	lwi	r9,r3,140
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,152
	lwi	r25,r3,156
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,4
	swi	r8,r1,8
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,4
	lwi	r25,r1,8
	lwi	r22,r3,104
	lwi	r23,r3,108
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r24,r1,12
	lwi	r25,r1,16
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	addk	r6,r6,r6
	add	r30,r24,r30
	addc	r31,r25,r31
	or	r6,r7,r6
	swi	r6,r1,60
	xor	r7,r26,r30
	xor	r6,r27,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,88
	lwi	r27,r3,92
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,64
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,12
	swi	r6,r1,16
	lwi	r24,r1,12
	lwi	r25,r1,16
	lwi	r26,r3,184
	lwi	r27,r3,188
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,52
	lwi	r7,r1,56
	lwi	r8,r1,28
	lwi	r9,r1,32
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,76
	lwi	r25,r1,80
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,176
	lwi	r27,r3,180
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,28
	swi	r4,r1,32
	lwi	r24,r1,28
	lwi	r25,r1,32
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,168
	lwi	r29,r3,172
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,20
	lwi	r23,r1,24
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,24
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,20
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,192
	lwi	r29,r3,196
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,96
	lwi	r9,r3,100
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,128
	lwi	r25,r3,132
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,120
	lwi	r23,r3,124
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r7,r11,r25
	swi	r24,r1,76
	swi	r25,r1,80
	xor	r6,r10,r24
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r24,r1,4
	lwi	r23,r1,8
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	addk	r6,r6,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r6,r7,r6
	swi	r6,r1,20
	xor	r7,r24,r30
	xor	r6,r23,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,160
	lwi	r27,r3,164
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,24
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r9,r7
	lwi	r22,r3,112
	lwi	r23,r3,116
	lwi	r24,r1,52
	lwi	r25,r1,56
	swi	r6,r1,84
	swi	r7,r1,88
	xor	r4,r8,r6
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r1,12
	swi	r4,r1,4
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,16
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	or	r6,r7,r6
	swi	r6,r1,8
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,80
	lwi	r25,r3,84
	or	r9,r19,r12
	lwi	r28,r1,32
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r4,r1,12
	lwi	r4,r3,200
	lwi	r5,r3,204
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r29,r1,28
	or	r8,r9,r8
	swi	r8,r1,16
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,64
	lwi	r23,r1,60
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,144
	lwi	r29,r3,148
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,152
	lwi	r9,r3,156
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,80
	lwi	r25,r3,84
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,28
	swi	r8,r1,32
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,28
	lwi	r25,r1,32
	lwi	r22,r3,120
	lwi	r23,r3,124
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r24,r1,20
	lwi	r25,r1,24
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	addk	r6,r6,r6
	add	r30,r24,r30
	addc	r31,r25,r31
	or	r6,r7,r6
	swi	r6,r1,60
	xor	r7,r26,r30
	xor	r6,r27,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,136
	lwi	r27,r3,140
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,64
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,20
	swi	r6,r1,24
	lwi	r24,r1,20
	lwi	r25,r1,24
	lwi	r26,r3,96
	lwi	r27,r3,100
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	swi	r24,r1,100
	swi	r25,r1,104
	lwi	r6,r1,52
	lwi	r7,r1,56
	bsrli	r5,r5,31
	lwi	r8,r1,4
	lwi	r9,r1,8
	addk	r4,r4,r4
	lwi	r24,r1,76
	lwi	r25,r1,80
	or	r10,r5,r4
	add	r4,r26,r6
	addc	r5,r27,r7
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,112
	lwi	r27,r3,116
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,4
	swi	r4,r1,8
	lwi	r24,r1,4
	lwi	r25,r1,8
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,160
	lwi	r29,r3,164
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,12
	lwi	r23,r1,16
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,16
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,12
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,200
	lwi	r29,r3,204
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,192
	lwi	r9,r3,196
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,88
	lwi	r25,r3,92
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,168
	lwi	r23,r3,172
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r7,r11,r25
	swi	r24,r1,76
	swi	r25,r1,80
	xor	r6,r10,r24
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r24,r1,28
	lwi	r23,r1,32
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	addk	r6,r6,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r6,r7,r6
	swi	r6,r1,12
	xor	r7,r24,r30
	xor	r6,r23,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,176
	lwi	r27,r3,180
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,16
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r9,r7
	swi	r6,r1,84
	swi	r7,r1,88
	xor	r4,r8,r6
	lwi	r24,r1,52
	lwi	r25,r1,56
	lwi	r22,r3,128
	lwi	r23,r3,132
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r1,20
	swi	r4,r1,28
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,24
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	or	r6,r7,r6
	swi	r6,r1,32
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,144
	lwi	r25,r3,148
	or	r9,r19,r12
	lwi	r28,r1,8
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r4,r1,20
	lwi	r4,r3,104
	lwi	r5,r3,108
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r29,r1,4
	or	r8,r9,r8
	swi	r8,r1,24
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,64
	lwi	r23,r1,60
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,184
	lwi	r29,r3,188
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,96
	lwi	r9,r3,100
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,176
	lwi	r25,r3,180
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,4
	swi	r8,r1,8
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,4
	lwi	r25,r1,8
	lwi	r22,r3,128
	lwi	r23,r3,132
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	bsrli	r9,r6,31
	addk	r8,r7,r7
	bsrli	r7,r7,31
	addk	r6,r6,r6
	or	r8,r9,r8
	or	r6,r7,r6
	swi	r8,r1,64
	swi	r6,r1,60
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r24,r1,12
	lwi	r25,r1,16
	add	r30,r22,r30
	addc	r31,r23,r31
	add	r30,r24,r30
	addc	r31,r25,r31
	xor	r6,r27,r31
	xor	r7,r26,r30
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,160
	lwi	r27,r3,164
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r19,r12
	or	r9,r11,r10
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,12
	swi	r6,r1,16
	lwi	r24,r1,12
	lwi	r25,r1,16
	lwi	r26,r3,80
	lwi	r27,r3,84
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,52
	lwi	r7,r1,56
	lwi	r8,r1,28
	lwi	r9,r1,32
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,76
	lwi	r25,r1,80
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,168
	lwi	r27,r3,172
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,28
	swi	r4,r1,32
	lwi	r24,r1,28
	lwi	r25,r1,32
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,144
	lwi	r29,r3,148
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,20
	lwi	r23,r1,24
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,24
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,20
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,104
	lwi	r29,r3,108
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,112
	lwi	r9,r3,116
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,184
	lwi	r25,r3,188
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,68
	lwi	r25,r1,72
	add	r24,r6,r24
	addc	r25,r7,r25
	swi	r24,r1,76
	swi	r25,r1,80
	lwi	r22,r3,136
	lwi	r23,r3,140
	xor	r7,r11,r25
	xor	r6,r10,r24
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r24,r1,4
	lwi	r23,r1,8
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	addk	r6,r6,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r6,r7,r6
	swi	r6,r1,20
	xor	r7,r24,r30
	xor	r6,r23,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,120
	lwi	r27,r3,124
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,24
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r9,r7
	lwi	r24,r1,52
	lwi	r25,r1,56
	lwi	r22,r3,200
	lwi	r23,r3,204
	swi	r6,r1,84
	swi	r7,r1,88
	xor	r4,r8,r6
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r1,12
	swi	r4,r1,4
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,16
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	or	r6,r7,r6
	swi	r6,r1,8
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,192
	lwi	r25,r3,196
	or	r9,r19,r12
	lwi	r28,r1,32
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r4,r1,12
	lwi	r4,r3,88
	lwi	r5,r3,92
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r29,r1,28
	or	r8,r9,r8
	swi	r8,r1,16
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,64
	lwi	r23,r1,60
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,152
	lwi	r29,r3,156
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,176
	lwi	r9,r3,180
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,120
	lwi	r25,r3,124
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r24,r1,44
	swi	r25,r1,48
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,28
	swi	r8,r1,32
	lwi	r24,r1,28
	lwi	r25,r1,32
	lwi	r22,r3,88
	lwi	r23,r3,92
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r24,r1,20
	lwi	r25,r1,24
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	addk	r6,r6,r6
	add	r30,r24,r30
	addc	r31,r25,r31
	or	r6,r7,r6
	swi	r6,r1,60
	xor	r7,r26,r30
	xor	r6,r27,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,200
	lwi	r27,r3,204
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,64
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,20
	swi	r6,r1,24
	lwi	r24,r1,20
	lwi	r25,r1,24
	lwi	r26,r3,192
	lwi	r27,r3,196
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,52
	lwi	r7,r1,56
	lwi	r8,r1,4
	lwi	r9,r1,8
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,76
	lwi	r25,r1,80
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,184
	lwi	r27,r3,188
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,4
	swi	r4,r1,8
	lwi	r24,r1,4
	lwi	r25,r1,8
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,112
	lwi	r29,r3,116
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,12
	lwi	r23,r1,16
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,16
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,12
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,160
	lwi	r29,r3,164
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,80
	lwi	r9,r3,84
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,136
	lwi	r25,r3,140
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,128
	lwi	r23,r3,132
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r7,r11,r25
	swi	r24,r1,76
	swi	r25,r1,80
	xor	r6,r10,r24
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r24,r1,28
	lwi	r23,r1,32
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	addk	r6,r6,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r6,r7,r6
	swi	r6,r1,12
	xor	r7,r24,r30
	xor	r6,r23,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,104
	lwi	r27,r3,108
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,16
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r9,r7
	lwi	r24,r1,52
	lwi	r25,r1,56
	lwi	r22,r3,152
	lwi	r23,r3,156
	swi	r6,r1,84
	swi	r7,r1,88
	xor	r4,r8,r6
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r1,20
	swi	r4,r1,28
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,24
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	or	r6,r7,r6
	swi	r6,r1,32
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,96
	lwi	r25,r3,100
	or	r9,r19,r12
	lwi	r29,r1,4
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r4,r1,20
	lwi	r4,r3,144
	lwi	r5,r3,148
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r28,r1,8
	or	r8,r9,r8
	swi	r8,r1,24
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,60
	lwi	r28,r1,64
	xor	r19,r23,r4
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,168
	lwi	r29,r3,172
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,184
	lwi	r9,r3,188
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,168
	lwi	r25,r3,172
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,4
	swi	r8,r1,8
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,4
	lwi	r25,r1,8
	lwi	r22,r3,136
	lwi	r23,r3,140
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r24,r1,12
	lwi	r25,r1,16
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	addk	r6,r6,r6
	add	r30,r24,r30
	addc	r31,r25,r31
	or	r6,r7,r6
	swi	r6,r1,60
	xor	r7,r26,r30
	xor	r6,r27,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,192
	lwi	r27,r3,196
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,64
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,12
	swi	r6,r1,16
	lwi	r24,r1,12
	lwi	r25,r1,16
	lwi	r26,r3,176
	lwi	r27,r3,180
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,52
	lwi	r7,r1,56
	lwi	r8,r1,28
	lwi	r9,r1,32
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,76
	lwi	r25,r1,80
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,88
	lwi	r27,r3,92
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,28
	swi	r4,r1,32
	lwi	r24,r1,28
	lwi	r25,r1,32
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,104
	lwi	r29,r3,108
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,20
	lwi	r23,r1,24
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,24
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,20
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,152
	lwi	r29,r3,156
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,120
	lwi	r9,r3,124
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,80
	lwi	r25,r3,84
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,200
	lwi	r23,r3,204
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r7,r11,r25
	swi	r24,r1,76
	swi	r25,r1,80
	xor	r6,r10,r24
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r24,r1,4
	lwi	r23,r1,8
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	addk	r6,r6,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r6,r7,r6
	swi	r6,r1,20
	xor	r7,r24,r30
	xor	r6,r23,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,112
	lwi	r27,r3,116
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,24
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r9,r7
	lwi	r24,r1,52
	lwi	r25,r1,56
	lwi	r22,r3,144
	lwi	r23,r3,148
	swi	r6,r1,84
	swi	r7,r1,88
	xor	r4,r8,r6
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r1,12
	swi	r4,r1,4
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,16
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	or	r6,r7,r6
	swi	r6,r1,8
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,128
	lwi	r25,r3,132
	or	r9,r19,r12
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r4,r8,r6
	xor	r5,r9,r7
	bsrli	r9,r4,31
	addk	r8,r5,r5
	bsrli	r5,r5,31
	or	r8,r9,r8
	addk	r4,r4,r4
	swi	r8,r1,16
	or	r4,r5,r4
	swi	r4,r1,12
	lwi	r22,r1,36
	lwi	r23,r1,40
	lwi	r4,r3,96
	lwi	r5,r3,100
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r28,r1,32
	lwi	r29,r1,28
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,64
	lwi	r23,r1,60
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,160
	lwi	r29,r3,164
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,128
	lwi	r9,r3,132
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,200
	lwi	r25,r3,204
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,28
	swi	r8,r1,32
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,28
	lwi	r25,r1,32
	lwi	r22,r3,192
	lwi	r23,r3,196
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r24,r1,20
	lwi	r25,r1,24
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	addk	r6,r6,r6
	add	r30,r24,r30
	addc	r31,r25,r31
	or	r6,r7,r6
	swi	r6,r1,60
	xor	r7,r26,r30
	xor	r6,r27,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,152
	lwi	r27,r3,156
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,64
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,20
	swi	r6,r1,24
	lwi	r24,r1,20
	lwi	r25,r1,24
	lwi	r26,r3,168
	lwi	r27,r3,172
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,52
	lwi	r7,r1,56
	lwi	r8,r1,4
	lwi	r9,r1,8
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,76
	lwi	r25,r1,80
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,104
	lwi	r27,r3,108
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r28,r1,52
	swi	r29,r1,56
	swi	r12,r1,4
	swi	r4,r1,8
	lwi	r24,r1,4
	lwi	r25,r1,8
	lwi	r28,r3,80
	lwi	r29,r3,84
	lwi	r22,r1,12
	lwi	r23,r1,16
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,16
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,12
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,144
	lwi	r29,r3,148
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,176
	lwi	r9,r3,180
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,96
	lwi	r25,r3,100
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,184
	lwi	r23,r3,188
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r7,r11,r25
	swi	r24,r1,76
	swi	r25,r1,80
	xor	r6,r10,r24
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r24,r1,28
	lwi	r23,r1,32
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	addk	r6,r6,r6
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r6,r7,r6
	swi	r6,r1,12
	xor	r7,r24,r30
	xor	r6,r23,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,136
	lwi	r27,r3,140
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,16
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r4,r8,r6
	xor	r5,r9,r7
	lwi	r22,r3,88
	lwi	r23,r3,92
	swi	r6,r1,84
	swi	r7,r1,88
	lwi	r24,r1,52
	lwi	r25,r1,56
	bsrli	r7,r4,31
	addk	r6,r5,r5
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r6,r7,r6
	or	r4,r5,r4
	swi	r6,r1,32
	swi	r4,r1,28
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,24
	lwi	r26,r1,20
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,112
	lwi	r25,r3,116
	or	r9,r19,r12
	lwi	r28,r1,8
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r4,r1,20
	lwi	r4,r3,160
	lwi	r5,r3,164
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r29,r1,4
	or	r8,r9,r8
	swi	r8,r1,24
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,64
	lwi	r23,r1,60
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,120
	lwi	r29,r3,124
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,160
	lwi	r9,r3,164
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,96
	lwi	r25,r3,100
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,4
	swi	r8,r1,8
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,4
	lwi	r25,r1,8
	lwi	r22,r3,144
	lwi	r23,r3,148
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r24,r1,12
	lwi	r25,r1,16
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	addk	r6,r6,r6
	add	r30,r24,r30
	addc	r31,r25,r31
	or	r6,r7,r6
	swi	r6,r1,60
	xor	r7,r26,r30
	xor	r6,r27,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,112
	lwi	r27,r3,116
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,64
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,12
	swi	r6,r1,16
	lwi	r24,r1,12
	lwi	r25,r1,16
	lwi	r26,r3,136
	lwi	r27,r3,140
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,52
	lwi	r7,r1,56
	lwi	r8,r1,28
	lwi	r9,r1,32
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,76
	lwi	r25,r1,80
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,128
	lwi	r27,r3,132
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,28
	swi	r4,r1,32
	lwi	r24,r1,28
	lwi	r25,r1,32
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,88
	lwi	r29,r3,92
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,20
	lwi	r23,r1,24
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,24
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,20
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,120
	lwi	r29,r3,124
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,200
	lwi	r9,r3,204
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,168
	lwi	r25,r3,172
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,152
	lwi	r23,r3,156
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	xor	r7,r11,r25
	bsrli	r9,r6,31
	addk	r8,r7,r7
	bsrli	r7,r7,31
	addk	r6,r6,r6
	or	r8,r9,r8
	or	r6,r7,r6
	swi	r24,r1,76
	swi	r25,r1,80
	swi	r8,r1,24
	swi	r6,r1,20
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r23,r1,8
	lwi	r24,r1,4
	add	r30,r26,r30
	addc	r31,r27,r31
	xor	r6,r23,r31
	xor	r7,r24,r30
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r26,r4
	xor	r10,r27,r5
	lwi	r26,r3,192
	lwi	r27,r3,196
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r19,r12
	or	r9,r11,r10
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r6,r30
	xor	r6,r7,r31
	bslli	r19,r6,16
	bsrli	r7,r12,16
	bsrli	r6,r6,16
	bslli	r12,r12,16
	or	r10,r19,r7
	or	r11,r12,r6
	add	r6,r4,r10
	addc	r7,r5,r11
	xor	r5,r9,r7
	lwi	r24,r1,52
	lwi	r25,r1,56
	lwi	r22,r3,104
	lwi	r23,r3,108
	swi	r6,r1,84
	swi	r7,r1,88
	xor	r4,r8,r6
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r26,r1,12
	swi	r4,r1,4
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r25,r1,16
	lwi	r8,r1,92
	lwi	r9,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	xor	r22,r25,r5
	xor	r23,r26,r4
	or	r6,r7,r6
	swi	r6,r1,8
	add	r6,r8,r22
	addc	r7,r9,r23
	xor	r19,r28,r6
	xor	r12,r29,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r8,r25,r24
	lwi	r24,r3,176
	lwi	r25,r3,180
	or	r9,r19,r12
	lwi	r28,r1,32
	add	r4,r24,r4
	addc	r5,r25,r5
	add	r26,r8,r4
	addc	r27,r9,r5
	xor	r5,r22,r26
	xor	r4,r23,r27
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	swi	r26,r1,52
	swi	r27,r1,56
	or	r26,r19,r12
	or	r27,r5,r4
	add	r6,r6,r26
	addc	r7,r7,r27
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r4,r1,12
	lwi	r4,r3,184
	lwi	r5,r3,188
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r29,r1,28
	or	r8,r9,r8
	swi	r8,r1,16
	add	r8,r4,r22
	addc	r9,r5,r23
	lwi	r22,r1,100
	lwi	r23,r1,104
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r24,r28,r9
	xor	r25,r29,r8
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r28,r1,64
	lwi	r23,r1,60
	xor	r12,r28,r5
	xor	r19,r23,r4
	bslli	r29,r12,8
	bsrli	r28,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,80
	lwi	r29,r3,84
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r19,r12
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r24,r9,r8
	lwi	r8,r3,80
	lwi	r9,r3,84
	or	r25,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r22,r11,r9
	xor	r23,r10,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,88
	lwi	r25,r3,92
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,28
	swi	r8,r1,32
	swi	r24,r1,44
	swi	r25,r1,48
	lwi	r24,r1,28
	lwi	r25,r1,32
	add	r24,r6,r24
	addc	r25,r7,r25
	swi	r24,r1,92
	swi	r25,r1,96
	lwi	r22,r3,96
	lwi	r23,r3,100
	xor	r6,r10,r24
	xor	r7,r11,r25
	lwi	r24,r1,20
	lwi	r25,r1,24
	addk	r8,r7,r7
	bsrli	r7,r7,31
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	addk	r6,r6,r6
	add	r30,r24,r30
	addc	r31,r25,r31
	or	r6,r7,r6
	swi	r6,r1,60
	xor	r7,r26,r30
	xor	r6,r27,r31
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r11,r24,r4
	xor	r10,r25,r5
	lwi	r26,r3,104
	lwi	r27,r3,108
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	or	r8,r9,r8
	swi	r8,r1,64
	or	r9,r11,r10
	or	r8,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r10,r6,r30
	xor	r6,r7,r31
	bslli	r11,r6,16
	bsrli	r7,r10,16
	bsrli	r6,r6,16
	bslli	r10,r10,16
	or	r7,r11,r7
	or	r6,r10,r6
	swi	r7,r1,20
	swi	r6,r1,24
	lwi	r24,r1,20
	lwi	r25,r1,24
	lwi	r26,r3,112
	lwi	r27,r3,116
	add	r24,r4,r24
	addc	r25,r5,r25
	xor	r4,r8,r24
	xor	r5,r9,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r11,r7,r6
	lwi	r6,r1,52
	lwi	r7,r1,56
	lwi	r8,r1,4
	lwi	r9,r1,8
	bsrli	r5,r5,31
	addk	r4,r4,r4
	or	r10,r5,r4
	swi	r24,r1,100
	swi	r25,r1,104
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r24,r1,76
	lwi	r25,r1,80
	add	r4,r8,r4
	addc	r5,r9,r5
	xor	r22,r29,r5
	xor	r23,r28,r4
	add	r6,r24,r22
	addc	r7,r25,r23
	lwi	r26,r3,120
	lwi	r27,r3,124
	xor	r19,r8,r6
	xor	r12,r9,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r4,r26,r4
	addc	r5,r27,r5
	or	r9,r19,r12
	or	r8,r25,r24
	add	r28,r8,r4
	addc	r29,r9,r5
	xor	r5,r22,r28
	xor	r4,r23,r29
	bslli	r19,r4,16
	bsrli	r12,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r12,r19,r12
	or	r4,r5,r4
	swi	r12,r1,4
	swi	r4,r1,8
	lwi	r24,r1,4
	lwi	r25,r1,8
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r28,r3,128
	lwi	r29,r3,132
	add	r6,r6,r24
	addc	r7,r7,r25
	xor	r5,r9,r7
	xor	r4,r8,r6
	addk	r8,r5,r5
	bsrli	r5,r5,31
	bsrli	r9,r4,31
	addk	r4,r4,r4
	or	r26,r5,r4
	lwi	r4,r1,36
	lwi	r5,r1,40
	lwi	r22,r1,12
	lwi	r23,r1,16
	or	r27,r9,r8
	add	r8,r28,r4
	addc	r9,r29,r5
	add	r8,r22,r8
	addc	r9,r23,r9
	lwi	r23,r1,72
	lwi	r28,r1,68
	xor	r24,r23,r9
	lwi	r22,r1,84
	lwi	r23,r1,88
	xor	r25,r28,r8
	lwi	r28,r1,16
	add	r4,r22,r24
	addc	r5,r23,r25
	lwi	r23,r1,12
	xor	r12,r28,r5
	bslli	r29,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r4
	bsrli	r28,r19,24
	bslli	r19,r19,8
	or	r22,r29,r28
	lwi	r28,r3,136
	lwi	r29,r3,140
	or	r23,r19,r12
	add	r8,r28,r8
	addc	r9,r29,r9
	add	r28,r22,r8
	addc	r29,r23,r9
	xor	r9,r24,r28
	xor	r8,r25,r29
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r24,r19,r12
	or	r25,r9,r8
	add	r4,r4,r24
	addc	r5,r5,r25
	xor	r9,r23,r5
	xor	r8,r22,r4
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	lwi	r22,r1,44
	lwi	r23,r1,48
	swi	r28,r1,36
	swi	r29,r1,40
	or	r28,r9,r8
	lwi	r8,r3,144
	lwi	r9,r3,148
	or	r29,r19,r12
	add	r8,r8,r22
	addc	r9,r9,r23
	add	r8,r10,r8
	addc	r9,r11,r9
	xor	r22,r25,r9
	xor	r23,r24,r8
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r19,r10,r6
	xor	r12,r11,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r10,r25,r24
	lwi	r24,r3,152
	lwi	r25,r3,156
	or	r11,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r24,r10,r8
	addc	r25,r11,r9
	xor	r9,r22,r24
	xor	r8,r23,r25
	bslli	r19,r8,16
	bsrli	r12,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r24,r1,44
	swi	r25,r1,48
	or	r12,r19,r12
	or	r8,r9,r8
	swi	r12,r1,68
	swi	r8,r1,72
	lwi	r24,r1,68
	lwi	r25,r1,72
	lwi	r22,r3,160
	lwi	r23,r3,164
	add	r24,r6,r24
	addc	r25,r7,r25
	xor	r6,r10,r24
	swi	r24,r1,76
	swi	r25,r1,80
	xor	r7,r11,r25
	lwi	r24,r1,28
	bsrli	r9,r6,31
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r23,r1,32
	addk	r8,r7,r7
	add	r30,r26,r30
	addc	r31,r27,r31
	or	r8,r9,r8
	swi	r8,r1,16
	xor	r9,r24,r30
	xor	r8,r23,r31
	add	r4,r4,r8
	addc	r5,r5,r9
	xor	r11,r26,r4
	xor	r10,r27,r5
	bsrli	r7,r7,31
	bslli	r19,r10,8
	bsrli	r12,r11,24
	bsrli	r10,r10,24
	bslli	r11,r11,8
	lwi	r26,r3,168
	lwi	r27,r3,172
	addk	r6,r6,r6
	or	r6,r7,r6
	swi	r6,r1,12
	or	r7,r11,r10
	or	r6,r19,r12
	add	r30,r26,r30
	addc	r31,r27,r31
	add	r10,r6,r30
	addc	r11,r7,r31
	swi	r10,r1,84
	swi	r11,r1,88
	lwi	r11,r1,84
	lwi	r12,r1,88
	lwi	r30,r3,176
	lwi	r31,r3,180
	xor	r10,r8,r11
	xor	r8,r9,r12
	bslli	r11,r8,16
	bsrli	r9,r10,16
	bsrli	r8,r8,16
	bslli	r10,r10,16
	or	r22,r11,r9
	or	r23,r10,r8
	add	r24,r4,r22
	addc	r25,r5,r23
	xor	r4,r6,r24
	xor	r5,r7,r25
	bsrli	r7,r4,31
	addk	r6,r5,r5
	or	r6,r7,r6
	swi	r6,r1,32
	bsrli	r5,r5,31
	lwi	r6,r1,52
	lwi	r7,r1,56
	addk	r4,r4,r4
	or	r4,r5,r4
	lwi	r8,r1,20
	swi	r4,r1,28
	add	r4,r30,r6
	addc	r5,r31,r7
	lwi	r7,r1,24
	lwi	r10,r1,92
	lwi	r11,r1,96
	add	r4,r28,r4
	addc	r5,r29,r5
	swi	r24,r1,212
	swi	r25,r1,216
	xor	r25,r8,r4
	xor	r24,r7,r5
	add	r6,r10,r24
	addc	r7,r11,r25
	xor	r9,r28,r6
	xor	r8,r29,r7
	lwi	r26,r3,184
	lwi	r27,r3,188
	bslli	r19,r8,8
	bsrli	r12,r9,24
	bsrli	r8,r8,24
	bslli	r9,r9,8
	or	r10,r19,r12
	or	r11,r9,r8
	add	r4,r26,r4
	addc	r5,r27,r5
	add	r28,r10,r4
	addc	r29,r11,r5
	xor	r5,r24,r28
	xor	r4,r25,r29
	bslli	r9,r4,16
	bsrli	r8,r5,16
	bsrli	r4,r4,16
	bslli	r5,r5,16
	or	r30,r9,r8
	or	r31,r5,r4
	add	r6,r6,r30
	addc	r7,r7,r31
	xor	r4,r10,r6
	lwi	r26,r1,36
	lwi	r27,r1,40
	xor	r5,r11,r7
	lwi	r24,r3,192
	lwi	r25,r3,196
	bsrli	r9,r4,31
	swi	r28,r1,52
	swi	r29,r1,56
	addk	r8,r5,r5
	lwi	r28,r1,60
	lwi	r29,r1,64
	bsrli	r5,r5,31
	or	r8,r9,r8
	addk	r4,r4,r4
	swi	r8,r1,24
	or	r4,r5,r4
	add	r8,r24,r26
	addc	r9,r25,r27
	add	r8,r28,r8
	addc	r9,r29,r9
	swi	r4,r1,20
	lwi	r29,r1,8
	lwi	r4,r1,4
	lwi	r24,r1,100
	lwi	r25,r1,104
	xor	r10,r29,r9
	xor	r11,r4,r8
	add	r4,r24,r10
	addc	r5,r25,r11
	lwi	r25,r1,64
	xor	r19,r28,r4
	bsrli	r26,r19,24
	bslli	r19,r19,8
	xor	r12,r25,r5
	bslli	r27,r12,8
	bsrli	r12,r12,24
	or	r24,r27,r26
	lwi	r26,r3,200
	lwi	r27,r3,204
	or	r25,r19,r12
	add	r8,r26,r8
	addc	r9,r27,r9
	add	r28,r24,r8
	addc	r29,r25,r9
	xor	r9,r10,r28
	xor	r8,r11,r29
	bslli	r11,r8,16
	bsrli	r10,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	swi	r28,r1,4
	swi	r29,r1,8
	or	r28,r11,r10
	or	r29,r9,r8
	add	r4,r4,r28
	addc	r5,r5,r29
	xor	r8,r24,r4
	xor	r9,r25,r5
	bsrli	r11,r8,31
	addk	r10,r9,r9
	lwi	r26,r1,44
	lwi	r27,r1,48
	or	r25,r11,r10
	lwi	r10,r3,192
	lwi	r11,r3,196
	bsrli	r9,r9,31
	addk	r8,r8,r8
	or	r24,r9,r8
	add	r8,r10,r26
	addc	r9,r11,r27
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r10,r23,r9
	xor	r11,r22,r8
	add	r6,r6,r10
	addc	r7,r7,r11
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r25,r12,8
	bsrli	r24,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r25,r24
	lwi	r24,r3,160
	lwi	r25,r3,164
	or	r23,r19,r12
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r26,r22,r8
	addc	r27,r23,r9
	xor	r9,r10,r26
	xor	r8,r11,r27
	bslli	r11,r8,16
	bsrli	r10,r9,16
	bsrli	r8,r8,16
	bslli	r9,r9,16
	or	r10,r11,r10
	or	r8,r9,r8
	swi	r10,r1,116
	swi	r8,r1,120
	swi	r26,r1,60
	swi	r27,r1,64
	lwi	r26,r1,116
	lwi	r27,r1,120
	lwi	r24,r1,84
	lwi	r25,r1,88
	add	r26,r6,r26
	addc	r27,r7,r27
	xor	r6,r22,r26
	xor	r7,r23,r27
	bsrli	r9,r6,31
	lwi	r22,r3,112
	lwi	r23,r3,116
	swi	r26,r1,36
	swi	r27,r1,40
	addk	r8,r7,r7
	lwi	r26,r1,12
	lwi	r27,r1,16
	or	r8,r9,r8
	bsrli	r7,r7,31
	swi	r8,r1,128
	addk	r6,r6,r6
	add	r8,r22,r24
	addc	r9,r23,r25
	add	r8,r26,r8
	addc	r9,r27,r9
	or	r6,r7,r6
	swi	r6,r1,124
	xor	r7,r30,r8
	xor	r6,r31,r9
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r19,r26,r4
	xor	r12,r27,r5
	lwi	r30,r3,144
	lwi	r31,r3,148
	bslli	r23,r12,8
	bsrli	r22,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	add	r8,r30,r8
	addc	r9,r31,r9
	or	r11,r19,r12
	or	r10,r23,r22
	add	r22,r10,r8
	addc	r23,r11,r9
	xor	r8,r6,r22
	xor	r6,r7,r23
	bslli	r9,r6,16
	bsrli	r7,r8,16
	bsrli	r6,r6,16
	bslli	r8,r8,16
	or	r7,r9,r7
	or	r6,r8,r6
	swi	r7,r1,108
	swi	r6,r1,112
	lwi	r26,r1,108
	lwi	r27,r1,112
	lwi	r30,r3,152
	lwi	r31,r3,156
	swi	r22,r1,12
	swi	r23,r1,16
	add	r26,r4,r26
	addc	r27,r5,r27
	xor	r5,r11,r27
	xor	r4,r10,r26
	addk	r6,r5,r5
	bsrli	r5,r5,31
	bsrli	r7,r4,31
	addk	r4,r4,r4
	swi	r26,r1,44
	swi	r27,r1,48
	or	r26,r5,r4
	lwi	r4,r1,52
	lwi	r5,r1,56
	or	r27,r7,r6
	lwi	r6,r1,28
	lwi	r7,r1,32
	lwi	r10,r1,76
	lwi	r11,r1,80
	add	r8,r30,r4
	addc	r9,r31,r5
	add	r8,r6,r8
	addc	r9,r7,r9
	xor	r22,r29,r9
	xor	r23,r28,r8
	add	r4,r10,r22
	addc	r5,r11,r23
	lwi	r11,r1,32
	lwi	r24,r3,200
	lwi	r25,r3,204
	xor	r7,r6,r4
	xor	r6,r11,r5
	bslli	r19,r6,8
	bsrli	r12,r7,24
	bsrli	r6,r6,24
	bslli	r7,r7,8
	or	r10,r19,r12
	or	r11,r7,r6
	add	r8,r24,r8
	addc	r9,r25,r9
	add	r28,r10,r8
	addc	r29,r11,r9
	xor	r7,r22,r28
	xor	r6,r23,r29
	bslli	r9,r6,16
	bsrli	r8,r7,16
	bsrli	r6,r6,16
	bslli	r7,r7,16
	or	r8,r9,r8
	or	r6,r7,r6
	swi	r8,r1,180
	swi	r6,r1,184
	lwi	r6,r1,180
	lwi	r7,r1,184
	lwi	r22,r1,20
	lwi	r23,r1,24
	swi	r28,r1,132
	swi	r29,r1,136
	add	r4,r4,r6
	addc	r5,r5,r7
	xor	r6,r10,r4
	xor	r7,r11,r5
	bsrli	r9,r6,31
	addk	r8,r7,r7
	lwi	r10,r1,4
	lwi	r11,r1,8
	or	r25,r9,r8
	lwi	r8,r3,184
	lwi	r9,r3,188
	bsrli	r7,r7,31
	add	r30,r8,r10
	addc	r31,r9,r11
	add	r30,r22,r30
	addc	r31,r23,r31
	lwi	r23,r1,72
	lwi	r28,r1,68
	lwi	r8,r1,212
	lwi	r9,r1,216
	xor	r10,r23,r31
	xor	r11,r28,r30
	addk	r6,r6,r6
	or	r24,r7,r6
	add	r6,r8,r10
	addc	r7,r9,r11
	lwi	r9,r1,24
	xor	r19,r22,r6
	bsrli	r22,r19,24
	bslli	r19,r19,8
	xor	r12,r9,r7
	bslli	r23,r12,8
	bsrli	r12,r12,24
	or	r8,r23,r22
	lwi	r22,r3,128
	lwi	r23,r3,132
	or	r9,r19,r12
	lwi	r28,r3,88
	lwi	r29,r3,92
	add	r30,r22,r30
	addc	r31,r23,r31
	add	r30,r8,r30
	addc	r31,r9,r31
	xor	r12,r10,r30
	xor	r10,r11,r31
	bslli	r19,r10,16
	bsrli	r11,r12,16
	bsrli	r10,r10,16
	bslli	r12,r12,16
	or	r22,r19,r11
	or	r23,r12,r10
	add	r6,r6,r22
	addc	r7,r7,r23
	xor	r9,r9,r7
	xor	r8,r8,r6
	addk	r12,r9,r9
	bsrli	r9,r9,31
	bsrli	r19,r8,31
	addk	r8,r8,r8
	or	r10,r9,r8
	lwi	r8,r1,60
	lwi	r9,r1,64
	or	r11,r19,r12
	add	r28,r28,r8
	addc	r29,r29,r9
	swi	r28,r1,4
	swi	r29,r1,8
	add	r28,r26,r28
	addc	r29,r27,r29
	xor	r8,r23,r29
	xor	r9,r22,r28
	add	r4,r4,r8
	addc	r5,r5,r9
	xor	r19,r26,r4
	xor	r12,r27,r5
	bslli	r23,r12,8
	bsrli	r22,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r23,r22
	or	r12,r19,r12
	swi	r22,r1,156
	swi	r12,r1,160
	lwi	r22,r3,176
	lwi	r23,r3,180
	lwi	r26,r1,156
	lwi	r27,r1,160
	add	r28,r22,r28
	addc	r29,r23,r29
	add	r26,r26,r28
	addc	r27,r27,r29
	xor	r12,r8,r26
	xor	r8,r9,r27
	bslli	r19,r8,16
	bsrli	r9,r12,16
	bsrli	r8,r8,16
	bslli	r12,r12,16
	lwi	r22,r3,80
	lwi	r23,r3,84
	swi	r26,r1,140
	swi	r27,r1,144
	lwi	r26,r1,12
	lwi	r27,r1,16
	or	r28,r19,r9
	or	r29,r12,r8
	add	r8,r4,r28
	addc	r9,r5,r29
	lwi	r12,r1,116
	swi	r8,r1,204
	swi	r9,r1,208
	add	r8,r22,r26
	addc	r9,r23,r27
	lwi	r27,r1,120
	add	r8,r24,r8
	addc	r9,r25,r9
	xor	r5,r12,r8
	xor	r4,r27,r9
	add	r6,r6,r4
	addc	r7,r7,r5
	xor	r19,r24,r6
	xor	r12,r25,r7
	bslli	r23,r12,8
	bsrli	r22,r19,24
	bsrli	r12,r12,24
	bslli	r19,r19,8
	or	r22,r23,r22
	or	r12,r19,r12
	swi	r12,r1,152
	lwi	r26,r3,96
	lwi	r27,r3,100
	swi	r22,r1,148
	lwi	r22,r1,148
	lwi	r23,r1,152
	add	r8,r26,r8
	addc	r9,r27,r9
	lwi	r24,r1,108
	add	r8,r22,r8
	addc	r9,r23,r9
	xor	r12,r4,r8
	xor	r4,r5,r9
	bslli	r19,r4,16
	bsrli	r5,r12,16
	bsrli	r4,r4,16
	bslli	r12,r12,16
	or	r5,r19,r5
	or	r4,r12,r4
	swi	r5,r1,164
	swi	r4,r1,168
	lwi	r22,r1,132
	lwi	r23,r1,136
	lwi	r4,r3,168
	lwi	r5,r3,172
	lwi	r26,r1,164
	lwi	r27,r1,168
	add	r26,r6,r26
	addc	r27,r7,r27
	add	r6,r4,r22
	addc	r7,r5,r23
	lwi	r23,r1,112
	add	r6,r10,r6
	addc	r7,r11,r7
	xor	r5,r24,r6
	xor	r4,r23,r7
	lwi	r22,r1,36
	lwi	r23,r1,40
	swi	r26,r1,116
	swi	r27,r1,120
	add	r26,r22,r4
	addc	r27,r23,r5
	xor	r12,r10,r26
	xor	r10,r11,r27
	bslli	r19,r10,8
	bsrli	r11,r12,24
	bsrli	r10,r10,24
	bslli	r12,r12,8
	or	r11,r19,r11
	swi	r11,r1,108
	or	r10,r12,r10
	swi	r10,r1,112
	lwi	r10,r3,136
	lwi	r11,r3,140
	lwi	r22,r1,108
	lwi	r23,r1,112
	add	r6,r10,r6
	addc	r7,r11,r7
	add	r6,r22,r6
	addc	r7,r23,r7
	xor	r10,r4,r6
	xor	r4,r5,r7
	bslli	r11,r4,16
	bsrli	r5,r10,16
	bsrli	r4,r4,16
	bslli	r10,r10,16
	or	r5,r11,r5
	or	r4,r10,r4
	swi	r5,r1,172
	swi	r4,r1,176
	lwi	r4,r1,172
	lwi	r5,r1,176
	lwi	r10,r3,120
	lwi	r11,r3,124
	lwi	r22,r1,124
	lwi	r23,r1,128
	add	r26,r26,r4
	addc	r27,r27,r5
	add	r4,r10,r30
	addc	r5,r11,r31
	add	r4,r22,r4
	addc	r5,r23,r5
	lwi	r23,r1,184
	lwi	r30,r1,180
	xor	r24,r23,r5
	lwi	r22,r1,44
	lwi	r23,r1,48
	xor	r25,r30,r4
	lwi	r30,r1,128
	add	r10,r22,r24
	addc	r11,r23,r25
	lwi	r23,r1,124
	xor	r12,r30,r11
	bslli	r31,r12,8
	bsrli	r12,r12,24
	xor	r19,r23,r10
	bsrli	r30,r19,24
	bslli	r19,r19,8
	or	r22,r31,r30
	lwi	r30,r3,104
	lwi	r31,r3,108
	or	r23,r19,r12
	add	r4,r30,r4
	addc	r5,r31,r5
	add	r4,r22,r4
	addc	r5,r23,r5
	xor	r19,r24,r4
	xor	r12,r25,r5
	bslli	r31,r12,16
	bsrli	r30,r19,16
	bsrli	r12,r12,16
	bslli	r19,r19,16
	or	r24,r31,r30
	or	r25,r19,r12
	lwi	r31,r3,0
	lwi	r19,r1,140
	lwi	r30,r3,4
	add	r10,r10,r24
	addc	r11,r11,r25
	xor	r12,r31,r19
	lwi	r31,r1,144
	xor	r12,r12,r26
	swi	r12,r3,0
	xor	r19,r30,r31
	xor	r19,r19,r27
	lwi	r12,r3,8
	swi	r19,r3,4
	lwi	r19,r3,12
	lwi	r30,r3,16
	xor	r8,r12,r8
	xor	r9,r19,r9
	lwi	r31,r3,20
	xor	r8,r8,r10
	xor	r9,r9,r11
	lwi	r12,r3,24
	swi	r8,r3,8
	swi	r9,r3,12
	lwi	r8,r1,204
	lwi	r9,r1,208
	xor	r6,r30,r6
	lwi	r30,r1,116
	xor	r7,r31,r7
	xor	r6,r6,r8
	xor	r7,r7,r9
	xor	r4,r12,r4
	lwi	r19,r3,28
	swi	r6,r3,16
	swi	r7,r3,20
	xor	r4,r4,r30
	swi	r4,r3,24
	lwi	r31,r1,120
	xor	r4,r22,r10
	xor	r5,r19,r5
	xor	r6,r23,r11
	xor	r5,r5,r31
	bsrli	r7,r4,31
	swi	r5,r3,28
	addk	r5,r6,r6
	lwi	r8,r1,164
	or	r5,r7,r5
	lwi	r7,r3,32
	lwi	r9,r3,36
	lwi	r10,r1,168
	bsrli	r6,r6,31
	lwi	r11,r1,156
	lwi	r12,r1,204
	lwi	r19,r1,160
	lwi	r22,r1,208
	addk	r4,r4,r4
	or	r4,r6,r4
	xor	r6,r7,r8
	xor	r4,r4,r6
	xor	r7,r9,r10
	lwi	r23,r3,40
	lwi	r31,r3,44
	xor	r6,r19,r22
	lwi	r30,r1,172
	swi	r4,r3,32
	xor	r5,r5,r7
	xor	r4,r11,r12
	lwi	r8,r1,176
	swi	r5,r3,36
	bsrli	r7,r4,31
	addk	r5,r6,r6
	bsrli	r6,r6,31
	lwi	r9,r1,148
	lwi	r10,r1,116
	lwi	r11,r1,152
	lwi	r12,r1,120
	addk	r4,r4,r4
	or	r5,r7,r5
	or	r4,r6,r4
	xor	r7,r31,r8
	xor	r6,r23,r30
	xor	r4,r4,r6
	xor	r5,r5,r7
	lwi	r19,r3,48
	swi	r4,r3,40
	swi	r5,r3,44
	xor	r4,r11,r12
	xor	r5,r9,r10
	lwi	r22,r3,52
	bsrli	r7,r5,31
	addk	r6,r4,r4
	bsrli	r4,r4,31
	addk	r5,r5,r5
	lwi	r23,r1,108
	or	r6,r7,r6
	or	r4,r4,r5
	xor	r7,r19,r24
	lwi	r24,r1,112
	xor	r5,r22,r25
	xor	r4,r4,r7
	swi	r4,r3,48
	xor	r4,r6,r5
	lwi	r25,r3,56
	xor	r6,r23,r26
	swi	r4,r3,52
	xor	r4,r24,r27
	lwi	r26,r3,60
	addk	r7,r4,r4
	bsrli	r5,r6,31
	bsrli	r4,r4,31
	addk	r6,r6,r6
	or	r5,r5,r7
	or	r4,r4,r6
	xor	r7,r25,r28
	xor	r6,r26,r29
	xor	r4,r4,r7
	swi	r4,r3,56
	xor	r4,r5,r6
	swi	r4,r3,60
	lwi	r19,r1,220
	lwi	r22,r1,224
	lwi	r23,r1,228
	lwi	r24,r1,232
	lwi	r25,r1,236
	lwi	r26,r1,240
	lwi	r27,r1,244
	lwi	r28,r1,248
	lwi	r29,r1,252
	lwi	r30,r1,256
	lwi	r31,r1,260
	rtsd	r15,8 
	
	addik	r1,r1,264
	.end	blake2b_compress
$Lfe11:
	.size	blake2b_compress,$Lfe11-blake2b_compress
	.section	.text.wipe_block,"ax",@progbits
	.align	2
	.ent	wipe_block
	.type	wipe_block, @function
wipe_block:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r3,r0,128	# 0x80
	addk	r4,r0,r0
$L25:
	bslli	r6,r4,3
	addik	r9,r0,0x00000000
	addik	r8,r0,0x00000000 #li => la
	addk	r6,r5,r6
	swi	r8,r6,0
	swi	r9,r6,4
	addik	r3,r3,-1
	bneid	r3,$L25
	addik	r4,r4,1
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	wipe_block
$Lfe12:
	.size	wipe_block,$Lfe12-wipe_block
	.section	.text.copy_block,"ax",@progbits
	.align	2
	.ent	copy_block
	.type	copy_block, @function
copy_block:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r4,r0,128	# 0x80
	addk	r7,r0,r0
$L28:
	bslli	r3,r7,3
	addk	r8,r6,r3
	lwi	r10,r8,0
	lwi	r11,r8,4
	addk	r3,r5,r3
	addik	r4,r4,-1
	swi	r10,r3,0
	swi	r11,r3,4
	bneid	r4,$L28
	addik	r7,r7,1
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	copy_block
$Lfe13:
	.size	copy_block,$Lfe13-copy_block
	.section	.text.xor_block,"ax",@progbits
	.align	2
	.ent	xor_block
	.type	xor_block, @function
xor_block:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r4,r0,128	# 0x80
	addk	r7,r0,r0
$L31:
	bslli	r3,r7,3
	lw	r8,r3,r5
	lw	r11,r3,r6
	addk	r9,r5,r3
	addk	r10,r6,r3
	xor	r8,r8,r11
	sw	r8,r3,r5
	lwi	r3,r9,4
	lwi	r8,r10,4
	addik	r4,r4,-1
	addik	r7,r7,1
	xor	r3,r3,r8
	bneid	r4,$L31
	swi	r3,r9,4
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	xor_block
$Lfe14:
	.size	xor_block,$Lfe14-xor_block
	.section	.text.g_rounds,"ax",@progbits
	.align	2
	.ent	g_rounds
	.type	g_rounds, @function
g_rounds:
	.frame	r1,664,r15		# vars= 592, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-664
	swi	r15,r1,0
	swi	r19,r1,620
	swi	r22,r1,624
	swi	r23,r1,628
	swi	r24,r1,632
	swi	r25,r1,636
	swi	r26,r1,640
	swi	r27,r1,644
	swi	r28,r1,648
	swi	r29,r1,652
	swi	r30,r1,656
	swi	r31,r1,660
	swi	r5,r1,668
	addik	r9,r0,8	# 0x8
	addk	r10,r0,r0
$L34:
	lwi	r24,r1,668
	bslli	r19,r10,3
	addk	r19,r24,r19
	lwi	r24,r19,32
	lwi	r25,r19,36
	lwi	r22,r19,0
	lwi	r23,r19,4
	addk	r8,r0,r0
	addk	r7,r24,r0
	bsrli	r6,r22,31
	addk	r5,r22,r22
	swi	r9,r1,612
	brlid	r15,__muldi3
	
	swi	r10,r1,616
	addk	r26,r3,r0
	addk	r27,r4,r0
	lwi	r4,r19,100
	add	r22,r22,r24
	addc	r23,r23,r25
	add	r26,r26,r22
	addc	r27,r27,r23
	lwi	r28,r19,64
	lwi	r29,r19,68
	xor	r4,r4,r27
	lwi	r3,r19,96
	addk	r7,r4,r0
	bsrli	r6,r28,31
	xor	r3,r3,r26
	addk	r5,r28,r28
	addk	r8,r0,r0
	swi	r4,r1,52
	brlid	r15,__muldi3
	
	swi	r3,r1,56
	addk	r23,r4,r0
	lwi	r4,r1,52
	lwi	r5,r1,56
	addk	r22,r3,r0
	addk	r8,r0,r0
	add	r28,r28,r4
	addc	r29,r29,r5
	add	r22,r22,r28
	addc	r23,r23,r29
	xor	r4,r24,r22
	xor	r3,r25,r23
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r26,31
	swi	r5,r1,60
	or	r3,r4,r3
	addk	r5,r26,r26
	brlid	r15,__muldi3
	
	swi	r3,r1,64
	lwi	r24,r1,60
	lwi	r25,r1,64
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r26,r26,r24
	addc	r27,r27,r25
	addk	r8,r0,r0
	add	r24,r4,r26
	addc	r25,r5,r27
	swi	r24,r1,28
	swi	r25,r1,32
	lwi	r26,r1,32
	lwi	r25,r1,52
	lwi	r27,r1,56
	xor	r4,r24,r25
	xor	r3,r26,r27
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,260
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,264
	lwi	r24,r1,260
	lwi	r25,r1,264
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r22,r24
	addc	r23,r23,r25
	lwi	r6,r1,64
	add	r26,r4,r22
	addc	r27,r5,r23
	swi	r26,r1,36
	swi	r27,r1,40
	lwi	r27,r1,60
	lwi	r5,r1,40
	lwi	r24,r19,40
	lwi	r25,r19,44
	xor	r3,r26,r27
	xor	r4,r5,r6
	lwi	r26,r19,8
	lwi	r27,r19,12
	bsrli	r6,r3,31
	addk	r5,r4,r4
	or	r5,r6,r5
	addk	r8,r0,r0
	addk	r7,r24,r0
	addk	r6,r8,r0
	swi	r5,r1,272
	bsrli	r4,r4,31
	addk	r5,r26,r0
	addk	r3,r3,r3
	or	r3,r4,r3
	brlid	r15,__muldi3
	
	swi	r3,r1,268
	bsrli	r5,r3,31
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r3,r1,516
	swi	r5,r1,520
	lwi	r4,r1,516
	lwi	r5,r1,520
	add	r26,r26,r24
	addc	r27,r27,r25
	lwi	r22,r19,72
	lwi	r23,r19,76
	add	r26,r4,r26
	addc	r27,r5,r27
	lwi	r4,r19,108
	lwi	r3,r19,104
	bsrli	r6,r22,31
	xor	r4,r4,r27
	addk	r7,r4,r0
	xor	r3,r3,r26
	addk	r5,r22,r22
	addk	r8,r0,r0
	swi	r4,r1,276
	brlid	r15,__muldi3
	
	swi	r3,r1,280
	lwi	r6,r1,276
	lwi	r7,r1,280
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r22,r6
	addc	r23,r23,r7
	addk	r8,r0,r0
	add	r22,r4,r22
	addc	r23,r5,r23
	xor	r4,r24,r22
	xor	r3,r25,r23
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r26,31
	swi	r5,r1,284
	or	r3,r4,r3
	addk	r5,r26,r26
	brlid	r15,__muldi3
	
	swi	r3,r1,288
	lwi	r24,r1,284
	lwi	r25,r1,288
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r26,r26,r24
	addc	r27,r27,r25
	addk	r8,r0,r0
	add	r24,r4,r26
	addc	r25,r5,r27
	swi	r24,r1,436
	swi	r25,r1,440
	lwi	r25,r1,276
	lwi	r26,r1,440
	lwi	r27,r1,280
	xor	r4,r24,r25
	bsrli	r5,r4,16
	bslli	r4,r4,16
	xor	r3,r26,r27
	bslli	r6,r3,16
	bsrli	r3,r3,16
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,292
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,296
	lwi	r24,r1,292
	lwi	r25,r1,296
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r22,r24
	addc	r23,r23,r25
	lwi	r6,r1,288
	add	r26,r4,r22
	addc	r27,r5,r23
	swi	r26,r1,44
	swi	r27,r1,48
	lwi	r27,r1,284
	lwi	r5,r1,48
	lwi	r28,r19,16
	lwi	r29,r19,20
	xor	r3,r26,r27
	xor	r4,r5,r6
	lwi	r26,r19,48
	lwi	r27,r19,52
	bsrli	r6,r3,31
	addk	r5,r4,r4
	or	r5,r6,r5
	addk	r8,r0,r0
	addk	r7,r26,r0
	addk	r6,r8,r0
	swi	r5,r1,304
	bsrli	r4,r4,31
	addk	r5,r28,r0
	addk	r3,r3,r3
	or	r3,r4,r3
	brlid	r15,__muldi3
	
	swi	r3,r1,300
	bsrli	r5,r3,31
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r5,r1,528
	swi	r3,r1,524
	lwi	r24,r1,524
	lwi	r25,r1,528
	lwi	r4,r19,116
	add	r28,r28,r26
	addc	r29,r29,r27
	add	r28,r24,r28
	addc	r29,r25,r29
	lwi	r22,r19,80
	lwi	r23,r19,84
	xor	r4,r4,r29
	lwi	r3,r19,112
	addk	r7,r4,r0
	bsrli	r6,r22,31
	xor	r3,r3,r28
	addk	r5,r22,r22
	addk	r8,r0,r0
	swi	r4,r1,308
	brlid	r15,__muldi3
	
	swi	r3,r1,312
	lwi	r24,r1,308
	lwi	r25,r1,312
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r22,r24
	addc	r23,r23,r25
	addk	r8,r0,r0
	add	r22,r4,r22
	addc	r23,r5,r23
	xor	r4,r26,r22
	xor	r3,r27,r23
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r28,31
	swi	r5,r1,316
	or	r3,r4,r3
	addk	r5,r28,r28
	brlid	r15,__muldi3
	
	swi	r3,r1,320
	lwi	r26,r1,316
	lwi	r27,r1,320
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r28,r28,r26
	addc	r29,r29,r27
	lwi	r27,r1,312
	add	r24,r4,r28
	addc	r25,r5,r29
	swi	r24,r1,444
	swi	r25,r1,448
	lwi	r26,r1,448
	lwi	r25,r1,308
	addk	r8,r0,r0
	xor	r3,r26,r27
	xor	r4,r24,r25
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,324
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,328
	lwi	r26,r1,324
	lwi	r27,r1,328
	addk	r24,r3,r0
	addk	r25,r4,r0
	add	r22,r22,r26
	addc	r23,r23,r27
	lwi	r27,r1,316
	lwi	r5,r1,320
	add	r24,r24,r22
	addc	r25,r25,r23
	xor	r3,r24,r27
	xor	r4,r25,r5
	lwi	r26,r19,56
	lwi	r27,r19,60
	bsrli	r6,r3,31
	lwi	r22,r19,24
	lwi	r23,r19,28
	addk	r5,r4,r4
	or	r5,r6,r5
	addk	r8,r0,r0
	addk	r7,r26,r0
	addk	r6,r8,r0
	swi	r5,r1,336
	bsrli	r4,r4,31
	addk	r5,r22,r0
	addk	r3,r3,r3
	or	r3,r4,r3
	brlid	r15,__muldi3
	
	swi	r3,r1,332
	bsrli	r5,r3,31
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r5,r1,536
	swi	r3,r1,532
	lwi	r6,r1,532
	lwi	r7,r1,536
	lwi	r3,r19,120
	lwi	r4,r19,124
	add	r22,r22,r26
	addc	r23,r23,r27
	add	r22,r6,r22
	addc	r23,r7,r23
	lwi	r30,r19,88
	lwi	r31,r19,92
	xor	r4,r4,r23
	addk	r7,r4,r0
	bsrli	r6,r30,31
	xor	r3,r3,r22
	addk	r5,r30,r30
	addk	r8,r0,r0
	swi	r4,r1,340
	brlid	r15,__muldi3
	
	swi	r3,r1,344
	addk	r29,r4,r0
	lwi	r4,r1,340
	lwi	r5,r1,344
	addk	r28,r3,r0
	addk	r8,r0,r0
	add	r30,r30,r4
	addc	r31,r31,r5
	add	r28,r28,r30
	addc	r29,r29,r31
	xor	r4,r26,r28
	xor	r3,r27,r29
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,348
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,352
	lwi	r26,r1,348
	lwi	r27,r1,352
	addk	r30,r3,r0
	addk	r31,r4,r0
	add	r22,r22,r26
	addc	r23,r23,r27
	lwi	r5,r1,344
	lwi	r27,r1,340
	add	r30,r30,r22
	addc	r31,r31,r23
	xor	r3,r31,r5
	xor	r4,r30,r27
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r28,31
	swi	r5,r1,356
	or	r3,r4,r3
	addk	r5,r28,r28
	addk	r8,r0,r0
	brlid	r15,__muldi3
	
	swi	r3,r1,360
	lwi	r26,r1,356
	lwi	r27,r1,360
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r28,r28,r26
	addc	r29,r29,r27
	lwi	r27,r1,348
	add	r28,r4,r28
	addc	r29,r5,r29
	lwi	r5,r1,352
	xor	r3,r28,r27
	bsrli	r6,r3,31
	xor	r4,r29,r5
	addk	r5,r4,r4
	or	r5,r6,r5
	lwi	r6,r1,28
	lwi	r7,r1,300
	bsrli	r4,r4,31
	swi	r5,r1,368
	addk	r3,r3,r3
	addk	r5,r6,r6
	bsrli	r6,r6,31
	or	r3,r4,r3
	addk	r8,r0,r0
	brlid	r15,__muldi3
	
	swi	r3,r1,364
	lwi	r6,r1,300
	lwi	r7,r1,304
	lwi	r26,r1,28
	lwi	r27,r1,32
	addk	r22,r3,r0
	addk	r23,r4,r0
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r7,r1,360
	lwi	r26,r1,356
	add	r22,r22,r4
	addc	r23,r23,r5
	bsrli	r6,r24,31
	xor	r7,r23,r7
	xor	r26,r22,r26
	addk	r5,r24,r24
	addk	r8,r0,r0
	swi	r7,r1,372
	brlid	r15,__muldi3
	
	swi	r26,r1,376
	lwi	r26,r1,372
	lwi	r27,r1,376
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r24,r24,r26
	addc	r25,r25,r27
	lwi	r27,r1,300
	add	r24,r4,r24
	addc	r25,r5,r25
	lwi	r5,r1,304
	xor	r4,r24,r27
	addk	r8,r0,r0
	xor	r3,r25,r5
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,380
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,384
	lwi	r26,r1,380
	lwi	r27,r1,384
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r22,r26
	addc	r23,r23,r27
	lwi	r27,r1,372
	add	r22,r4,r22
	addc	r23,r5,r23
	lwi	r5,r1,376
	xor	r4,r22,r27
	swi	r22,r19,0
	swi	r23,r19,4
	xor	r3,r23,r5
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	or	r3,r4,r3
	swi	r5,r1,484
	swi	r3,r1,488
	lwi	r26,r1,484
	lwi	r27,r1,488
	addk	r7,r5,r0
	bsrli	r6,r24,31
	swi	r26,r19,120
	swi	r27,r19,124
	addk	r5,r24,r24
	brlid	r15,__muldi3
	
	addk	r8,r0,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r24,r24,r26
	addc	r25,r25,r27
	lwi	r27,r1,380
	add	r24,r4,r24
	addc	r25,r5,r25
	lwi	r5,r1,384
	xor	r4,r24,r27
	bsrli	r6,r4,31
	xor	r3,r25,r5
	addk	r5,r3,r3
	or	r5,r6,r5
	addk	r8,r0,r0
	bsrli	r3,r3,31
	lwi	r7,r1,332
	addk	r6,r8,r0
	addk	r4,r4,r4
	swi	r5,r19,44
	lwi	r5,r1,436
	or	r3,r3,r4
	swi	r24,r19,80
	swi	r25,r19,84
	brlid	r15,__muldi3
	
	swi	r3,r19,40
	bsrli	r5,r3,31
	bsrli	r6,r28,31
	addk	r4,r4,r4
	or	r5,r5,r4
	swi	r5,r1,544
	lwi	r24,r1,436
	lwi	r25,r1,440
	lwi	r4,r1,332
	lwi	r5,r1,336
	addk	r3,r3,r3
	swi	r3,r1,540
	add	r26,r24,r4
	addc	r27,r25,r5
	lwi	r24,r1,540
	lwi	r25,r1,544
	lwi	r3,r1,260
	addk	r5,r28,r28
	add	r26,r24,r26
	addc	r27,r25,r27
	lwi	r25,r1,264
	xor	r3,r26,r3
	addk	r8,r0,r0
	xor	r25,r27,r25
	addk	r7,r25,r0
	swi	r25,r1,388
	brlid	r15,__muldi3
	
	swi	r3,r1,392
	lwi	r24,r1,388
	lwi	r25,r1,392
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r28,r28,r24
	addc	r29,r29,r25
	lwi	r25,r1,332
	add	r28,r4,r28
	addc	r29,r5,r29
	lwi	r5,r1,336
	xor	r4,r28,r25
	addk	r8,r0,r0
	xor	r3,r29,r5
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r26,31
	swi	r5,r1,396
	or	r3,r4,r3
	addk	r5,r26,r26
	brlid	r15,__muldi3
	
	swi	r3,r1,400
	lwi	r24,r1,396
	lwi	r25,r1,400
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r26,r26,r24
	addc	r27,r27,r25
	lwi	r25,r1,388
	add	r26,r4,r26
	addc	r27,r5,r27
	lwi	r5,r1,392
	xor	r4,r26,r25
	swi	r26,r19,8
	swi	r27,r19,12
	xor	r3,r27,r5
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	or	r3,r4,r3
	swi	r5,r1,492
	swi	r3,r1,496
	lwi	r24,r1,492
	lwi	r25,r1,496
	addk	r7,r5,r0
	bsrli	r6,r28,31
	swi	r24,r19,96
	swi	r25,r19,100
	addk	r5,r28,r28
	brlid	r15,__muldi3
	
	addk	r8,r0,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r28,r28,r24
	addc	r29,r29,r25
	lwi	r25,r1,396
	lwi	r26,r1,400
	add	r28,r4,r28
	addc	r29,r5,r29
	xor	r4,r28,r25
	xor	r3,r29,r26
	bsrli	r6,r4,31
	addk	r5,r3,r3
	or	r5,r6,r5
	addk	r8,r0,r0
	bsrli	r3,r3,31
	lwi	r7,r1,364
	addk	r6,r8,r0
	addk	r4,r4,r4
	swi	r5,r19,52
	lwi	r5,r1,444
	or	r3,r3,r4
	swi	r28,r19,88
	swi	r29,r19,92
	brlid	r15,__muldi3
	
	swi	r3,r19,48
	bsrli	r5,r3,31
	lwi	r26,r1,364
	lwi	r27,r1,368
	lwi	r24,r1,444
	lwi	r25,r1,448
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r5,r1,552
	swi	r3,r1,548
	add	r28,r24,r26
	addc	r29,r25,r27
	lwi	r24,r1,548
	lwi	r25,r1,552
	addk	r8,r0,r0
	add	r28,r24,r28
	addc	r29,r25,r29
	lwi	r25,r1,296
	xor	r25,r29,r25
	swi	r25,r1,404
	lwi	r27,r1,36
	lwi	r26,r1,292
	addk	r7,r25,r0
	bsrli	r6,r27,31
	xor	r26,r28,r26
	addk	r5,r27,r27
	brlid	r15,__muldi3
	
	swi	r26,r1,408
	lwi	r26,r1,404
	lwi	r27,r1,408
	lwi	r24,r1,36
	lwi	r25,r1,40
	addk	r22,r3,r0
	addk	r23,r4,r0
	add	r4,r24,r26
	addc	r5,r25,r27
	lwi	r27,r1,364
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,368
	xor	r4,r22,r27
	addk	r8,r0,r0
	xor	r3,r23,r5
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r28,31
	swi	r5,r1,412
	or	r3,r4,r3
	addk	r5,r28,r28
	brlid	r15,__muldi3
	
	swi	r3,r1,416
	lwi	r24,r1,412
	lwi	r25,r1,416
	addk	r6,r3,r0
	addk	r7,r4,r0
	add	r28,r28,r24
	addc	r29,r29,r25
	lwi	r25,r1,408
	add	r28,r6,r28
	addc	r29,r7,r29
	xor	r4,r28,r26
	xor	r3,r29,r25
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	or	r3,r4,r3
	swi	r5,r1,500
	swi	r3,r1,504
	lwi	r26,r1,500
	lwi	r27,r1,504
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r26,r19,104
	swi	r27,r19,108
	addk	r5,r22,r22
	swi	r28,r19,16
	swi	r29,r19,20
	brlid	r15,__muldi3
	
	addk	r8,r0,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r22,r26
	addc	r23,r23,r27
	lwi	r27,r1,416
	add	r22,r4,r22
	addc	r23,r5,r23
	xor	r4,r22,r24
	xor	r3,r23,r27
	bsrli	r6,r4,31
	addk	r5,r3,r3
	or	r5,r6,r5
	addk	r8,r0,r0
	bsrli	r3,r3,31
	lwi	r7,r1,268
	addk	r6,r8,r0
	addk	r4,r4,r4
	swi	r5,r19,60
	addk	r5,r30,r0
	or	r3,r3,r4
	swi	r22,r19,64
	swi	r23,r19,68
	brlid	r15,__muldi3
	
	swi	r3,r19,56
	bsrli	r5,r3,31
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r5,r1,560
	swi	r3,r1,556
	lwi	r24,r1,268
	lwi	r25,r1,272
	lwi	r26,r1,556
	lwi	r27,r1,560
	lwi	r4,r1,44
	add	r30,r30,r24
	addc	r31,r31,r25
	add	r30,r26,r30
	addc	r31,r27,r31
	lwi	r27,r1,328
	lwi	r3,r1,324
	bsrli	r6,r4,31
	xor	r27,r31,r27
	addk	r7,r27,r0
	xor	r3,r30,r3
	addk	r8,r0,r0
	addk	r5,r4,r4
	swi	r27,r1,420
	brlid	r15,__muldi3
	
	swi	r3,r1,424
	lwi	r26,r1,420
	lwi	r27,r1,424
	lwi	r24,r1,44
	lwi	r25,r1,48
	addk	r6,r3,r0
	addk	r7,r4,r0
	add	r22,r24,r26
	addc	r23,r25,r27
	lwi	r5,r1,272
	lwi	r27,r1,268
	add	r22,r6,r22
	addc	r23,r7,r23
	xor	r3,r23,r5
	xor	r4,r22,r27
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r30,31
	swi	r5,r1,428
	or	r3,r4,r3
	addk	r5,r30,r30
	addk	r8,r0,r0
	brlid	r15,__muldi3
	
	swi	r3,r1,432
	lwi	r24,r1,428
	lwi	r25,r1,432
	addk	r6,r3,r0
	addk	r7,r4,r0
	add	r30,r30,r24
	addc	r31,r31,r25
	lwi	r25,r1,424
	add	r30,r6,r30
	addc	r31,r7,r31
	xor	r4,r30,r26
	xor	r3,r31,r25
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	or	r3,r4,r3
	swi	r5,r1,508
	swi	r3,r1,512
	lwi	r26,r1,508
	lwi	r27,r1,512
	addk	r7,r5,r0
	bsrli	r6,r22,31
	addk	r5,r22,r22
	swi	r30,r19,24
	swi	r31,r19,28
	swi	r26,r19,112
	swi	r27,r19,116
	brlid	r15,__muldi3
	
	addk	r8,r0,r0
	addk	r6,r3,r0
	addk	r7,r4,r0
	add	r22,r22,r26
	addc	r23,r23,r27
	lwi	r27,r1,432
	add	r22,r6,r22
	addc	r23,r7,r23
	xor	r4,r22,r24
	xor	r3,r23,r27
	bsrli	r6,r4,31
	addk	r5,r3,r3
	lwi	r9,r1,612
	bsrli	r3,r3,31
	addk	r4,r4,r4
	lwi	r10,r1,616
	or	r5,r6,r5
	or	r3,r3,r4
	swi	r22,r19,72
	swi	r23,r19,76
	swi	r3,r19,32
	swi	r5,r19,36
	addik	r9,r9,-1
	bneid	r9,$L34
	addik	r10,r10,16
	addik	r10,r0,8	# 0x8
$L35:
	lwi	r24,r1,668
	bslli	r19,r9,3
	addk	r19,r24,r19
	lwi	r24,r19,256
	lwi	r25,r19,260
	lwi	r22,r19,0
	lwi	r23,r19,4
	addk	r8,r0,r0
	addk	r7,r24,r0
	bsrli	r6,r22,31
	addk	r5,r22,r22
	swi	r9,r1,612
	brlid	r15,__muldi3
	
	swi	r10,r1,616
	addk	r26,r3,r0
	addk	r27,r4,r0
	lwi	r4,r19,772
	add	r22,r22,r24
	addc	r23,r23,r25
	add	r26,r26,r22
	addc	r27,r27,r23
	lwi	r28,r19,512
	lwi	r29,r19,516
	xor	r4,r4,r27
	lwi	r3,r19,768
	addk	r7,r4,r0
	bsrli	r6,r28,31
	xor	r3,r3,r26
	addk	r5,r28,r28
	addk	r8,r0,r0
	swi	r4,r1,68
	brlid	r15,__muldi3
	
	swi	r3,r1,72
	addk	r23,r4,r0
	lwi	r4,r1,68
	lwi	r5,r1,72
	addk	r22,r3,r0
	addk	r8,r0,r0
	add	r28,r4,r28
	addc	r29,r5,r29
	add	r22,r22,r28
	addc	r23,r23,r29
	xor	r4,r24,r22
	xor	r3,r25,r23
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r26,31
	swi	r5,r1,76
	or	r3,r4,r3
	addk	r5,r26,r26
	brlid	r15,__muldi3
	
	swi	r3,r1,80
	lwi	r24,r1,76
	lwi	r25,r1,80
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r26,r24,r26
	addc	r27,r25,r27
	addk	r8,r0,r0
	add	r24,r4,r26
	addc	r25,r5,r27
	swi	r24,r1,28
	swi	r25,r1,32
	lwi	r26,r1,72
	lwi	r25,r1,68
	lwi	r27,r1,32
	xor	r4,r25,r24
	xor	r3,r26,r27
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,84
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,88
	lwi	r24,r1,84
	lwi	r25,r1,88
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r24,r22
	addc	r23,r25,r23
	lwi	r24,r19,264
	lwi	r25,r19,268
	add	r26,r4,r22
	addc	r27,r5,r23
	swi	r26,r1,36
	swi	r27,r1,40
	lwi	r27,r1,76
	lwi	r5,r1,80
	lwi	r6,r1,40
	xor	r3,r27,r26
	lwi	r26,r19,8
	lwi	r27,r19,12
	xor	r4,r5,r6
	bsrli	r6,r3,31
	addk	r5,r4,r4
	or	r5,r6,r5
	addk	r8,r0,r0
	addk	r7,r24,r0
	addk	r6,r8,r0
	swi	r5,r1,96
	bsrli	r4,r4,31
	addk	r5,r26,r0
	addk	r3,r3,r3
	or	r3,r4,r3
	brlid	r15,__muldi3
	
	swi	r3,r1,92
	bsrli	r5,r3,31
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r3,r1,564
	swi	r5,r1,568
	lwi	r4,r1,564
	lwi	r5,r1,568
	add	r26,r26,r24
	addc	r27,r27,r25
	lwi	r22,r19,520
	lwi	r23,r19,524
	add	r26,r4,r26
	addc	r27,r5,r27
	lwi	r4,r19,780
	lwi	r3,r19,776
	bsrli	r6,r22,31
	xor	r4,r4,r27
	addk	r7,r4,r0
	xor	r3,r3,r26
	addk	r5,r22,r22
	addk	r8,r0,r0
	swi	r4,r1,100
	brlid	r15,__muldi3
	
	swi	r3,r1,104
	lwi	r6,r1,100
	lwi	r7,r1,104
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r6,r22
	addc	r23,r7,r23
	addk	r8,r0,r0
	add	r22,r4,r22
	addc	r23,r5,r23
	xor	r4,r24,r22
	xor	r3,r25,r23
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r26,31
	swi	r5,r1,108
	or	r3,r4,r3
	addk	r5,r26,r26
	brlid	r15,__muldi3
	
	swi	r3,r1,112
	lwi	r24,r1,108
	lwi	r25,r1,112
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r26,r24,r26
	addc	r27,r25,r27
	addk	r8,r0,r0
	add	r24,r4,r26
	addc	r25,r5,r27
	swi	r24,r1,52
	swi	r25,r1,56
	lwi	r25,r1,100
	lwi	r26,r1,104
	lwi	r27,r1,56
	xor	r4,r25,r24
	bsrli	r5,r4,16
	bslli	r4,r4,16
	xor	r3,r26,r27
	bslli	r6,r3,16
	bsrli	r3,r3,16
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,116
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,120
	lwi	r24,r1,116
	lwi	r25,r1,120
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r24,r22
	addc	r23,r25,r23
	lwi	r28,r19,128
	lwi	r29,r19,132
	add	r26,r4,r22
	addc	r27,r5,r23
	swi	r26,r1,44
	swi	r27,r1,48
	lwi	r27,r1,108
	lwi	r5,r1,112
	lwi	r6,r1,48
	xor	r3,r27,r26
	lwi	r26,r19,384
	lwi	r27,r19,388
	xor	r4,r5,r6
	bsrli	r6,r3,31
	addk	r5,r4,r4
	or	r5,r6,r5
	addk	r8,r0,r0
	addk	r7,r26,r0
	addk	r6,r8,r0
	swi	r5,r1,128
	bsrli	r4,r4,31
	addk	r5,r28,r0
	addk	r3,r3,r3
	or	r3,r4,r3
	brlid	r15,__muldi3
	
	swi	r3,r1,124
	bsrli	r5,r3,31
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r5,r1,576
	swi	r3,r1,572
	lwi	r24,r1,572
	lwi	r25,r1,576
	lwi	r4,r19,900
	add	r28,r28,r26
	addc	r29,r29,r27
	add	r28,r24,r28
	addc	r29,r25,r29
	lwi	r22,r19,640
	lwi	r23,r19,644
	xor	r4,r4,r29
	lwi	r3,r19,896
	addk	r7,r4,r0
	bsrli	r6,r22,31
	xor	r3,r3,r28
	addk	r5,r22,r22
	addk	r8,r0,r0
	swi	r4,r1,132
	brlid	r15,__muldi3
	
	swi	r3,r1,136
	lwi	r24,r1,132
	lwi	r25,r1,136
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r24,r22
	addc	r23,r25,r23
	addk	r8,r0,r0
	add	r22,r4,r22
	addc	r23,r5,r23
	xor	r4,r26,r22
	xor	r3,r27,r23
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r28,31
	swi	r5,r1,140
	or	r3,r4,r3
	addk	r5,r28,r28
	brlid	r15,__muldi3
	
	swi	r3,r1,144
	lwi	r26,r1,140
	lwi	r27,r1,144
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r28,r26,r28
	addc	r29,r27,r29
	lwi	r26,r1,136
	add	r24,r4,r28
	addc	r25,r5,r29
	swi	r24,r1,60
	swi	r25,r1,64
	lwi	r27,r1,64
	lwi	r25,r1,132
	addk	r8,r0,r0
	xor	r3,r26,r27
	xor	r4,r25,r24
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,148
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,152
	lwi	r26,r1,148
	lwi	r27,r1,152
	addk	r24,r3,r0
	addk	r25,r4,r0
	add	r22,r26,r22
	addc	r23,r27,r23
	lwi	r27,r1,140
	lwi	r5,r1,144
	add	r24,r24,r22
	addc	r25,r25,r23
	xor	r3,r27,r24
	xor	r4,r5,r25
	lwi	r26,r19,392
	lwi	r27,r19,396
	bsrli	r6,r3,31
	lwi	r22,r19,136
	lwi	r23,r19,140
	addk	r5,r4,r4
	or	r5,r6,r5
	addk	r8,r0,r0
	addk	r7,r26,r0
	addk	r6,r8,r0
	swi	r5,r1,160
	bsrli	r4,r4,31
	addk	r5,r22,r0
	addk	r3,r3,r3
	or	r3,r4,r3
	brlid	r15,__muldi3
	
	swi	r3,r1,156
	bsrli	r5,r3,31
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r5,r1,584
	swi	r3,r1,580
	lwi	r6,r1,580
	lwi	r7,r1,584
	lwi	r3,r19,904
	lwi	r4,r19,908
	add	r22,r22,r26
	addc	r23,r23,r27
	add	r22,r6,r22
	addc	r23,r7,r23
	lwi	r30,r19,648
	lwi	r31,r19,652
	xor	r4,r4,r23
	addk	r7,r4,r0
	bsrli	r6,r30,31
	xor	r3,r3,r22
	addk	r5,r30,r30
	addk	r8,r0,r0
	swi	r4,r1,164
	brlid	r15,__muldi3
	
	swi	r3,r1,168
	addk	r29,r4,r0
	lwi	r4,r1,164
	lwi	r5,r1,168
	addk	r28,r3,r0
	addk	r8,r0,r0
	add	r30,r4,r30
	addc	r31,r5,r31
	add	r28,r28,r30
	addc	r29,r29,r31
	xor	r4,r26,r28
	xor	r3,r27,r29
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,172
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,176
	lwi	r26,r1,172
	lwi	r27,r1,176
	addk	r30,r3,r0
	addk	r31,r4,r0
	add	r22,r26,r22
	addc	r23,r27,r23
	lwi	r5,r1,168
	lwi	r27,r1,164
	add	r30,r30,r22
	addc	r31,r31,r23
	xor	r3,r5,r31
	xor	r4,r27,r30
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r28,31
	swi	r5,r1,180
	or	r3,r4,r3
	addk	r5,r28,r28
	addk	r8,r0,r0
	brlid	r15,__muldi3
	
	swi	r3,r1,184
	lwi	r26,r1,180
	lwi	r27,r1,184
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r28,r26,r28
	addc	r29,r27,r29
	lwi	r27,r1,172
	add	r28,r4,r28
	addc	r29,r5,r29
	lwi	r5,r1,176
	xor	r3,r27,r28
	bsrli	r6,r3,31
	xor	r4,r5,r29
	addk	r5,r4,r4
	or	r5,r6,r5
	lwi	r6,r1,28
	lwi	r7,r1,124
	bsrli	r4,r4,31
	swi	r5,r1,192
	addk	r3,r3,r3
	addk	r5,r6,r6
	bsrli	r6,r6,31
	or	r3,r4,r3
	addk	r8,r0,r0
	brlid	r15,__muldi3
	
	swi	r3,r1,188
	lwi	r6,r1,28
	lwi	r7,r1,32
	lwi	r26,r1,124
	lwi	r27,r1,128
	addk	r22,r3,r0
	addk	r23,r4,r0
	add	r4,r26,r6
	addc	r5,r27,r7
	lwi	r7,r1,184
	lwi	r26,r1,180
	add	r22,r22,r4
	addc	r23,r23,r5
	bsrli	r6,r24,31
	xor	r7,r7,r23
	xor	r26,r26,r22
	addk	r5,r24,r24
	addk	r8,r0,r0
	swi	r7,r1,196
	brlid	r15,__muldi3
	
	swi	r26,r1,200
	lwi	r26,r1,196
	lwi	r27,r1,200
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r24,r26,r24
	addc	r25,r27,r25
	lwi	r27,r1,124
	add	r24,r4,r24
	addc	r25,r5,r25
	lwi	r5,r1,128
	xor	r4,r27,r24
	addk	r8,r0,r0
	xor	r3,r5,r25
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r5,r1,204
	or	r3,r4,r3
	addk	r5,r22,r22
	brlid	r15,__muldi3
	
	swi	r3,r1,208
	lwi	r26,r1,204
	lwi	r27,r1,208
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r26,r22
	addc	r23,r27,r23
	lwi	r27,r1,196
	add	r22,r4,r22
	addc	r23,r5,r23
	lwi	r5,r1,200
	xor	r4,r27,r22
	swi	r22,r19,0
	swi	r23,r19,4
	xor	r3,r5,r23
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	or	r3,r4,r3
	swi	r5,r1,452
	swi	r3,r1,456
	lwi	r26,r1,452
	lwi	r27,r1,456
	addk	r7,r5,r0
	bsrli	r6,r24,31
	swi	r26,r19,904
	swi	r27,r19,908
	addk	r5,r24,r24
	brlid	r15,__muldi3
	
	addk	r8,r0,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r24,r26,r24
	addc	r25,r27,r25
	lwi	r27,r1,204
	add	r24,r4,r24
	addc	r25,r5,r25
	lwi	r5,r1,208
	xor	r4,r27,r24
	bsrli	r6,r4,31
	xor	r3,r5,r25
	addk	r5,r3,r3
	or	r5,r6,r5
	addk	r8,r0,r0
	bsrli	r3,r3,31
	lwi	r7,r1,156
	addk	r6,r8,r0
	addk	r4,r4,r4
	swi	r5,r19,268
	lwi	r5,r1,52
	or	r3,r3,r4
	swi	r24,r19,640
	swi	r25,r19,644
	brlid	r15,__muldi3
	
	swi	r3,r19,264
	bsrli	r5,r3,31
	bsrli	r6,r28,31
	addk	r4,r4,r4
	or	r5,r5,r4
	swi	r5,r1,592
	lwi	r24,r1,156
	lwi	r25,r1,160
	lwi	r4,r1,52
	lwi	r5,r1,56
	addk	r3,r3,r3
	swi	r3,r1,588
	add	r26,r24,r4
	addc	r27,r25,r5
	lwi	r24,r1,588
	lwi	r25,r1,592
	lwi	r3,r1,84
	addk	r5,r28,r28
	add	r26,r24,r26
	addc	r27,r25,r27
	lwi	r25,r1,88
	xor	r3,r3,r26
	addk	r8,r0,r0
	xor	r25,r25,r27
	addk	r7,r25,r0
	swi	r25,r1,212
	brlid	r15,__muldi3
	
	swi	r3,r1,216
	lwi	r24,r1,212
	lwi	r25,r1,216
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r28,r24,r28
	addc	r29,r25,r29
	lwi	r25,r1,156
	add	r28,r4,r28
	addc	r29,r5,r29
	lwi	r5,r1,160
	xor	r4,r25,r28
	addk	r8,r0,r0
	xor	r3,r5,r29
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r26,31
	swi	r5,r1,220
	or	r3,r4,r3
	addk	r5,r26,r26
	brlid	r15,__muldi3
	
	swi	r3,r1,224
	lwi	r24,r1,220
	lwi	r25,r1,224
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r26,r24,r26
	addc	r27,r25,r27
	lwi	r25,r1,212
	add	r26,r4,r26
	addc	r27,r5,r27
	lwi	r5,r1,216
	xor	r4,r25,r26
	swi	r26,r19,8
	swi	r27,r19,12
	xor	r3,r5,r27
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	or	r3,r4,r3
	swi	r5,r1,460
	swi	r3,r1,464
	lwi	r24,r1,460
	lwi	r25,r1,464
	addk	r7,r5,r0
	bsrli	r6,r28,31
	swi	r24,r19,768
	swi	r25,r19,772
	addk	r5,r28,r28
	brlid	r15,__muldi3
	
	addk	r8,r0,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r28,r24,r28
	addc	r29,r25,r29
	lwi	r25,r1,220
	lwi	r26,r1,224
	add	r28,r4,r28
	addc	r29,r5,r29
	xor	r4,r25,r28
	xor	r3,r26,r29
	bsrli	r6,r4,31
	addk	r5,r3,r3
	or	r5,r6,r5
	addk	r8,r0,r0
	bsrli	r3,r3,31
	lwi	r7,r1,188
	addk	r6,r8,r0
	addk	r4,r4,r4
	swi	r5,r19,388
	lwi	r5,r1,60
	or	r3,r3,r4
	swi	r28,r19,648
	swi	r29,r19,652
	brlid	r15,__muldi3
	
	swi	r3,r19,384
	bsrli	r5,r3,31
	lwi	r26,r1,60
	lwi	r27,r1,64
	lwi	r24,r1,188
	lwi	r25,r1,192
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r5,r1,600
	swi	r3,r1,596
	add	r28,r24,r26
	addc	r29,r25,r27
	lwi	r24,r1,596
	lwi	r25,r1,600
	addk	r8,r0,r0
	add	r28,r24,r28
	addc	r29,r25,r29
	lwi	r25,r1,120
	xor	r25,r25,r29
	swi	r25,r1,228
	lwi	r27,r1,36
	lwi	r26,r1,116
	addk	r7,r25,r0
	bsrli	r6,r27,31
	xor	r26,r26,r28
	addk	r5,r27,r27
	brlid	r15,__muldi3
	
	swi	r26,r1,232
	lwi	r26,r1,36
	lwi	r27,r1,40
	lwi	r24,r1,228
	lwi	r25,r1,232
	addk	r22,r3,r0
	addk	r23,r4,r0
	add	r4,r24,r26
	addc	r5,r25,r27
	lwi	r27,r1,188
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,192
	xor	r4,r27,r22
	addk	r8,r0,r0
	xor	r3,r5,r23
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r28,31
	swi	r5,r1,236
	or	r3,r4,r3
	addk	r5,r28,r28
	brlid	r15,__muldi3
	
	swi	r3,r1,240
	lwi	r24,r1,236
	lwi	r25,r1,240
	addk	r6,r3,r0
	addk	r7,r4,r0
	add	r28,r24,r28
	addc	r29,r25,r29
	lwi	r26,r1,232
	lwi	r25,r1,228
	add	r28,r6,r28
	addc	r29,r7,r29
	xor	r3,r26,r29
	xor	r4,r25,r28
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	or	r3,r4,r3
	swi	r5,r1,468
	swi	r3,r1,472
	lwi	r24,r1,468
	lwi	r25,r1,472
	addk	r7,r5,r0
	bsrli	r6,r22,31
	swi	r24,r19,776
	swi	r25,r19,780
	addk	r5,r22,r22
	swi	r28,r19,128
	swi	r29,r19,132
	brlid	r15,__muldi3
	
	addk	r8,r0,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r22,r24,r22
	addc	r23,r25,r23
	lwi	r25,r1,236
	lwi	r26,r1,240
	add	r22,r4,r22
	addc	r23,r5,r23
	xor	r4,r25,r22
	xor	r3,r26,r23
	bsrli	r6,r4,31
	addk	r5,r3,r3
	or	r5,r6,r5
	addk	r8,r0,r0
	bsrli	r3,r3,31
	lwi	r7,r1,92
	addk	r6,r8,r0
	addk	r4,r4,r4
	swi	r5,r19,396
	addk	r5,r30,r0
	or	r3,r3,r4
	swi	r22,r19,512
	swi	r23,r19,516
	brlid	r15,__muldi3
	
	swi	r3,r19,392
	bsrli	r5,r3,31
	addk	r4,r4,r4
	or	r5,r5,r4
	addk	r3,r3,r3
	swi	r5,r1,608
	swi	r3,r1,604
	lwi	r24,r1,92
	lwi	r25,r1,96
	lwi	r26,r1,604
	lwi	r27,r1,608
	lwi	r4,r1,44
	add	r30,r24,r30
	addc	r31,r25,r31
	add	r30,r26,r30
	addc	r31,r27,r31
	lwi	r27,r1,152
	lwi	r3,r1,148
	bsrli	r6,r4,31
	xor	r27,r27,r31
	addk	r7,r27,r0
	xor	r3,r3,r30
	addk	r8,r0,r0
	addk	r5,r4,r4
	swi	r27,r1,244
	brlid	r15,__muldi3
	
	swi	r3,r1,248
	lwi	r26,r1,44
	lwi	r27,r1,48
	lwi	r24,r1,244
	lwi	r25,r1,248
	addk	r6,r3,r0
	addk	r7,r4,r0
	add	r22,r24,r26
	addc	r23,r25,r27
	lwi	r5,r1,96
	lwi	r27,r1,92
	add	r22,r6,r22
	addc	r23,r7,r23
	xor	r3,r5,r23
	xor	r4,r27,r22
	bslli	r6,r3,8
	bsrli	r5,r4,24
	bsrli	r3,r3,24
	bslli	r4,r4,8
	or	r5,r6,r5
	addk	r7,r5,r0
	bsrli	r6,r30,31
	swi	r5,r1,252
	or	r3,r4,r3
	addk	r5,r30,r30
	addk	r8,r0,r0
	brlid	r15,__muldi3
	
	swi	r3,r1,256
	lwi	r24,r1,252
	lwi	r25,r1,256
	addk	r6,r3,r0
	addk	r7,r4,r0
	add	r30,r24,r30
	addc	r31,r25,r31
	lwi	r26,r1,248
	lwi	r25,r1,244
	add	r30,r6,r30
	addc	r31,r7,r31
	xor	r3,r26,r31
	xor	r4,r25,r30
	bslli	r6,r3,16
	bsrli	r5,r4,16
	bsrli	r3,r3,16
	bslli	r4,r4,16
	or	r5,r6,r5
	or	r3,r4,r3
	swi	r30,r19,136
	swi	r31,r19,140
	swi	r5,r1,476
	swi	r3,r1,480
	lwi	r24,r1,476
	lwi	r25,r1,480
	addk	r7,r5,r0
	bsrli	r6,r22,31
	addk	r5,r22,r22
	swi	r24,r19,896
	swi	r25,r19,900
	brlid	r15,__muldi3
	
	addk	r8,r0,r0
	addk	r6,r3,r0
	addk	r7,r4,r0
	add	r22,r24,r22
	addc	r23,r25,r23
	lwi	r26,r1,256
	lwi	r25,r1,252
	add	r22,r6,r22
	addc	r23,r7,r23
	xor	r3,r26,r23
	xor	r4,r25,r22
	bsrli	r5,r4,31
	addk	r6,r3,r3
	lwi	r10,r1,616
	bsrli	r3,r3,31
	addk	r4,r4,r4
	lwi	r9,r1,612
	or	r5,r5,r6
	or	r3,r3,r4
	swi	r22,r19,520
	swi	r23,r19,524
	swi	r3,r19,256
	swi	r5,r19,260
	addik	r10,r10,-1
	bneid	r10,$L35
	addik	r9,r9,2
	lwi	r15,r1,0
	lwi	r19,r1,620
	lwi	r22,r1,624
	lwi	r23,r1,628
	lwi	r24,r1,632
	lwi	r25,r1,636
	lwi	r26,r1,640
	lwi	r27,r1,644
	lwi	r28,r1,648
	lwi	r29,r1,652
	lwi	r30,r1,656
	lwi	r31,r1,660
	rtsd	r15,8 
	
	addik	r1,r1,664
	.end	g_rounds
$Lfe15:
	.size	g_rounds,$Lfe15-g_rounds
	.section	.text.fe_0,"ax",@progbits
	.align	2
	.ent	fe_0
	.type	fe_0, @function
fe_0:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r3,r0,10	# 0xa
	addk	r4,r0,r0
$L40:
	bslli	r6,r4,2
	addik	r3,r3,-1
	sw	r0,r6,r5
	bneid	r3,$L40
	addik	r4,r4,1
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	fe_0
$Lfe16:
	.size	fe_0,$Lfe16-fe_0
	.section	.text.fe_1,"ax",@progbits
	.align	2
	.ent	fe_1
	.type	fe_1, @function
fe_1:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r3,r0,1	# 0x1
	swi	r3,r5,0
	addik	r4,r0,1	# 0x1
	addik	r3,r0,9	# 0x9
$L43:
	bslli	r6,r4,2
	addik	r3,r3,-1
	sw	r0,r6,r5
	bneid	r3,$L43
	addik	r4,r4,1
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	fe_1
$Lfe17:
	.size	fe_1,$Lfe17-fe_1
	.section	.text.fe_copy,"ax",@progbits
	.align	2
	.ent	fe_copy
	.type	fe_copy, @function
fe_copy:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r3,r0,10	# 0xa
	addk	r4,r0,r0
$L46:
	bslli	r7,r4,2
	lw	r8,r7,r6
	addik	r3,r3,-1
	addik	r4,r4,1
	bneid	r3,$L46
	sw	r8,r7,r5
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	fe_copy
$Lfe18:
	.size	fe_copy,$Lfe18-fe_copy
	.section	.text.fe_neg,"ax",@progbits
	.align	2
	.ent	fe_neg
	.type	fe_neg, @function
fe_neg:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r3,r0,10	# 0xa
	addk	r4,r0,r0
$L49:
	bslli	r8,r4,2
	lw	r7,r8,r6
	addik	r3,r3,-1
	addik	r4,r4,1
	rsubk	r7,r7,r0
	bneid	r3,$L49
	sw	r7,r8,r5
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	fe_neg
$Lfe19:
	.size	fe_neg,$Lfe19-fe_neg
	.section	.text.fe_add,"ax",@progbits
	.align	2
	.ent	fe_add
	.type	fe_add, @function
fe_add:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r3,r0,10	# 0xa
	addk	r4,r0,r0
$L52:
	bslli	r8,r4,2
	lw	r9,r8,r6
	lw	r10,r8,r7
	addik	r3,r3,-1
	addik	r4,r4,1
	addk	r9,r9,r10
	bneid	r3,$L52
	sw	r9,r8,r5
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	fe_add
$Lfe20:
	.size	fe_add,$Lfe20-fe_add
	.section	.text.fe_sub,"ax",@progbits
	.align	2
	.ent	fe_sub
	.type	fe_sub, @function
fe_sub:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addik	r3,r0,10	# 0xa
	addk	r4,r0,r0
$L55:
	bslli	r8,r4,2
	lw	r9,r8,r6
	lw	r10,r8,r7
	addik	r3,r3,-1
	addik	r4,r4,1
	rsubk	r9,r10,r9
	bneid	r3,$L55
	sw	r9,r8,r5
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	fe_sub
$Lfe21:
	.size	fe_sub,$Lfe21-fe_sub
	.section	.text.fe_cswap,"ax",@progbits
	.align	2
	.ent	fe_cswap
	.type	fe_cswap, @function
fe_cswap:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	rsubk	r7,r7,r0
	addik	r9,r0,10	# 0xa
	addk	r10,r0,r0
$L58:
	bslli	r4,r10,2
	lw	r8,r4,r5
	lw	r3,r4,r6
	addik	r9,r9,-1
	addik	r10,r10,1
	xor	r3,r8,r3
	and	r3,r3,r7
	xor	r8,r8,r3
	sw	r8,r4,r5
	lw	r8,r4,r6
	xor	r3,r8,r3
	bneid	r9,$L58
	sw	r3,r4,r6
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	fe_cswap
$Lfe22:
	.size	fe_cswap,$Lfe22-fe_cswap
	.section	.text.fe_ccopy,"ax",@progbits
	.align	2
	.ent	fe_ccopy
	.type	fe_ccopy, @function
fe_ccopy:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	rsubk	r7,r7,r0
	addik	r4,r0,10	# 0xa
	addk	r8,r0,r0
$L61:
	bslli	r9,r8,2
	lw	r10,r9,r5
	lw	r3,r9,r6
	addik	r4,r4,-1
	addik	r8,r8,1
	xor	r3,r10,r3
	and	r3,r3,r7
	xor	r3,r3,r10
	bneid	r4,$L61
	sw	r3,r9,r5
	rtsd	r15,8 
	nop		# Unfilled delay slot

	.end	fe_ccopy
$Lfe23:
	.size	fe_ccopy,$Lfe23-fe_ccopy
	.section	.text.fe_frombytes,"ax",@progbits
	.align	2
	.ent	fe_frombytes
	.type	fe_frombytes, @function
fe_frombytes:
	.frame	r1,160,r15		# vars= 88, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-160
	swi	r19,r1,116
	addk	r19,r5,r0
	addk	r5,r6,r0
	swi	r26,r1,136
	addk	r26,r6,r0
	swi	r15,r1,0
	swi	r22,r1,120
	swi	r23,r1,124
	swi	r24,r1,128
	swi	r25,r1,132
	swi	r27,r1,140
	swi	r28,r1,144
	swi	r29,r1,148
	swi	r30,r1,152
	brlid	r15,load32_le
	
	swi	r31,r1,156
	addik	r5,r26,4
	brlid	r15,load24_le
	
	addk	r22,r3,r0
	addik	r5,r26,7
	brlid	r15,load24_le
	
	bslli	r24,r3,6
	addik	r5,r26,10
	brlid	r15,load24_le
	
	bslli	r28,r3,5
	bslli	r10,r3,3
	addk	r23,r0,r0
	addik	r5,r26,13
	swi	r10,r1,92
	brlid	r15,load24_le
	
	swi	r23,r1,96
	bslli	r3,r3,2
	addik	r5,r26,16
	swi	r23,r1,48
	brlid	r15,load32_le
	
	swi	r3,r1,44
	addik	r5,r26,20
	swi	r23,r1,32
	brlid	r15,load24_le
	
	swi	r3,r1,28
	bslli	r3,r3,7
	addik	r5,r26,23
	swi	r23,r1,56
	brlid	r15,load24_le
	
	swi	r3,r1,52
	bslli	r3,r3,5
	addik	r5,r26,26
	swi	r23,r1,40
	brlid	r15,load24_le
	
	swi	r3,r1,36
	bslli	r3,r3,4
	addik	r5,r26,29
	swi	r23,r1,64
	brlid	r15,load24_le
	
	swi	r3,r1,60
	addk	r27,r23,r0
	bslli	r3,r3,2
	andi	r26,r3,33554428 #and2
	addi	r4,r26,0x01000000
	addic	r5,r27,0x00000000
	bslli	r3,r5,7
	bsrli	r30,r4,25
	bsrai	r31,r5,25
	or	r30,r3,r30
	addk	r5,r30,r0
	addk	r6,r31,r0
	addik	r8,r0,0x00000000
	addik	r7,r0,0x00000013 #li => la
	brlid	r15,__muldi3
	
	addk	r25,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	bsrli	r3,r30,7
	add	r8,r4,r22
	addc	r9,r5,r23
	bslli	r5,r31,25
	bslli	r4,r30,25
	addi	r6,r24,0x01000000
	addic	r7,r25,0x00000000
	or	r5,r3,r5
	addk	r29,r23,r0
	bslli	r3,r7,7
	rsub	r22,r4,r26
	rsubc	r23,r5,r27
	bsrli	r4,r6,25
	bsrai	r5,r7,25
	or	r4,r3,r4
	add	r6,r28,r4
	addc	r7,r29,r5
	swi	r6,r1,100
	swi	r7,r1,104
	lwi	r10,r1,92
	lwi	r11,r1,96
	bsrli	r3,r4,7
	bslli	r7,r5,25
	bslli	r6,r4,25
	or	r7,r3,r7
	swi	r8,r1,68
	swi	r9,r1,72
	rsub	r8,r6,r24
	rsubc	r9,r7,r25
	addi	r6,r10,0x01000000
	addic	r7,r11,0x00000000
	bslli	r3,r7,7
	bsrli	r4,r6,25
	bsrai	r5,r7,25
	or	r4,r3,r4
	lwi	r28,r1,28
	lwi	r29,r1,32
	bsrli	r3,r4,7
	bslli	r7,r5,25
	bslli	r6,r4,25
	swi	r22,r1,76
	swi	r23,r1,80
	lwi	r22,r1,44
	lwi	r23,r1,48
	or	r7,r3,r7
	rsub	r24,r6,r10
	rsubc	r25,r7,r11
	addi	r6,r28,0x01000000
	addic	r7,r29,0x00000000
	add	r22,r22,r4
	addc	r23,r23,r5
	bslli	r3,r7,7
	bsrli	r4,r6,25
	bsrai	r5,r7,25
	or	r4,r3,r4
	swi	r24,r1,44
	swi	r25,r1,48
	bsrli	r3,r4,7
	bslli	r7,r5,25
	bslli	r6,r4,25
	lwi	r24,r1,36
	lwi	r25,r1,40
	lwi	r10,r1,52
	lwi	r11,r1,56
	or	r7,r3,r7
	swi	r22,r1,108
	swi	r23,r1,112
	rsub	r22,r6,r28
	rsubc	r23,r7,r29
	addi	r6,r24,0x01000000
	addic	r7,r25,0x00000000
	add	r30,r10,r4
	addc	r31,r11,r5
	bslli	r3,r7,7
	bsrli	r4,r6,25
	bsrai	r5,r7,25
	or	r4,r3,r4
	lwi	r28,r1,60
	lwi	r29,r1,64
	bsrli	r3,r4,7
	bslli	r7,r5,25
	bslli	r6,r4,25
	or	r7,r3,r7
	add	r28,r28,r4
	addc	r29,r29,r5
	rsub	r4,r6,r24
	rsubc	r5,r7,r25
	lwi	r6,r1,68
	lwi	r7,r1,72
	swi	r8,r1,84
	swi	r9,r1,88
	lwi	r8,r1,100
	lwi	r9,r1,104
	swi	r4,r1,60
	swi	r5,r1,64
	addi	r4,r6,0x02000000
	addic	r5,r7,0x00000000
	swi	r22,r1,52
	swi	r23,r1,56
	bslli	r3,r5,6
	bsrli	r10,r4,26
	bsrai	r11,r5,26
	lwi	r22,r1,108
	lwi	r23,r1,112
	addi	r4,r8,0x02000000
	addic	r5,r9,0x00000000
	or	r10,r3,r10
	bsrli	r26,r4,26
	bslli	r3,r5,6
	bsrai	r27,r5,26
	addi	r4,r22,0x02000000
	addic	r5,r23,0x00000000
	or	r26,r3,r26
	bsrli	r8,r4,26
	bslli	r3,r5,6
	bsrai	r9,r5,26
	addi	r4,r30,0x02000000
	addic	r5,r31,0x00000000
	or	r8,r3,r8
	bsrli	r6,r4,26
	bslli	r3,r5,6
	bsrai	r7,r5,26
	addi	r22,r28,0x02000000
	addic	r23,r29,0x00000000
	or	r6,r3,r6
	bsrli	r4,r22,26
	bslli	r3,r23,6
	bsrai	r5,r23,26
	bslli	r23,r11,26
	bslli	r22,r10,26
	or	r4,r3,r4
	swi	r28,r1,28
	swi	r29,r1,32
	bsrli	r3,r10,6
	lwi	r28,r1,68
	lwi	r29,r1,72
	or	r23,r3,r23
	bsrli	r3,r26,6
	rsub	r24,r22,r28
	rsubc	r25,r23,r29
	swi	r24,r1,36
	swi	r25,r1,40
	swi	r24,r19,0
	lwi	r22,r1,84
	lwi	r23,r1,88
	lwi	r28,r1,44
	lwi	r29,r1,48
	lwi	r24,r1,100
	lwi	r25,r1,104
	add	r10,r22,r10
	addc	r11,r23,r11
	bslli	r11,r27,26
	swi	r10,r19,4
	bslli	r10,r26,26
	add	r26,r28,r26
	addc	r27,r29,r27
	lwi	r28,r1,52
	lwi	r29,r1,56
	or	r11,r3,r11
	rsub	r22,r10,r24
	rsubc	r23,r11,r25
	bsrli	r3,r8,6
	bslli	r11,r9,26
	bslli	r10,r8,26
	add	r8,r28,r8
	addc	r9,r29,r9
	lwi	r24,r1,108
	lwi	r25,r1,112
	or	r11,r3,r11
	bslli	r9,r7,26
	bsrli	r3,r6,6
	swi	r8,r19,20
	bslli	r8,r6,26
	or	r9,r3,r9
	swi	r22,r19,8
	rsub	r22,r10,r24
	rsubc	r23,r11,r25
	rsub	r10,r8,r30
	rsubc	r11,r9,r31
	lwi	r8,r1,60
	lwi	r9,r1,64
	swi	r22,r19,16
	swi	r10,r19,24
	add	r6,r8,r6
	addc	r7,r9,r7
	lwi	r22,r1,76
	lwi	r23,r1,80
	bsrli	r3,r4,6
	bslli	r7,r5,26
	lwi	r10,r1,28
	lwi	r11,r1,32
	swi	r6,r19,28
	bslli	r6,r4,26
	or	r7,r3,r7
	add	r4,r22,r4
	addc	r5,r23,r5
	rsub	r8,r6,r10
	rsubc	r9,r7,r11
	swi	r26,r19,12
	swi	r8,r19,32
	swi	r4,r19,36
	lwi	r15,r1,0
	lwi	r19,r1,116
	lwi	r22,r1,120
	lwi	r23,r1,124
	lwi	r24,r1,128
	lwi	r25,r1,132
	lwi	r26,r1,136
	lwi	r27,r1,140
	lwi	r28,r1,144
	lwi	r29,r1,148
	lwi	r30,r1,152
	lwi	r31,r1,156
	rtsd	r15,8 
	
	addik	r1,r1,160
	.end	fe_frombytes
$Lfe24:
	.size	fe_frombytes,$Lfe24-fe_frombytes
	.section	.text.fe_mul_small,"ax",@progbits
	.align	2
	.ent	fe_mul_small
	.type	fe_mul_small, @function
fe_mul_small:
	.frame	r1,160,r15		# vars= 88, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-160
	swi	r15,r1,0
	swi	r19,r1,116
	swi	r22,r1,120
	swi	r23,r1,124
	swi	r24,r1,128
	swi	r25,r1,132
	swi	r26,r1,136
	swi	r27,r1,140
	swi	r28,r1,144
	swi	r29,r1,148
	swi	r30,r1,152
	swi	r31,r1,156
	addk	r22,r0,r7
	add	r23,r22,r22
	addc	r23,r0,r0
	beqi	r23,.+8
	addi	r23,r0,0xffffffff
	addk	r19,r5,r0
	addk	r24,r6,r0
	lwi	r4,r6,0
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r7,r22,r0
	addk	r8,r23,r0
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	addk	r29,r4,r0
	addk	r7,r22,r0
	lwi	r4,r24,4
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r8,r23,r0
	addk	r6,r5,r0
	addk	r5,r4,r0
	brlid	r15,__muldi3
	
	addk	r28,r3,r0
	addk	r27,r4,r0
	addk	r7,r22,r0
	lwi	r4,r24,8
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r8,r23,r0
	addk	r6,r5,r0
	addk	r5,r4,r0
	brlid	r15,__muldi3
	
	addk	r26,r3,r0
	addk	r31,r4,r0
	addk	r7,r22,r0
	lwi	r4,r24,12
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r8,r23,r0
	addk	r6,r5,r0
	addk	r5,r4,r0
	brlid	r15,__muldi3
	
	addk	r30,r3,r0
	addk	r11,r4,r0
	addk	r10,r3,r0
	lwi	r4,r24,16
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r7,r22,r0
	addk	r8,r23,r0
	addk	r6,r5,r0
	addk	r5,r4,r0
	swi	r10,r1,92
	brlid	r15,__muldi3
	
	swi	r11,r1,96
	swi	r3,r1,36
	swi	r4,r1,40
	addk	r7,r22,r0
	lwi	r4,r24,20
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r8,r23,r0
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	swi	r3,r1,28
	swi	r4,r1,32
	addk	r7,r22,r0
	lwi	r4,r24,24
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r8,r23,r0
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	swi	r3,r1,52
	swi	r4,r1,56
	addk	r7,r22,r0
	lwi	r4,r24,28
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r8,r23,r0
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	swi	r3,r1,44
	swi	r4,r1,48
	addk	r7,r22,r0
	lwi	r4,r24,32
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r8,r23,r0
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	swi	r3,r1,60
	swi	r4,r1,64
	addk	r7,r22,r0
	lwi	r4,r24,36
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r8,r23,r0
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	addk	r22,r3,r0
	addk	r23,r4,r0
	addik	r8,r0,0x00000000
	addik	r7,r0,0x00000013 #li => la
	addi	r4,r22,0x01000000
	addic	r5,r23,0x00000000
	bslli	r3,r5,7
	bsrli	r24,r4,25
	bsrai	r25,r5,25
	or	r24,r3,r24
	addk	r5,r24,r0
	brlid	r15,__muldi3
	
	addk	r6,r25,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	bsrli	r3,r24,7
	add	r6,r4,r28
	addc	r7,r5,r29
	bslli	r5,r25,25
	bslli	r4,r24,25
	swi	r6,r1,100
	swi	r7,r1,104
	or	r5,r3,r5
	addi	r6,r26,0x01000000
	addic	r7,r27,0x00000000
	rsub	r8,r4,r22
	rsubc	r9,r5,r23
	bslli	r3,r7,7
	bsrli	r4,r6,25
	bsrai	r5,r7,25
	or	r4,r3,r4
	lwi	r10,r1,92
	lwi	r11,r1,96
	bsrli	r3,r4,7
	bslli	r7,r5,25
	bslli	r6,r4,25
	or	r7,r3,r7
	rsub	r28,r6,r26
	rsubc	r29,r7,r27
	addi	r6,r10,0x01000000
	addic	r7,r11,0x00000000
	add	r22,r30,r4
	addc	r23,r31,r5
	bslli	r3,r7,7
	bsrli	r4,r6,25
	bsrai	r5,r7,25
	or	r4,r3,r4
	lwi	r30,r1,36
	lwi	r31,r1,40
	bsrli	r3,r4,7
	bslli	r7,r5,25
	bslli	r6,r4,25
	or	r7,r3,r7
	add	r24,r30,r4
	addc	r25,r31,r5
	rsub	r4,r6,r10
	rsubc	r5,r7,r11
	lwi	r10,r1,28
	lwi	r11,r1,32
	swi	r4,r1,84
	swi	r5,r1,88
	swi	r22,r1,108
	swi	r23,r1,112
	addi	r6,r10,0x01000000
	addic	r7,r11,0x00000000
	bslli	r3,r7,7
	bsrli	r4,r6,25
	bsrai	r5,r7,25
	or	r4,r3,r4
	lwi	r22,r1,52
	lwi	r23,r1,56
	bsrli	r3,r4,7
	bslli	r7,r5,25
	bslli	r6,r4,25
	add	r22,r22,r4
	addc	r23,r23,r5
	or	r7,r3,r7
	swi	r8,r1,68
	swi	r9,r1,72
	swi	r28,r1,76
	swi	r29,r1,80
	swi	r22,r1,36
	swi	r23,r1,40
	rsub	r28,r6,r10
	rsubc	r29,r7,r11
	swi	r28,r1,52
	swi	r29,r1,56
	lwi	r30,r1,44
	lwi	r31,r1,48
	lwi	r8,r1,100
	lwi	r9,r1,104
	lwi	r22,r1,108
	lwi	r23,r1,112
	addi	r4,r30,0x01000000
	addic	r5,r31,0x00000000
	bsrai	r7,r5,25
	bslli	r3,r5,7
	bsrli	r6,r4,25
	lwi	r4,r1,60
	lwi	r5,r1,64
	or	r6,r3,r6
	bsrli	r3,r6,7
	add	r4,r4,r6
	addc	r5,r5,r7
	swi	r4,r1,28
	swi	r5,r1,32
	bslli	r5,r7,25
	bslli	r4,r6,25
	or	r5,r3,r5
	rsub	r6,r4,r30
	rsubc	r7,r5,r31
	addi	r4,r8,0x02000000
	addic	r5,r9,0x00000000
	bslli	r3,r5,6
	bsrli	r10,r4,26
	bsrai	r11,r5,26
	addi	r4,r22,0x02000000
	addic	r5,r23,0x00000000
	or	r10,r3,r10
	lwi	r28,r1,36
	lwi	r29,r1,40
	bslli	r3,r5,6
	bsrli	r26,r4,26
	bsrai	r27,r5,26
	addi	r4,r24,0x02000000
	addic	r5,r25,0x00000000
	or	r26,r3,r26
	lwi	r30,r1,28
	lwi	r31,r1,32
	bslli	r3,r5,6
	bsrli	r8,r4,26
	bsrai	r9,r5,26
	addi	r4,r28,0x02000000
	addic	r5,r29,0x00000000
	swi	r6,r1,60
	swi	r7,r1,64
	or	r8,r3,r8
	bsrli	r6,r4,26
	bslli	r3,r5,6
	bsrai	r7,r5,26
	addi	r22,r30,0x02000000
	addic	r23,r31,0x00000000
	or	r6,r3,r6
	bsrli	r4,r22,26
	bslli	r3,r23,6
	bsrai	r5,r23,26
	bslli	r23,r11,26
	bslli	r22,r10,26
	or	r4,r3,r4
	lwi	r30,r1,100
	lwi	r31,r1,104
	bsrli	r3,r10,6
	or	r23,r3,r23
	rsub	r28,r22,r30
	rsubc	r29,r23,r31
	lwi	r22,r1,76
	lwi	r23,r1,80
	swi	r28,r19,0
	swi	r28,r1,44
	swi	r29,r1,48
	add	r10,r22,r10
	addc	r11,r23,r11
	lwi	r28,r1,108
	lwi	r29,r1,112
	bsrli	r3,r26,6
	bslli	r11,r27,26
	swi	r10,r19,4
	bslli	r10,r26,26
	or	r11,r3,r11
	rsub	r22,r10,r28
	rsubc	r23,r11,r29
	bsrli	r3,r8,6
	bslli	r11,r9,26
	bslli	r10,r8,26
	or	r11,r3,r11
	swi	r22,r19,8
	rsub	r22,r10,r24
	rsubc	r23,r11,r25
	lwi	r10,r1,52
	lwi	r11,r1,56
	lwi	r28,r1,60
	lwi	r29,r1,64
	lwi	r30,r1,84
	lwi	r31,r1,88
	add	r8,r10,r8
	addc	r9,r11,r9
	bsrli	r3,r6,6
	bslli	r9,r7,26
	swi	r8,r19,20
	bslli	r8,r6,26
	add	r6,r28,r6
	addc	r7,r29,r7
	swi	r22,r19,16
	add	r26,r30,r26
	addc	r27,r31,r27
	lwi	r22,r1,36
	lwi	r23,r1,40
	lwi	r30,r1,28
	lwi	r31,r1,32
	or	r9,r3,r9
	bslli	r7,r5,26
	bsrli	r3,r4,6
	swi	r6,r19,28
	bslli	r6,r4,26
	or	r7,r3,r7
	rsub	r10,r8,r22
	rsubc	r11,r9,r23
	rsub	r8,r6,r30
	rsubc	r9,r7,r31
	lwi	r6,r1,68
	lwi	r7,r1,72
	swi	r26,r19,12
	swi	r10,r19,24
	add	r4,r6,r4
	addc	r5,r7,r5
	swi	r8,r19,32
	swi	r4,r19,36
	lwi	r15,r1,0
	lwi	r19,r1,116
	lwi	r22,r1,120
	lwi	r23,r1,124
	lwi	r24,r1,128
	lwi	r25,r1,132
	lwi	r26,r1,136
	lwi	r27,r1,140
	lwi	r28,r1,144
	lwi	r29,r1,148
	lwi	r30,r1,152
	lwi	r31,r1,156
	rtsd	r15,8 
	
	addik	r1,r1,160
	.end	fe_mul_small
$Lfe25:
	.size	fe_mul_small,$Lfe25-fe_mul_small
	.section	.text.fe_mul,"ax",@progbits
	.align	2
	.ent	fe_mul
	.type	fe_mul, @function
fe_mul:
	.frame	r1,324,r15		# vars= 252, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-324
	swi	r15,r1,0
	swi	r22,r1,284
	swi	r23,r1,288
	swi	r26,r1,300
	swi	r27,r1,304
	swi	r30,r1,316
	swi	r19,r1,280
	swi	r24,r1,292
	swi	r25,r1,296
	swi	r28,r1,308
	swi	r29,r1,312
	swi	r31,r1,320
	lwi	r24,r6,28
	lwi	r9,r6,4
	lwi	r10,r6,12
	lwi	r11,r6,20
	swi	r24,r1,148
	lwi	r25,r7,20
	lwi	r24,r7,36
	lwi	r12,r7,28
	lwi	r28,r6,36
	lwi	r19,r7,4
	lwi	r31,r7,12
	lwi	r29,r7,8
	swi	r9,r1,124
	swi	r10,r1,132
	lwi	r9,r7,16
	lwi	r10,r7,32
	swi	r11,r1,140
	swi	r25,r1,212
	lwi	r11,r7,24
	swi	r24,r1,220
	lwi	r24,r6,0
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	swi	r24,r1,28
	swi	r25,r1,32
	lwi	r25,r1,124
	addk	r30,r5,r0
	lwi	r4,r6,16
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r3,r25,r25
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	swi	r24,r1,156
	swi	r25,r1,160
	lwi	r25,r1,220
	swi	r4,r1,52
	swi	r5,r1,56
	lwi	r26,r7,0
	add	r27,r26,r26
	addc	r27,r0,r0
	beqi	r27,.+8
	addi	r27,r0,0xffffffff
	muli	r3,r25,19
	addk	r8,r27,r0
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	muli	r3,r10,19
	swi	r24,r1,100
	swi	r25,r1,104
	lwi	r24,r6,8
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	swi	r24,r1,44
	swi	r25,r1,48
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	swi	r24,r1,76
	swi	r25,r1,80
	lwi	r25,r1,132
	addk	r3,r25,r25
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	muli	r3,r12,19
	swi	r24,r1,164
	swi	r25,r1,168
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	muli	r3,r11,19
	addk	r4,r0,r3
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r4,r1,84
	swi	r5,r1,88
	lwi	r5,r1,140
	addk	r3,r5,r5
	addk	r4,r0,r3
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r4,r1,172
	swi	r5,r1,176
	lwi	r5,r1,212
	muli	r3,r5,19
	addk	r4,r0,r3
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	muli	r3,r9,19
	swi	r4,r1,116
	swi	r5,r1,120
	lwi	r4,r6,24
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r4,r1,60
	swi	r5,r1,64
	addk	r4,r0,r3
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r4,r1,92
	swi	r5,r1,96
	lwi	r5,r1,148
	addk	r3,r5,r5
	addk	r4,r0,r3
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	muli	r3,r31,19
	swi	r4,r1,180
	swi	r5,r1,184
	addk	r4,r0,r3
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	muli	r3,r29,19
	swi	r4,r1,36
	swi	r5,r1,40
	lwi	r4,r6,32
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r6,r0,r3
	add	r7,r6,r6
	addc	r7,r0,r0
	beqi	r7,.+8
	addi	r7,r0,0xffffffff
	addk	r3,r28,r28
	swi	r4,r1,68
	swi	r5,r1,72
	addk	r4,r0,r3
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r6,r1,204
	swi	r7,r1,208
	swi	r4,r1,188
	swi	r5,r1,192
	addk	r7,r26,r0
	lwi	r5,r1,28
	lwi	r6,r1,32
	swi	r9,r1,264
	swi	r10,r1,276
	swi	r11,r1,272
	brlid	r15,__muldi3
	
	swi	r12,r1,268
	lwi	r5,r1,156
	lwi	r6,r1,160
	lwi	r7,r1,100
	lwi	r8,r1,104
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,76
	lwi	r8,r1,80
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r24,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,164
	lwi	r6,r1,168
	brlid	r15,__muldi3
	
	addk	r8,r25,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,116
	lwi	r8,r1,120
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,172
	lwi	r6,r1,176
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,92
	lwi	r8,r1,96
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,36
	lwi	r8,r1,40
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,180
	lwi	r6,r1,184
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,204
	lwi	r8,r1,208
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,68
	lwi	r6,r1,72
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,188
	lwi	r8,r1,192
	add	r22,r22,r4
	addc	r23,r23,r5
	muli	r4,r19,19
	addk	r4,r0,r4
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r6,r22,r4
	addc	r7,r23,r5
	swi	r6,r1,224
	swi	r7,r1,228
	addk	r4,r0,r19
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	lwi	r6,r1,124
	add	r7,r6,r6
	addc	r7,r0,r0
	beqi	r7,.+8
	addi	r7,r0,0xffffffff
	swi	r4,r1,108
	swi	r5,r1,112
	swi	r6,r1,124
	swi	r7,r1,128
	lwi	r4,r1,132
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r4,r1,132
	swi	r5,r1,136
	lwi	r6,r1,140
	add	r7,r6,r6
	addc	r7,r0,r0
	beqi	r7,.+8
	addi	r7,r0,0xffffffff
	lwi	r4,r1,148
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r6,r1,140
	swi	r7,r1,144
	addk	r6,r0,r28
	add	r7,r6,r6
	addc	r7,r0,r0
	beqi	r7,.+8
	addi	r7,r0,0xffffffff
	swi	r4,r1,148
	swi	r5,r1,152
	swi	r6,r1,196
	swi	r7,r1,200
	lwi	r5,r1,28
	lwi	r6,r1,32
	lwi	r7,r1,108
	lwi	r8,r1,112
	addk	r28,r0,r29
	add	r29,r28,r28
	addc	r29,r0,r0
	beqi	r29,.+8
	addi	r29,r0,0xffffffff
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	lwi	r7,r1,124
	lwi	r8,r1,128
	addk	r5,r26,r0
	addk	r6,r27,r0
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,44
	lwi	r8,r1,48
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,132
	lwi	r8,r1,136
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,52
	lwi	r8,r1,56
	addk	r6,r25,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r24,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,140
	lwi	r8,r1,144
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,84
	lwi	r6,r1,88
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,60
	lwi	r8,r1,64
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,116
	lwi	r6,r1,120
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,148
	lwi	r8,r1,152
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,196
	lwi	r8,r1,200
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,204
	lwi	r6,r1,208
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r8,r29,r0
	add	r6,r22,r4
	addc	r7,r23,r5
	swi	r6,r1,232
	swi	r7,r1,236
	lwi	r5,r1,28
	lwi	r6,r1,32
	brlid	r15,__muldi3
	
	addk	r7,r28,r0
	lwi	r5,r1,156
	lwi	r6,r1,160
	lwi	r7,r1,108
	lwi	r8,r1,112
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,44
	lwi	r8,r1,48
	addk	r6,r27,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r26,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,164
	lwi	r8,r1,168
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,52
	lwi	r8,r1,56
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,172
	lwi	r8,r1,176
	addk	r6,r25,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r24,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,60
	lwi	r8,r1,64
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,84
	lwi	r6,r1,88
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,180
	lwi	r8,r1,184
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,116
	lwi	r6,r1,120
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,188
	lwi	r8,r1,192
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r6,r22,r4
	addc	r7,r23,r5
	addk	r4,r0,r31
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r6,r1,240
	swi	r7,r1,244
	swi	r4,r1,36
	swi	r5,r1,40
	addk	r8,r5,r0
	lwi	r5,r1,28
	lwi	r6,r1,32
	brlid	r15,__muldi3
	
	addk	r7,r4,r0
	lwi	r5,r1,124
	lwi	r6,r1,128
	addk	r7,r28,r0
	addk	r8,r29,r0
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,132
	lwi	r8,r1,136
	addk	r6,r27,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r26,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,52
	lwi	r8,r1,56
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,140
	lwi	r8,r1,144
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,60
	lwi	r8,r1,64
	addk	r6,r25,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r24,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,148
	lwi	r8,r1,152
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,84
	lwi	r6,r1,88
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,116
	lwi	r6,r1,120
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,196
	lwi	r8,r1,200
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	lwi	r9,r1,264
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r6,r22,r4
	addc	r7,r23,r5
	addk	r4,r0,r9
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r6,r1,248
	swi	r7,r1,252
	swi	r4,r1,92
	swi	r5,r1,96
	addk	r8,r5,r0
	lwi	r5,r1,28
	lwi	r6,r1,32
	brlid	r15,__muldi3
	
	addk	r7,r4,r0
	lwi	r7,r1,36
	lwi	r8,r1,40
	lwi	r5,r1,156
	lwi	r6,r1,160
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r28,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	
	addk	r8,r29,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,164
	lwi	r6,r1,168
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,52
	lwi	r8,r1,56
	addk	r6,r27,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r26,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,172
	lwi	r8,r1,176
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,60
	lwi	r8,r1,64
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,180
	lwi	r8,r1,184
	addk	r6,r25,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r24,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,84
	lwi	r6,r1,88
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,188
	lwi	r8,r1,192
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,116
	lwi	r6,r1,120
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r8,r1,212
	add	r9,r8,r8
	addc	r9,r0,r0
	beqi	r9,.+8
	addi	r9,r0,0xffffffff
	swi	r8,r1,116
	swi	r9,r1,120
	add	r6,r22,r4
	addc	r7,r23,r5
	swi	r6,r1,204
	swi	r7,r1,208
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r7,r8,r0
	brlid	r15,__muldi3
	
	addk	r8,r9,r0
	lwi	r5,r1,124
	lwi	r6,r1,128
	lwi	r7,r1,92
	lwi	r8,r1,96
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,36
	lwi	r8,r1,40
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r28,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,132
	lwi	r6,r1,136
	brlid	r15,__muldi3
	
	addk	r8,r29,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,140
	lwi	r8,r1,144
	addk	r6,r27,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r26,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,60
	lwi	r8,r1,64
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,148
	lwi	r8,r1,152
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	addk	r6,r25,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r24,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,196
	lwi	r8,r1,200
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,84
	lwi	r6,r1,88
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r11,r1,272
	add	r6,r22,r4
	addc	r7,r23,r5
	addk	r8,r0,r11
	add	r9,r8,r8
	addc	r9,r0,r0
	beqi	r9,.+8
	addi	r9,r0,0xffffffff
	swi	r6,r1,212
	swi	r7,r1,216
	swi	r8,r1,84
	swi	r9,r1,88
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r7,r8,r0
	brlid	r15,__muldi3
	
	addk	r8,r9,r0
	lwi	r5,r1,156
	lwi	r6,r1,160
	lwi	r7,r1,116
	lwi	r8,r1,120
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,92
	lwi	r8,r1,96
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,36
	lwi	r8,r1,40
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,164
	lwi	r6,r1,168
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r28,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	
	addk	r8,r29,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,172
	lwi	r6,r1,176
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,60
	lwi	r8,r1,64
	addk	r6,r27,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r26,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,180
	lwi	r8,r1,184
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,188
	lwi	r8,r1,192
	addk	r6,r25,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	brlid	r15,__muldi3
	
	addk	r5,r24,r0
	lwi	r12,r1,268
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r24,r22,r4
	addc	r25,r23,r5
	addk	r22,r0,r12
	add	r23,r22,r22
	addc	r23,r0,r0
	beqi	r23,.+8
	addi	r23,r0,0xffffffff
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r7,r22,r0
	swi	r24,r1,256
	swi	r25,r1,260
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	lwi	r5,r1,124
	lwi	r6,r1,128
	lwi	r7,r1,84
	lwi	r8,r1,88
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,116
	lwi	r8,r1,120
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,92
	lwi	r8,r1,96
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,132
	lwi	r6,r1,136
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,36
	lwi	r8,r1,40
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r28,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,140
	lwi	r6,r1,144
	brlid	r15,__muldi3
	
	addk	r8,r29,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,148
	lwi	r8,r1,152
	addk	r6,r27,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	brlid	r15,__muldi3
	
	addk	r5,r26,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,196
	lwi	r8,r1,200
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r10,r1,276
	add	r6,r24,r4
	addc	r7,r25,r5
	addk	r10,r0,r10
	add	r11,r10,r10
	addc	r11,r0,r0
	beqi	r11,.+8
	addi	r11,r0,0xffffffff
	swi	r6,r1,76
	swi	r7,r1,80
	addk	r8,r11,r0
	addk	r7,r10,r0
	lwi	r5,r1,28
	lwi	r6,r1,32
	swi	r10,r1,276
	brlid	r15,__muldi3
	
	swi	r11,r1,272
	lwi	r5,r1,156
	lwi	r6,r1,160
	addk	r7,r22,r0
	addk	r8,r23,r0
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,116
	lwi	r8,r1,120
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,164
	lwi	r6,r1,168
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,92
	lwi	r8,r1,96
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,36
	lwi	r8,r1,40
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,172
	lwi	r6,r1,176
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r28,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	
	addk	r8,r29,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,180
	lwi	r6,r1,184
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	addk	r6,r27,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	brlid	r15,__muldi3
	
	addk	r5,r26,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,188
	lwi	r8,r1,192
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r8,r24,r4
	addc	r9,r25,r5
	swi	r8,r1,156
	swi	r9,r1,160
	lwi	r4,r1,220
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	lwi	r7,r1,28
	lwi	r8,r1,32
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	lwi	r10,r1,276
	lwi	r11,r1,272
	lwi	r5,r1,124
	lwi	r6,r1,128
	addk	r7,r10,r0
	addk	r8,r11,r0
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r22,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,132
	lwi	r6,r1,136
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,116
	lwi	r8,r1,120
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,92
	lwi	r8,r1,96
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,140
	lwi	r6,r1,144
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,36
	lwi	r8,r1,40
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r28,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,148
	lwi	r6,r1,152
	brlid	r15,__muldi3
	
	addk	r8,r29,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,68
	lwi	r6,r1,72
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,196
	lwi	r8,r1,200
	addk	r6,r27,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	brlid	r15,__muldi3
	
	addk	r5,r26,r0
	lwi	r10,r1,224
	lwi	r11,r1,228
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	addi	r4,r10,0x02000000
	addic	r5,r11,0x00000000
	bslli	r3,r5,6
	bsrli	r8,r4,26
	bsrai	r9,r5,26
	lwi	r10,r1,232
	lwi	r11,r1,236
	or	r8,r3,r8
	bsrli	r3,r8,6
	bslli	r6,r8,26
	bslli	r7,r9,26
	add	r4,r10,r8
	addc	r5,r11,r9
	lwi	r8,r1,224
	lwi	r9,r1,228
	or	r7,r3,r7
	rsub	r10,r6,r8
	rsubc	r11,r7,r9
	swi	r10,r1,84
	swi	r11,r1,88
	lwi	r10,r1,204
	lwi	r11,r1,208
	addi	r8,r10,0x02000000
	addic	r9,r11,0x00000000
	bslli	r3,r9,6
	bsrli	r6,r8,26
	bsrai	r7,r9,26
	lwi	r10,r1,212
	lwi	r11,r1,216
	or	r6,r3,r6
	bsrli	r3,r6,6
	bslli	r9,r7,26
	bslli	r8,r6,26
	add	r22,r10,r6
	addc	r23,r11,r7
	lwi	r10,r1,204
	lwi	r11,r1,208
	or	r9,r3,r9
	rsub	r6,r8,r10
	rsubc	r7,r9,r11
	addi	r8,r4,0x01000000
	addic	r9,r5,0x00000000
	bsrai	r11,r9,25
	bslli	r3,r9,7
	bsrli	r10,r8,25
	lwi	r8,r1,240
	lwi	r9,r1,244
	or	r10,r3,r10
	bsrli	r3,r10,7
	add	r8,r8,r10
	addc	r9,r9,r11
	swi	r8,r1,44
	swi	r9,r1,48
	bslli	r9,r11,25
	bslli	r8,r10,25
	or	r9,r3,r9
	rsub	r10,r8,r4
	rsubc	r11,r9,r5
	addi	r4,r22,0x01000000
	addic	r5,r23,0x00000000
	swi	r10,r1,92
	swi	r11,r1,96
	bslli	r3,r5,7
	bsrli	r8,r4,25
	bsrai	r9,r5,25
	lwi	r10,r1,256
	lwi	r11,r1,260
	or	r8,r3,r8
	bsrli	r3,r8,7
	add	r10,r10,r8
	addc	r11,r11,r9
	swi	r10,r1,52
	swi	r11,r1,56
	bslli	r11,r9,25
	bslli	r10,r8,25
	or	r11,r3,r11
	rsub	r4,r10,r22
	rsubc	r5,r11,r23
	lwi	r10,r1,44
	lwi	r11,r1,48
	swi	r4,r1,164
	swi	r5,r1,168
	addi	r4,r10,0x02000000
	addic	r5,r11,0x00000000
	bslli	r3,r5,6
	bsrli	r22,r4,26
	bsrai	r23,r5,26
	lwi	r10,r1,248
	lwi	r11,r1,252
	or	r22,r3,r22
	add	r10,r10,r22
	addc	r11,r11,r23
	swi	r10,r1,60
	swi	r11,r1,64
	lwi	r10,r1,52
	lwi	r11,r1,56
	addi	r4,r10,0x02000000
	addic	r5,r11,0x00000000
	bsrli	r11,r4,26
	bslli	r3,r5,6
	or	r3,r3,r11
	swi	r3,r1,124
	bsrai	r3,r5,26
	swi	r3,r1,128
	lwi	r10,r1,76
	lwi	r11,r1,80
	lwi	r4,r1,124
	lwi	r5,r1,128
	add	r10,r10,r4
	addc	r11,r11,r5
	swi	r10,r1,68
	swi	r11,r1,72
	lwi	r10,r1,60
	lwi	r11,r1,64
	addi	r4,r10,0x01000000
	addic	r5,r11,0x00000000
	bsrli	r11,r4,25
	bslli	r3,r5,7
	or	r3,r3,r11
	swi	r3,r1,28
	bsrai	r3,r5,25
	swi	r3,r1,32
	lwi	r10,r1,28
	lwi	r11,r1,32
	add	r10,r6,r10
	addc	r11,r7,r11
	swi	r10,r1,100
	swi	r11,r1,104
	lwi	r10,r1,68
	lwi	r11,r1,72
	lwi	r6,r1,100
	lwi	r7,r1,104
	addi	r4,r10,0x01000000
	addic	r5,r11,0x00000000
	bsrai	r11,r5,25
	bslli	r3,r5,7
	bsrli	r10,r4,25
	lwi	r4,r1,156
	lwi	r5,r1,160
	or	r10,r3,r10
	swi	r10,r1,276
	add	r4,r4,r10
	addc	r5,r5,r11
	swi	r4,r1,108
	swi	r5,r1,112
	lwi	r8,r1,108
	lwi	r9,r1,112
	addi	r4,r6,0x02000000
	addic	r5,r7,0x00000000
	bslli	r3,r5,6
	bsrli	r28,r4,26
	bsrai	r29,r5,26
	addi	r4,r8,0x02000000
	addic	r5,r9,0x00000000
	or	r28,r3,r28
	bsrli	r26,r4,26
	bslli	r3,r5,6
	bsrai	r27,r5,26
	or	r26,r3,r26
	add	r4,r24,r26
	addc	r5,r25,r27
	swi	r4,r1,76
	swi	r5,r1,80
	addi	r4,r4,0x01000000
	addic	r5,r5,0x00000000
	bslli	r3,r5,7
	bsrli	r19,r4,25
	bsrai	r31,r5,25
	or	r19,r3,r19
	addk	r5,r19,r0
	addk	r6,r31,r0
	addik	r8,r0,0x00000000
	addik	r7,r0,0x00000013 #li => la
	brlid	r15,__muldi3
	
	swi	r11,r1,272
	lwi	r6,r1,84
	lwi	r7,r1,88
	addk	r8,r3,r0
	addk	r9,r4,r0
	add	r6,r8,r6
	addc	r7,r9,r7
	swi	r6,r1,84
	swi	r7,r1,88
	addi	r6,r6,0x02000000
	addic	r7,r7,0x00000000
	bslli	r3,r7,6
	bsrli	r4,r6,26
	bsrai	r5,r7,26
	or	r4,r3,r4
	bslli	r9,r5,26
	bsrli	r3,r4,6
	bslli	r24,r4,26
	or	r3,r3,r9
	swi	r3,r1,120
	swi	r24,r1,116
	lwi	r24,r1,116
	lwi	r25,r1,120
	lwi	r8,r1,84
	lwi	r9,r1,88
	bsrli	r3,r22,6
	rsub	r6,r24,r8
	rsubc	r7,r25,r9
	lwi	r24,r1,92
	lwi	r25,r1,96
	swi	r6,r1,36
	swi	r7,r1,40
	swi	r6,r30,0
	add	r4,r24,r4
	addc	r5,r25,r5
	bslli	r5,r23,26
	lwi	r24,r1,44
	lwi	r25,r1,48
	swi	r4,r30,4
	bslli	r4,r22,26
	or	r5,r3,r5
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	swi	r6,r30,8
	lwi	r25,r1,28
	lwi	r6,r1,32
	bsrli	r3,r25,7
	bslli	r4,r25,25
	bslli	r5,r6,25
	lwi	r24,r1,60
	lwi	r25,r1,64
	or	r5,r3,r5
	bsrli	r3,r28,6
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	lwi	r24,r1,100
	lwi	r25,r1,104
	bslli	r5,r29,26
	bslli	r4,r28,26
	or	r5,r3,r5
	swi	r6,r30,12
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	lwi	r24,r1,164
	lwi	r25,r1,168
	swi	r6,r30,16
	add	r28,r24,r28
	addc	r29,r25,r29
	swi	r28,r30,20
	lwi	r25,r1,124
	lwi	r6,r1,128
	lwi	r10,r1,276
	bsrli	r3,r25,6
	bslli	r4,r25,26
	bslli	r5,r6,26
	lwi	r24,r1,52
	lwi	r25,r1,56
	lwi	r11,r1,272
	or	r5,r3,r5
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	bsrli	r3,r10,7
	bslli	r4,r10,25
	bslli	r5,r11,25
	lwi	r10,r1,68
	lwi	r11,r1,72
	or	r5,r3,r5
	lwi	r24,r1,108
	lwi	r25,r1,112
	swi	r6,r30,24
	bsrli	r3,r26,6
	rsub	r6,r4,r10
	rsubc	r7,r5,r11
	bslli	r5,r27,26
	bslli	r4,r26,26
	or	r5,r3,r5
	swi	r6,r30,28
	bsrli	r3,r19,7
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	lwi	r10,r1,76
	lwi	r11,r1,80
	bslli	r5,r31,25
	bslli	r4,r19,25
	or	r5,r3,r5
	swi	r6,r30,32
	rsub	r6,r4,r10
	rsubc	r7,r5,r11
	swi	r6,r30,36
	lwi	r15,r1,0
	lwi	r19,r1,280
	lwi	r22,r1,284
	lwi	r23,r1,288
	lwi	r24,r1,292
	lwi	r25,r1,296
	lwi	r26,r1,300
	lwi	r27,r1,304
	lwi	r28,r1,308
	lwi	r29,r1,312
	lwi	r30,r1,316
	lwi	r31,r1,320
	rtsd	r15,8 
	
	addik	r1,r1,324
	.end	fe_mul
$Lfe26:
	.size	fe_mul,$Lfe26-fe_mul
	.section	.text.fe_sq,"ax",@progbits
	.align	2
	.ent	fe_sq
	.type	fe_sq, @function
fe_sq:
	.frame	r1,216,r15		# vars= 144, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-216
	swi	r15,r1,0
	swi	r24,r1,184
	swi	r25,r1,188
	swi	r29,r1,204
	swi	r19,r1,172
	swi	r22,r1,176
	swi	r23,r1,180
	swi	r26,r1,192
	swi	r27,r1,196
	swi	r28,r1,200
	swi	r30,r1,208
	swi	r31,r1,212
	lwi	r19,r6,4
	lwi	r10,r6,36
	lwi	r27,r6,8
	addk	r3,r19,r19
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	muli	r3,r10,38
	lwi	r9,r6,32
	swi	r24,r1,28
	swi	r25,r1,32
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	addk	r3,r27,r27
	lwi	r28,r6,12
	swi	r24,r1,36
	swi	r25,r1,40
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	muli	r3,r9,19
	lwi	r31,r6,28
	swi	r24,r1,92
	swi	r25,r1,96
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	addk	r3,r28,r28
	lwi	r26,r6,16
	lwi	r23,r6,0
	swi	r24,r1,60
	swi	r25,r1,64
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	muli	r3,r31,38
	lwi	r30,r6,24
	addk	r29,r5,r0
	swi	r24,r1,76
	swi	r25,r1,80
	addk	r4,r0,r23
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	addk	r8,r5,r0
	addk	r3,r26,r26
	swi	r24,r1,100
	swi	r25,r1,104
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	muli	r3,r30,19
	lwi	r22,r6,20
	addk	r7,r4,r0
	addk	r6,r8,r0
	addk	r5,r4,r0
	swi	r24,r1,124
	swi	r25,r1,128
	addk	r24,r0,r3
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	swi	r9,r1,164
	swi	r24,r1,108
	swi	r25,r1,112
	addk	r24,r0,r22
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	swi	r24,r1,116
	swi	r25,r1,120
	brlid	r15,__muldi3
	
	swi	r10,r1,168
	lwi	r5,r1,28
	lwi	r6,r1,32
	lwi	r7,r1,36
	lwi	r8,r1,40
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,60
	lwi	r8,r1,64
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	
	addk	r23,r23,r23
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,100
	lwi	r8,r1,104
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,124
	lwi	r6,r1,128
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,116
	lwi	r8,r1,120
	add	r24,r24,r4
	addc	r25,r25,r5
	muli	r4,r22,38
	addk	r22,r22,r22
	addk	r4,r0,r4
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r6,r5,r0
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r6,r24,r4
	addc	r7,r25,r5
	addk	r24,r0,r23
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	addk	r4,r0,r26
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r24,r1,44
	swi	r25,r1,48
	swi	r6,r1,140
	swi	r7,r1,144
	addk	r24,r0,r19
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	addk	r6,r0,r22
	add	r7,r6,r6
	addc	r7,r0,r0
	beqi	r7,.+8
	addi	r7,r0,0xffffffff
	swi	r24,r1,132
	swi	r25,r1,136
	swi	r6,r1,84
	swi	r7,r1,88
	swi	r4,r1,52
	swi	r5,r1,56
	lwi	r7,r1,132
	lwi	r8,r1,136
	lwi	r5,r1,44
	lwi	r6,r1,48
	addk	r24,r0,r27
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	addk	r26,r0,r28
	add	r27,r26,r26
	addc	r27,r0,r0
	beqi	r27,.+8
	addi	r27,r0,0xffffffff
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	lwi	r5,r1,36
	lwi	r6,r1,40
	addk	r7,r24,r0
	addk	r8,r25,r0
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,76
	lwi	r8,r1,80
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,52
	lwi	r8,r1,56
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,108
	lwi	r6,r1,112
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r8,r25,r0
	add	r6,r22,r4
	addc	r7,r23,r5
	addk	r4,r0,r30
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r6,r1,148
	swi	r7,r1,152
	swi	r4,r1,68
	swi	r5,r1,72
	addk	r7,r24,r0
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	
	addk	r30,r30,r30
	lwi	r7,r1,132
	lwi	r8,r1,136
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,76
	lwi	r8,r1,80
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,124
	lwi	r8,r1,128
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,108
	lwi	r6,r1,112
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r8,r27,r0
	add	r6,r22,r4
	addc	r7,r23,r5
	swi	r6,r1,124
	swi	r7,r1,128
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	
	addk	r7,r26,r0
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r7,r24,r0
	addk	r8,r25,r0
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,52
	lwi	r8,r1,56
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r6,r22,r4
	addc	r7,r23,r5
	addk	r4,r0,r31
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	swi	r6,r1,132
	swi	r7,r1,136
	swi	r4,r1,108
	swi	r5,r1,112
	lwi	r7,r1,52
	lwi	r8,r1,56
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	
	addk	r31,r31,r31
	lwi	r7,r1,76
	lwi	r8,r1,80
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r24,r0
	addk	r8,r25,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	addk	r6,r25,r0
	brlid	r15,__muldi3
	
	addk	r5,r24,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,60
	lwi	r8,r1,64
	add	r22,r22,r4
	addc	r23,r23,r5
	addk	r4,r0,r30
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	addk	r6,r5,r0
	addk	r30,r0,r31
	add	r31,r30,r30
	addc	r31,r0,r0
	beqi	r31,.+8
	addi	r31,r0,0xffffffff
	brlid	r15,__muldi3
	
	addk	r5,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,100
	lwi	r6,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,44
	lwi	r8,r1,48
	add	r24,r22,r4
	addc	r25,r23,r5
	lwi	r5,r1,116
	lwi	r6,r1,120
	swi	r24,r1,100
	swi	r25,r1,104
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	lwi	r7,r1,52
	lwi	r8,r1,56
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r22,r3,r0
	brlid	r15,__muldi3
	
	addk	r23,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r26,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	
	addk	r8,r27,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r30,r0
	add	r22,r22,r4
	addc	r23,r23,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	
	addk	r8,r31,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r9,r1,164
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r24,r22,r4
	addc	r25,r23,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	addk	r22,r0,r9
	add	r23,r22,r22
	addc	r23,r0,r0
	beqi	r23,.+8
	addi	r23,r0,0xffffffff
	swi	r24,r1,156
	swi	r25,r1,160
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	lwi	r7,r1,84
	lwi	r8,r1,88
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,52
	lwi	r8,r1,56
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r26,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	
	addk	r8,r27,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r30,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	
	addk	r8,r31,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r22,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,60
	lwi	r6,r1,64
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r6,r24,r4
	addc	r7,r25,r5
	swi	r6,r1,60
	swi	r7,r1,64
	lwi	r7,r1,108
	lwi	r8,r1,112
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	lwi	r5,r1,28
	lwi	r6,r1,32
	lwi	r7,r1,68
	lwi	r8,r1,72
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,116
	lwi	r8,r1,120
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,52
	lwi	r8,r1,56
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r22,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r10,r1,168
	addk	r7,r22,r0
	add	r8,r24,r4
	addc	r9,r25,r5
	swi	r8,r1,116
	swi	r9,r1,120
	lwi	r5,r1,44
	lwi	r6,r1,48
	addk	r24,r0,r10
	add	r25,r24,r24
	addc	r25,r0,r0
	beqi	r25,.+8
	addi	r25,r0,0xffffffff
	brlid	r15,__muldi3
	
	addk	r8,r23,r0
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r7,r30,r0
	addk	r8,r31,r0
	addk	r26,r3,r0
	brlid	r15,__muldi3
	
	addk	r27,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r26,r26,r4
	addc	r27,r27,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r26,r26,r4
	addc	r27,r27,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	lwi	r7,r1,52
	lwi	r8,r1,56
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r6,r8,r0
	add	r26,r26,r4
	addc	r27,r27,r5
	brlid	r15,__muldi3
	
	addk	r5,r7,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r24,r0
	add	r26,r26,r4
	addc	r27,r27,r5
	lwi	r5,r1,36
	lwi	r6,r1,40
	brlid	r15,__muldi3
	
	addk	r8,r25,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	addk	r7,r24,r0
	add	r26,r26,r4
	addc	r27,r27,r5
	lwi	r5,r1,44
	lwi	r6,r1,48
	brlid	r15,__muldi3
	
	addk	r8,r25,r0
	lwi	r5,r1,28
	lwi	r6,r1,32
	addk	r7,r22,r0
	addk	r8,r23,r0
	addk	r24,r3,r0
	brlid	r15,__muldi3
	
	addk	r25,r4,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,108
	lwi	r8,r1,112
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,92
	lwi	r6,r1,96
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,68
	lwi	r8,r1,72
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,76
	lwi	r6,r1,80
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	addk	r5,r4,r0
	addk	r4,r3,r0
	lwi	r7,r1,84
	lwi	r8,r1,88
	add	r24,r24,r4
	addc	r25,r25,r5
	lwi	r5,r1,52
	lwi	r6,r1,56
	brlid	r15,__muldi3
	nop		# Unfilled delay slot

	lwi	r10,r1,140
	lwi	r11,r1,144
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r24,r24,r4
	addc	r25,r25,r5
	addi	r4,r10,0x02000000
	addic	r5,r11,0x00000000
	bslli	r3,r5,6
	bsrli	r8,r4,26
	bsrai	r9,r5,26
	lwi	r10,r1,148
	lwi	r11,r1,152
	or	r8,r3,r8
	bsrli	r3,r8,6
	bslli	r6,r8,26
	bslli	r7,r9,26
	add	r4,r10,r8
	addc	r5,r11,r9
	lwi	r8,r1,140
	lwi	r9,r1,144
	or	r7,r3,r7
	rsub	r10,r6,r8
	rsubc	r11,r7,r9
	swi	r10,r1,92
	swi	r11,r1,96
	lwi	r10,r1,100
	lwi	r11,r1,104
	addi	r8,r10,0x02000000
	addic	r9,r11,0x00000000
	bslli	r3,r9,6
	bsrli	r6,r8,26
	bsrai	r7,r9,26
	lwi	r10,r1,156
	lwi	r11,r1,160
	or	r6,r3,r6
	bsrli	r3,r6,6
	bslli	r9,r7,26
	bslli	r8,r6,26
	add	r22,r10,r6
	addc	r23,r11,r7
	lwi	r10,r1,100
	lwi	r11,r1,104
	or	r9,r3,r9
	rsub	r6,r8,r10
	rsubc	r7,r9,r11
	addi	r8,r4,0x01000000
	addic	r9,r5,0x00000000
	bsrai	r11,r9,25
	bslli	r3,r9,7
	bsrli	r10,r8,25
	lwi	r8,r1,124
	lwi	r9,r1,128
	or	r10,r3,r10
	bsrli	r3,r10,7
	add	r8,r8,r10
	addc	r9,r9,r11
	swi	r8,r1,36
	swi	r9,r1,40
	bslli	r9,r11,25
	bslli	r8,r10,25
	or	r9,r3,r9
	rsub	r10,r8,r4
	rsubc	r11,r9,r5
	addi	r4,r22,0x01000000
	addic	r5,r23,0x00000000
	swi	r10,r1,100
	swi	r11,r1,104
	bslli	r3,r5,7
	bsrli	r8,r4,25
	bsrai	r9,r5,25
	lwi	r10,r1,60
	lwi	r11,r1,64
	or	r8,r3,r8
	bsrli	r3,r8,7
	add	r10,r10,r8
	addc	r11,r11,r9
	swi	r10,r1,44
	swi	r11,r1,48
	bslli	r11,r9,25
	bslli	r10,r8,25
	or	r11,r3,r11
	rsub	r4,r10,r22
	rsubc	r5,r11,r23
	lwi	r10,r1,36
	lwi	r11,r1,40
	swi	r4,r1,108
	swi	r5,r1,112
	addi	r4,r10,0x02000000
	addic	r5,r11,0x00000000
	bslli	r3,r5,6
	bsrli	r22,r4,26
	bsrai	r23,r5,26
	lwi	r10,r1,132
	lwi	r11,r1,136
	or	r22,r3,r22
	add	r10,r10,r22
	addc	r11,r11,r23
	swi	r10,r1,52
	swi	r11,r1,56
	lwi	r10,r1,44
	lwi	r11,r1,48
	addi	r4,r10,0x02000000
	addic	r5,r11,0x00000000
	bsrli	r11,r4,26
	bslli	r3,r5,6
	or	r3,r3,r11
	swi	r3,r1,132
	bsrai	r3,r5,26
	swi	r3,r1,136
	lwi	r10,r1,116
	lwi	r11,r1,120
	lwi	r4,r1,132
	lwi	r5,r1,136
	add	r10,r10,r4
	addc	r11,r11,r5
	swi	r10,r1,76
	swi	r11,r1,80
	lwi	r10,r1,52
	lwi	r11,r1,56
	addi	r4,r10,0x01000000
	addic	r5,r11,0x00000000
	bsrli	r11,r4,25
	bslli	r3,r5,7
	or	r3,r3,r11
	swi	r3,r1,28
	bsrai	r3,r5,25
	swi	r3,r1,32
	lwi	r10,r1,28
	lwi	r11,r1,32
	add	r10,r6,r10
	addc	r11,r7,r11
	swi	r10,r1,60
	swi	r11,r1,64
	lwi	r10,r1,76
	lwi	r11,r1,80
	lwi	r6,r1,60
	lwi	r7,r1,64
	addi	r4,r10,0x01000000
	addic	r5,r11,0x00000000
	bslli	r3,r5,7
	bsrli	r10,r4,25
	bsrai	r11,r5,25
	or	r10,r3,r10
	add	r4,r26,r10
	addc	r5,r27,r11
	swi	r4,r1,84
	swi	r5,r1,88
	lwi	r8,r1,84
	lwi	r9,r1,88
	addi	r4,r6,0x02000000
	addic	r5,r7,0x00000000
	bslli	r3,r5,6
	bsrli	r30,r4,26
	bsrai	r31,r5,26
	addi	r4,r8,0x02000000
	addic	r5,r9,0x00000000
	or	r30,r3,r30
	bsrli	r26,r4,26
	bslli	r3,r5,6
	bsrai	r27,r5,26
	or	r26,r3,r26
	add	r4,r24,r26
	addc	r5,r25,r27
	swi	r4,r1,68
	swi	r5,r1,72
	addi	r4,r4,0x01000000
	addic	r5,r5,0x00000000
	bslli	r3,r5,7
	bsrli	r19,r4,25
	bsrai	r28,r5,25
	or	r19,r3,r19
	addk	r5,r19,r0
	addk	r6,r28,r0
	addik	r8,r0,0x00000000
	addik	r7,r0,0x00000013 #li => la
	swi	r10,r1,168
	brlid	r15,__muldi3
	
	swi	r11,r1,164
	lwi	r6,r1,92
	lwi	r7,r1,96
	addk	r8,r3,r0
	addk	r9,r4,r0
	add	r6,r8,r6
	addc	r7,r9,r7
	swi	r6,r1,116
	swi	r7,r1,120
	addi	r6,r6,0x02000000
	addic	r7,r7,0x00000000
	bslli	r3,r7,6
	bsrli	r4,r6,26
	bsrai	r5,r7,26
	or	r4,r3,r4
	bslli	r9,r5,26
	bsrli	r3,r4,6
	bslli	r24,r4,26
	or	r3,r3,r9
	swi	r3,r1,128
	swi	r24,r1,124
	lwi	r24,r1,124
	lwi	r25,r1,128
	lwi	r8,r1,116
	lwi	r9,r1,120
	bsrli	r3,r22,6
	rsub	r6,r24,r8
	rsubc	r7,r25,r9
	lwi	r24,r1,100
	lwi	r25,r1,104
	swi	r6,r1,92
	swi	r7,r1,96
	swi	r6,r29,0
	add	r4,r24,r4
	addc	r5,r25,r5
	bslli	r5,r23,26
	lwi	r24,r1,36
	lwi	r25,r1,40
	swi	r4,r29,4
	bslli	r4,r22,26
	or	r5,r3,r5
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	swi	r6,r29,8
	lwi	r25,r1,28
	lwi	r6,r1,32
	bsrli	r3,r25,7
	bslli	r4,r25,25
	bslli	r5,r6,25
	lwi	r24,r1,52
	lwi	r25,r1,56
	or	r5,r3,r5
	bsrli	r3,r30,6
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	lwi	r24,r1,60
	lwi	r25,r1,64
	bslli	r5,r31,26
	bslli	r4,r30,26
	or	r5,r3,r5
	swi	r6,r29,12
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	lwi	r24,r1,108
	lwi	r25,r1,112
	swi	r6,r29,16
	add	r30,r24,r30
	addc	r31,r25,r31
	swi	r30,r29,20
	lwi	r25,r1,132
	lwi	r6,r1,136
	lwi	r10,r1,168
	bsrli	r3,r25,6
	bslli	r4,r25,26
	bslli	r5,r6,26
	lwi	r24,r1,44
	lwi	r25,r1,48
	lwi	r11,r1,164
	or	r5,r3,r5
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	bsrli	r3,r10,7
	bslli	r4,r10,25
	bslli	r5,r11,25
	lwi	r10,r1,76
	lwi	r11,r1,80
	or	r5,r3,r5
	lwi	r24,r1,84
	lwi	r25,r1,88
	swi	r6,r29,24
	bsrli	r3,r26,6
	rsub	r6,r4,r10
	rsubc	r7,r5,r11
	bslli	r5,r27,26
	bslli	r4,r26,26
	or	r5,r3,r5
	swi	r6,r29,28
	bsrli	r3,r19,7
	rsub	r6,r4,r24
	rsubc	r7,r5,r25
	lwi	r10,r1,68
	lwi	r11,r1,72
	bslli	r5,r28,25
	bslli	r4,r19,25
	or	r5,r3,r5
	swi	r6,r29,32
	rsub	r6,r4,r10
	rsubc	r7,r5,r11
	swi	r6,r29,36
	lwi	r15,r1,0
	lwi	r19,r1,172
	lwi	r22,r1,176
	lwi	r23,r1,180
	lwi	r24,r1,184
	lwi	r25,r1,188
	lwi	r26,r1,192
	lwi	r27,r1,196
	lwi	r28,r1,200
	lwi	r29,r1,204
	lwi	r30,r1,208
	lwi	r31,r1,212
	rtsd	r15,8 
	
	addik	r1,r1,216
	.end	fe_sq
$Lfe27:
	.size	fe_sq,$Lfe27-fe_sq
	.section	.text.scalar_bit,"ax",@progbits
	.align	2
	.ent	scalar_bit
	.type	scalar_bit, @function
scalar_bit:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	bltid	r6,$L74
	addk	r3,r0,r0
	bsrai	r3,r6,3
	lbu	r3,r3,r5
	andi	r6,r6,7 #and1
	bsra	r3,r3,r6
	andi	r3,r3,1 #and1
$L74:
	rtsd	r15, 8
	nop		# Unfilled delay slot

	.end	scalar_bit
$Lfe28:
	.size	scalar_bit,$Lfe28-scalar_bit
	.section	.text.modL,"ax",@progbits
	.align	2
	.ent	modL
	.type	modL, @function
modL:
	.frame	r1,92,r15		# vars= 20, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-92
	swi	r19,r1,48
	swi	r31,r1,88
	addk	r19,r6,r0
	addk	r31,r5,r0
	swi	r24,r1,60
	swi	r30,r1,84
	swi	r15,r1,0
	swi	r22,r1,52
	swi	r23,r1,56
	swi	r25,r1,64
	swi	r26,r1,68
	swi	r27,r1,72
	swi	r28,r1,76
	swi	r29,r1,80
	addik	r24,r0,32	# 0x20
	addik	r30,r0,63	# 0x3f
$L78:
	bslli	r25,r30,3
	addik	r3,r30,-12
	addik	r4,r0,32	# 0x20
	addik	r9,r30,-32
	addk	r11,r19,r25
	addik	r23,r0,0x00000000
	addik	r22,r0,0x00000000 #li => la
	swi	r3,r1,28
	rsubk	r12,r30,r4
$L76:
	lwi	r5,r1,28
	cmpu	r18,r5,r9
	bltid	r18,$L77
	addk	r3,r12,r9
	addik	r25,r25,-96
	addk	r25,r19,r25
	lwi	r4,r25,0
	lwi	r5,r25,4
	addik	r24,r24,-1
	add	r22,r4,r22
	addc	r23,r5,r23
	swi	r22,r25,0
	swi	r23,r25,4
	addik	r5,r0,0x00000000
	addik	r4,r0,0x00000000 #li => la
	swi	r4,r11,0
	swi	r5,r11,4
	bneid	r24,$L78
	addik	r30,r30,-1
	addk	r22,r4,r0
	addk	r23,r5,r0
	addik	r25,r0,32	# 0x20
$L79:
	bslli	r28,r24,3
	lwi	r6,r19,252
	lwi	r3,r19,248
	addik	r4,r28,L
	bslli	r5,r6,28
	bsrli	r3,r3,4
	bsrai	r6,r6,4
	lwi	r7,r4,0
	lwi	r8,r4,4
	or	r5,r5,r3
	brlid	r15,__muldi3
	
	addk	r29,r19,r28
	addk	r5,r4,r0
	addk	r4,r3,r0
	addik	r25,r25,-1
	addik	r24,r24,1
	rsub	r6,r4,r22
	rsubc	r7,r5,r23
	lwi	r4,r29,0
	lwi	r5,r29,4
	add	r4,r6,r4
	addc	r5,r7,r5
	bsrli	r22,r4,8
	bslli	r3,r5,24
	bsrai	r23,r5,8
	andi	r4,r4,255 #and1
	sw	r4,r28,r19
	swi	r0,r29,4
	bneid	r25,$L79
	or	r22,r3,r22
	addik	r24,r0,32	# 0x20
	bslli	r3,r25,3
$L87:
	addk	r28,r19,r3
	addik	r3,r3,L
	lwi	r7,r3,0
	lwi	r8,r3,4
	addk	r5,r22,r0
	addk	r6,r23,r0
	addik	r24,r24,-1
	brlid	r15,__muldi3
	
	addik	r25,r25,1
	addk	r9,r4,r0
	addk	r8,r3,r0
	lwi	r4,r28,0
	lwi	r5,r28,4
	rsub	r6,r8,r4
	rsubc	r7,r9,r5
	swi	r6,r28,0
	swi	r7,r28,4
	bneid	r24,$L87
	bslli	r3,r25,3
	addik	r6,r0,32	# 0x20
$L81:
	addik	r7,r24,1
	bslli	r3,r7,3
	addk	r8,r19,r3
	addik	r3,r3,-8
	addk	r4,r19,r3
	lwi	r4,r4,4
	lw	r9,r3,r19
	addik	r6,r6,-1
	bslli	r5,r4,24
	bsrli	r26,r9,8
	bsrai	r27,r4,8
	or	r26,r5,r26
	lwi	r4,r8,0
	lwi	r5,r8,4
	add	r4,r4,r26
	addc	r5,r5,r27
	swi	r4,r8,0
	swi	r5,r8,4
	lbu	r3,r3,r19
	sb	r3,r24,r31
	bneid	r6,$L81
	addk	r24,r7,r0
	lwi	r15,r1,0
	lwi	r19,r1,48
	lwi	r22,r1,52
	lwi	r23,r1,56
	lwi	r24,r1,60
	lwi	r25,r1,64
	lwi	r26,r1,68
	lwi	r27,r1,72
	lwi	r28,r1,76
	lwi	r29,r1,80
	lwi	r30,r1,84
	lwi	r31,r1,88
	rtsd	r15,8 
	
	addik	r1,r1,92
$L77:
	lwi	r5,r11,0
	lwi	r4,r11,4
	bslli	r3,r3,3
	bslli	r10,r9,3
	bsrli	r6,r5,28
	bslli	r4,r4,4
	bslli	r5,r5,4
	addik	r3,r3,L
	lwi	r7,r3,0
	lwi	r8,r3,4
	addk	r10,r19,r10
	or	r6,r6,r4
	swi	r9,r1,32
	swi	r10,r1,36
	swi	r11,r1,40
	brlid	r15,__muldi3
	
	swi	r12,r1,44
	addk	r5,r4,r0
	lwi	r10,r1,36
	addk	r4,r3,r0
	lwi	r9,r1,32
	lwi	r12,r1,44
	rsub	r6,r4,r22
	rsubc	r7,r5,r23
	lwi	r4,r10,0
	lwi	r5,r10,4
	lwi	r11,r1,40
	add	r4,r6,r4
	addc	r5,r7,r5
	addi	r6,r4,0x00000080
	addic	r7,r5,0x00000000
	bslli	r3,r7,24
	bsrli	r22,r6,8
	bsrai	r23,r7,8
	or	r22,r3,r22
	bsrli	r3,r22,24
	bslli	r29,r23,8
	bslli	r28,r22,8
	or	r29,r3,r29
	rsub	r6,r28,r4
	rsubc	r7,r29,r5
	swi	r6,r10,0
	swi	r7,r10,4
	brid	$L76
	addik	r9,r9,1
	.end	modL
$Lfe29:
	.size	modL,$Lfe29-modL
	.section	.text.ge_zero,"ax",@progbits
	.align	2
	.ent	ge_zero
	.type	ge_zero, @function
ge_zero:
	.frame	r1,32,r15		# vars= 0, regs= 1, args= 24
	.mask	0x00088000
	addik	r1,r1,-32
	swi	r19,r1,28
	swi	r15,r1,0
	brlid	r15,fe_0
	
	addk	r19,r5,r0
	brlid	r15,fe_1
	
	addik	r5,r19,40
	brlid	r15,fe_1
	
	addik	r5,r19,80
	brlid	r15,fe_0
	
	addik	r5,r19,120
	lwi	r15,r1,0
	lwi	r19,r1,28
	rtsd	r15,8 
	
	addik	r1,r1,32
	.end	ge_zero
$Lfe30:
	.size	ge_zero,$Lfe30-ge_zero
	.section	.text.ge_cache,"ax",@progbits
	.align	2
	.ent	ge_cache
	.type	ge_cache, @function
ge_cache:
	.frame	r1,40,r15		# vars= 0, regs= 3, args= 24
	.mask	0x00c88000
	addik	r1,r1,-40
	swi	r23,r1,36
	addik	r23,r6,40
	swi	r19,r1,28
	addk	r7,r6,r0
	addk	r19,r6,r0
	addk	r6,r23,r0
	swi	r15,r1,0
	swi	r22,r1,32
	brlid	r15,fe_add
	
	addk	r22,r5,r0
	addk	r7,r19,r0
	addk	r6,r23,r0
	brlid	r15,fe_sub
	
	addik	r5,r22,40
	addik	r6,r19,80
	brlid	r15,fe_copy
	
	addik	r5,r22,80
	addik	r7,r0,D2.2740
	addik	r6,r19,120
	brlid	r15,fe_mul
	
	addik	r5,r22,120
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	rtsd	r15,8 
	
	addik	r1,r1,40
	.end	ge_cache
$Lfe31:
	.size	ge_cache,$Lfe31-ge_cache
	.section	.text.ge_add,"ax",@progbits
	.align	2
	.ent	ge_add
	.type	ge_add, @function
ge_add:
	.frame	r1,132,r15		# vars= 80, regs= 6, args= 24
	.mask	0x07c88000
	addik	r1,r1,-132
	swi	r19,r1,108
	addik	r19,r6,40
	swi	r23,r1,116
	swi	r25,r1,124
	addk	r23,r6,r0
	addk	r25,r7,r0
	addk	r7,r6,r0
	addk	r6,r19,r0
	swi	r22,r1,112
	addk	r22,r5,r0
	addik	r5,r1,68
	swi	r15,r1,0
	swi	r24,r1,120
	brlid	r15,fe_add
	
	swi	r26,r1,128
	addk	r7,r23,r0
	addk	r6,r19,r0
	addik	r5,r1,28
	brlid	r15,fe_sub
	
	addik	r26,r22,40
	addik	r6,r1,68
	addk	r7,r25,r0
	addk	r5,r6,r0
	addik	r19,r22,80
	brlid	r15,fe_mul
	
	addik	r24,r22,120
	addik	r6,r1,28
	addk	r5,r6,r0
	brlid	r15,fe_mul
	
	addik	r7,r25,40
	addk	r5,r26,r0
	addik	r7,r1,28
	brlid	r15,fe_add
	
	addik	r6,r1,68
	addk	r5,r22,r0
	addik	r7,r1,28
	brlid	r15,fe_sub
	
	addik	r6,r1,68
	addik	r7,r23,80
	addk	r6,r7,r0
	brlid	r15,fe_add
	
	addk	r5,r19,r0
	addk	r6,r19,r0
	addk	r5,r19,r0
	brlid	r15,fe_mul
	
	addik	r7,r25,80
	addk	r5,r24,r0
	addik	r7,r25,120
	brlid	r15,fe_mul
	
	addik	r6,r23,120
	addk	r7,r24,r0
	addk	r6,r19,r0
	brlid	r15,fe_add
	
	addik	r5,r1,68
	addk	r7,r24,r0
	addk	r6,r19,r0
	brlid	r15,fe_sub
	
	addik	r5,r1,28
	addk	r7,r26,r0
	addk	r6,r22,r0
	brlid	r15,fe_mul
	
	addk	r5,r24,r0
	addk	r6,r22,r0
	addk	r5,r22,r0
	brlid	r15,fe_mul
	
	addik	r7,r1,28
	addk	r6,r26,r0
	addk	r5,r26,r0
	brlid	r15,fe_mul
	
	addik	r7,r1,68
	addk	r5,r19,r0
	addik	r7,r1,28
	brlid	r15,fe_mul
	
	addik	r6,r1,68
	lwi	r15,r1,0
	lwi	r19,r1,108
	lwi	r22,r1,112
	lwi	r23,r1,116
	lwi	r24,r1,120
	lwi	r25,r1,124
	lwi	r26,r1,128
	rtsd	r15,8 
	
	addik	r1,r1,132
	.end	ge_add
$Lfe32:
	.size	ge_add,$Lfe32-ge_add
	.section	.text.ge_madd,"ax",@progbits
	.align	2
	.ent	ge_madd
	.type	ge_madd, @function
ge_madd:
	.frame	r1,60,r15		# vars= 0, regs= 8, args= 24
	.mask	0x1fc88000
	addik	r1,r1,-60
	swi	r25,r1,44
	addik	r25,r6,40
	swi	r23,r1,36
	swi	r24,r1,40
	addk	r23,r5,r0
	addk	r24,r6,r0
	addk	r5,r10,r0
	swi	r27,r1,52
	addk	r27,r7,r0
	addk	r7,r6,r0
	addk	r6,r25,r0
	swi	r22,r1,32
	lwi	r22,r1,88
	swi	r15,r1,0
	swi	r19,r1,28
	swi	r26,r1,48
	addk	r19,r10,r0
	addk	r26,r8,r0
	swi	r28,r1,56
	brlid	r15,fe_add
	
	addk	r28,r9,r0
	addk	r7,r24,r0
	addk	r6,r25,r0
	addk	r5,r22,r0
	brlid	r15,fe_sub
	
	addik	r25,r23,80
	addk	r7,r27,r0
	addk	r6,r19,r0
	addk	r5,r19,r0
	brlid	r15,fe_mul
	
	addik	r27,r23,40
	addk	r7,r26,r0
	addk	r6,r22,r0
	addk	r5,r22,r0
	brlid	r15,fe_mul
	
	addik	r26,r23,120
	addk	r7,r22,r0
	addk	r6,r19,r0
	brlid	r15,fe_add
	
	addk	r5,r27,r0
	addk	r7,r22,r0
	addk	r6,r19,r0
	brlid	r15,fe_sub
	
	addk	r5,r23,r0
	addik	r7,r24,80
	addk	r6,r7,r0
	brlid	r15,fe_add
	
	addk	r5,r25,r0
	addk	r7,r28,r0
	addk	r5,r26,r0
	brlid	r15,fe_mul
	
	addik	r6,r24,120
	addk	r7,r26,r0
	addk	r6,r25,r0
	brlid	r15,fe_add
	
	addk	r5,r19,r0
	addk	r7,r26,r0
	addk	r6,r25,r0
	brlid	r15,fe_sub
	
	addk	r5,r22,r0
	addk	r7,r27,r0
	addk	r6,r23,r0
	brlid	r15,fe_mul
	
	addk	r5,r26,r0
	addk	r7,r22,r0
	addk	r6,r23,r0
	brlid	r15,fe_mul
	
	addk	r5,r23,r0
	addk	r7,r19,r0
	addk	r6,r27,r0
	brlid	r15,fe_mul
	
	addk	r5,r27,r0
	addk	r7,r22,r0
	addk	r6,r19,r0
	brlid	r15,fe_mul
	
	addk	r5,r25,r0
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	lwi	r26,r1,48
	lwi	r27,r1,52
	lwi	r28,r1,56
	rtsd	r15,8 
	
	addik	r1,r1,60
	.end	ge_madd
$Lfe33:
	.size	ge_madd,$Lfe33-ge_madd
	.section	.text.ge_double,"ax",@progbits
	.align	2
	.ent	ge_double
	.type	ge_double, @function
ge_double:
	.frame	r1,56,r15		# vars= 0, regs= 7, args= 24
	.mask	0x0fc88000
	addik	r1,r1,-56
	swi	r19,r1,28
	swi	r25,r1,44
	addk	r19,r7,r0
	addk	r25,r5,r0
	swi	r26,r1,48
	addk	r5,r7,r0
	addk	r26,r6,r0
	swi	r15,r1,0
	swi	r22,r1,32
	swi	r23,r1,36
	addik	r22,r19,40
	swi	r24,r1,40
	brlid	r15,fe_sq
	
	swi	r27,r1,52
	addik	r27,r26,40
	addk	r6,r27,r0
	addk	r5,r22,r0
	addik	r23,r19,80
	brlid	r15,fe_sq
	
	addik	r24,r19,120
	addk	r5,r23,r0
	brlid	r15,fe_sq
	
	addik	r6,r26,80
	addk	r6,r23,r0
	addk	r5,r23,r0
	brlid	r15,fe_mul_small
	
	addik	r7,r0,2	# 0x2
	addk	r7,r27,r0
	addk	r6,r26,r0
	addk	r5,r24,r0
	brlid	r15,fe_add
	
	addik	r26,r25,120
	addk	r6,r24,r0
	brlid	r15,fe_sq
	
	addk	r5,r26,r0
	addk	r7,r19,r0
	addk	r6,r22,r0
	brlid	r15,fe_add
	
	addk	r5,r24,r0
	addk	r7,r19,r0
	addk	r6,r22,r0
	brlid	r15,fe_sub
	
	addk	r5,r22,r0
	addk	r7,r24,r0
	addk	r6,r26,r0
	brlid	r15,fe_sub
	
	addk	r5,r19,r0
	addk	r7,r22,r0
	addk	r6,r23,r0
	brlid	r15,fe_sub
	
	addk	r5,r23,r0
	addk	r7,r23,r0
	addk	r6,r19,r0
	brlid	r15,fe_mul
	
	addk	r5,r25,r0
	addk	r7,r22,r0
	addk	r6,r24,r0
	brlid	r15,fe_mul
	
	addik	r5,r25,40
	addk	r7,r23,r0
	addk	r6,r22,r0
	brlid	r15,fe_mul
	
	addik	r5,r25,80
	addk	r7,r24,r0
	addk	r6,r19,r0
	brlid	r15,fe_mul
	
	addk	r5,r26,r0
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	lwi	r26,r1,48
	lwi	r27,r1,52
	rtsd	r15,8 
	
	addik	r1,r1,56
	.end	ge_double
$Lfe34:
	.size	ge_double,$Lfe34-ge_double
	.section	.text.slide_init,"ax",@progbits
	.align	2
	.ent	slide_init
	.type	slide_init, @function
slide_init:
	.frame	r1,44,r15		# vars= 0, regs= 4, args= 24
	.mask	0x01c88000
	addik	r1,r1,-44
	swi	r22,r1,32
	addik	r22,r0,252	# 0xfc
	swi	r19,r1,28
	swi	r23,r1,36
	swi	r24,r1,40
	addk	r23,r5,r0
	addk	r24,r6,r0
	addk	r19,r22,r0
	swi	r15,r1,0
$L99:
	addk	r6,r19,r0
	brlid	r15,scalar_bit
	
	addk	r5,r24,r0
	beqid	r3,$L101
	addik	r22,r22,-1
$L100:
	addik	r3,r0,-1	# 0xffffffffffffffff
	addik	r19,r19,1
	sbi	r19,r23,3
	shi	r3,r23,0
	sbi	r3,r23,2
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	rtsd	r15,8 
	
	addik	r1,r1,44
$L101:
	bneid	r22,$L99
	addik	r19,r19,-1
	brid	$L100
	addk	r19,r22,r0
	.end	slide_init
$Lfe35:
	.size	slide_init,$Lfe35-slide_init
	.section	.text.slide_step,"ax",@progbits
	.align	2
	.ent	slide_step
	.type	slide_step, @function
slide_step:
	.frame	r1,64,r15		# vars= 0, regs= 9, args= 24
	.mask	0x3fc88000
	addik	r1,r1,-64
	swi	r22,r1,32
	swi	r24,r1,40
	swi	r15,r1,0
	swi	r19,r1,28
	swi	r23,r1,36
	swi	r25,r1,44
	swi	r26,r1,48
	swi	r27,r1,52
	swi	r28,r1,56
	swi	r29,r1,60
	lbui	r23,r5,3
	addk	r24,r5,r0
	xor	r3,r23,r7
	bneid	r3,$L105
	addk	r22,r7,r0
	addk	r5,r8,r0
	addk	r26,r6,r0
	addk	r6,r7,r0
	brlid	r15,scalar_bit
	
	addk	r27,r8,r0
	addk	r5,r27,r0
	addk	r19,r3,r0
	brlid	r15,scalar_bit
	
	addik	r6,r22,-1
	xor	r3,r19,r3
	bneid	r3,$L106
	addik	r25,r22,1
	addik	r23,r23,-1
$L117:
	sbi	r23,r24,3
$L105:
	lhui	r7,r24,0
	sext16	r7,r7
	xor	r22,r22,r7
	bneid	r22,$L112
	addk	r3,r0,r0
	lbui	r3,r24,2
	sext8	r3,r3
$L112:
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	lwi	r26,r1,48
	lwi	r27,r1,52
	lwi	r28,r1,56
	lwi	r29,r1,60
	rtsd	r15,8 
	
	addik	r1,r1,64
$L106:
	cmp	r18,r25,r26
	bgeid	r18,$L118
	addik	r28,r25,-1
	addk	r25,r26,r0
	addik	r28,r25,-1
$L118:
	bsll	r19,r19,r28
	addk	r26,r0,r0
	rsubk	r19,r19,r0
	rsubk	r29,r28,r22
$L108:
	cmp	r18,r28,r26
	bltid	r18,$L109
	addk	r5,r27,r0
	brlid	r15,scalar_bit
	
	rsubk	r6,r25,r22
	addk	r3,r19,r3
	rsubk	r19,r3,r0
	and	r19,r19,r3
	andi	r4,r19,170 #and1
	rsubk	r4,r4,r0
	bsrli	r5,r4,31
	andi	r4,r19,204 #and1
	beqi	r4,$L110
	addik	r4,r0,2	# 0x2
$L110:
	andi	r19,r19,240 #and1
	beqid	r19,$L111
	or	r4,r4,r5
	addik	r19,r0,4	# 0x4
$L111:
	or	r19,r19,r4
	addik	r4,r23,1
	rsubk	r4,r25,r4
	bsra	r3,r3,r19
	addk	r4,r4,r19
	shi	r4,r24,0
	sbi	r3,r24,2
	brid	$L117
	rsubk	r23,r25,r23
$L109:
	brlid	r15,scalar_bit
	
	addk	r6,r29,r26
	bsll	r3,r3,r26
	addik	r26,r26,1
	brid	$L108
	addk	r19,r19,r3
	.end	slide_step
$Lfe36:
	.size	slide_step,$Lfe36-slide_step
	.section	.text.blake2b_incr,"ax",@progbits
	.align	2
	.ent	blake2b_incr
	.type	blake2b_incr, @function
blake2b_incr:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	lwi	r6,r5,64
	lwi	r7,r5,68
	lwi	r8,r5,208
	addk	r9,r0,r0
	add	r6,r8,r6
	addc	r7,r9,r7
	swi	r6,r5,64
	swi	r7,r5,68
	bnei	r7,$L123
	cmpu	r18,r8,r6
	bgei	r18,$L123
	lwi	r6,r5,72
	lwi	r7,r5,76
	addi	r6,r6,0x00000001
	addic	r7,r7,0x00000000
	swi	r6,r5,72
	swi	r7,r5,76
$L123:
	rtsd	r15, 8
	nop		# Unfilled delay slot

	.end	blake2b_incr
$Lfe37:
	.size	blake2b_incr,$Lfe37-blake2b_incr
	.section	.text.poly_update,"ax",@progbits
	.align	2
	.ent	poly_update
	.type	poly_update, @function
poly_update:
	.frame	r1,48,r15		# vars= 0, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-48
	swi	r22,r1,32
	swi	r24,r1,40
	swi	r25,r1,44
	addk	r22,r5,r0
	addk	r25,r6,r0
	addk	r24,r7,r0
	swi	r23,r1,36
	swi	r15,r1,0
	swi	r19,r1,28
	addk	r23,r0,r0
$L125:
	cmpu	r18,r24,r23
	bltid	r18,$L127
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	rtsd	r15,8 
	
	addik	r1,r1,48
$L127:
	lwi	r19,r22,72
	lbu	r4,r23,r25
	andi	r3,r19,-4 #and1
	bslli	r5,r19,3
	addk	r3,r22,r3
	bsll	r5,r4,r5
	lwi	r4,r3,36
	addik	r19,r19,1
	or	r4,r4,r5
	swi	r4,r3,36
	swi	r19,r22,72
	xori	r19,r19,16
	bnei	r19,$L126
	brlid	r15,poly_block
	
	addk	r5,r22,r0
	swi	r19,r22,36
	swi	r19,r22,40
	swi	r19,r22,44
	swi	r19,r22,48
	swi	r19,r22,72
$L126:
	brid	$L125
	addik	r23,r23,1
	.end	poly_update
$Lfe38:
	.size	poly_update,$Lfe38-poly_update
	.section	.text.blake2b_update,"ax",@progbits
	.align	2
	.ent	blake2b_update
	.type	blake2b_update, @function
blake2b_update:
	.frame	r1,52,r15		# vars= 0, regs= 6, args= 24
	.mask	0x07c88000
	addik	r1,r1,-52
	swi	r19,r1,28
	swi	r24,r1,40
	swi	r25,r1,44
	addk	r19,r5,r0
	addk	r25,r6,r0
	addk	r24,r7,r0
	swi	r26,r1,48
	swi	r15,r1,0
	swi	r22,r1,32
	swi	r23,r1,36
	addk	r26,r0,r0
$L130:
	cmpu	r18,r24,r26
	bltid	r18,$L135
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	lwi	r26,r1,48
	rtsd	r15,8 
	
	addik	r1,r1,52
$L135:
	lwi	r22,r19,208
	xori	r22,r22,128
	bnei	r22,$L131
	brlid	r15,blake2b_incr
	
	addk	r5,r19,r0
	addk	r6,r22,r0
	brlid	r15,blake2b_compress
	
	addk	r5,r19,r0
	swi	r22,r19,208
$L131:
	lwi	r22,r19,208
	beqid	r22,$L132
	lbu	r5,r26,r25
	bslli	r7,r22,3
$L138:
	andi	r23,r22,-8 #and1
	andi	r7,r7,56 #and1
	brlid	r15,__ashldi3
	
	addk	r6,r0,r0
	addk	r23,r19,r23
	lwi	r5,r23,80
	addik	r22,r22,1
	addik	r26,r26,1
	or	r3,r5,r3
	swi	r3,r23,80
	lwi	r3,r23,84
	or	r4,r3,r4
	swi	r4,r23,84
	brid	$L130
	swi	r22,r19,208
$L132:
	addk	r6,r22,r0
	addik	r4,r0,16	# 0x10
$L133:
	addik	r3,r6,10
	bslli	r3,r3,3
	addik	r9,r0,0x00000000
	addik	r8,r0,0x00000000 #li => la
	addk	r3,r19,r3
	swi	r8,r3,0
	swi	r9,r3,4
	addik	r4,r4,-1
	bneid	r4,$L133
	addik	r6,r6,1
	brid	$L138
	bslli	r7,r22,3
	.end	blake2b_update
$Lfe39:
	.size	blake2b_update,$Lfe39-blake2b_update
	.section	.text.gidx_refresh,"ax",@progbits
	.align	2
	.ent	gidx_refresh
	.type	gidx_refresh, @function
gidx_refresh:
	.frame	r1,1056,r15		# vars= 1024, regs= 1, args= 24
	.mask	0x00088000
	addik	r1,r1,-1056
	swi	r19,r1,1052
	swi	r15,r1,0
	lwi	r3,r5,1024
	addk	r19,r5,r0
	swi	r0,r5,4
	swi	r3,r5,0
	addik	r5,r0,0x00000000
	addik	r4,r0,0x00000000 #li => la
	swi	r4,r19,8
	swi	r5,r19,12
	lwi	r5,r19,1028
	lwi	r6,r19,1032
	lwi	r7,r19,1036
	swi	r5,r19,16
	addik	r5,r0,0x00000000
	addik	r4,r0,0x00000001 #li => la
	swi	r4,r19,40
	swi	r5,r19,44
	lwi	r5,r19,1040
	swi	r0,r19,20
	swi	r6,r19,24
	swi	r0,r19,28
	swi	r7,r19,32
	swi	r0,r19,36
	swi	r5,r19,48
	swi	r0,r19,52
	addik	r3,r0,121	# 0x79
	addik	r4,r0,7	# 0x7
$L140:
	bslli	r5,r4,3
	addik	r7,r0,0x00000000
	addik	r6,r0,0x00000000 #li => la
	addk	r5,r19,r5
	swi	r6,r5,0
	swi	r7,r5,4
	addik	r3,r3,-1
	bneid	r3,$L140
	addik	r4,r4,1
	addk	r6,r19,r0
	brlid	r15,copy_block
	
	addik	r5,r1,28
	brlid	r15,g_rounds
	
	addk	r5,r19,r0
	addk	r5,r19,r0
	brlid	r15,xor_block
	
	addik	r6,r1,28
	addk	r6,r19,r0
	brlid	r15,copy_block
	
	addik	r5,r1,28
	brlid	r15,g_rounds
	
	addk	r5,r19,r0
	addk	r5,r19,r0
	brlid	r15,xor_block
	
	addik	r6,r1,28
	brlid	r15,wipe_block
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,1052
	rtsd	r15,8 
	
	addik	r1,r1,1056
	.end	gidx_refresh
$Lfe40:
	.size	gidx_refresh,$Lfe40-gidx_refresh
	.section	.text.crypto_verify16,"ax",@progbits
	.align	2
	.globl	crypto_verify16
	.ent	crypto_verify16
	.type	crypto_verify16, @function
crypto_verify16:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,x16
	nop		# Unfilled delay slot

	or	r6,r4,r3
	addk	r7,r0,r0
	addi	r6,r6,0xffffffff
	addic	r7,r7,0xffffffff
	lwi	r15,r1,0
	andi	r3,r7,1 #and1
	addik	r3,r3,-1
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_verify16
$Lfe41:
	.size	crypto_verify16,$Lfe41-crypto_verify16
	.section	.text.crypto_verify32,"ax",@progbits
	.align	2
	.globl	crypto_verify32
	.ent	crypto_verify32
	.type	crypto_verify32, @function
crypto_verify32:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,x32
	nop		# Unfilled delay slot

	or	r6,r4,r3
	addk	r7,r0,r0
	addi	r6,r6,0xffffffff
	addic	r7,r7,0xffffffff
	lwi	r15,r1,0
	andi	r3,r7,1 #and1
	addik	r3,r3,-1
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_verify32
$Lfe42:
	.size	crypto_verify32,$Lfe42-crypto_verify32
	.section	.text.crypto_verify64,"ax",@progbits
	.align	2
	.globl	crypto_verify64
	.ent	crypto_verify64
	.type	crypto_verify64, @function
crypto_verify64:
	.frame	r1,44,r15		# vars= 0, regs= 4, args= 24
	.mask	0x01c88000
	addik	r1,r1,-44
	swi	r23,r1,36
	swi	r24,r1,40
	addk	r23,r5,r0
	addk	r24,r6,r0
	swi	r15,r1,0
	swi	r19,r1,28
	brlid	r15,x32
	
	swi	r22,r1,32
	addk	r19,r3,r0
	addk	r22,r4,r0
	addik	r6,r24,32
	brlid	r15,x32
	
	addik	r5,r23,32
	or	r3,r19,r3
	or	r4,r22,r4
	or	r6,r4,r3
	addk	r7,r0,r0
	addi	r6,r6,0xffffffff
	addic	r7,r7,0xffffffff
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	andi	r3,r7,1 #and1
	addik	r3,r3,-1
	rtsd	r15,8 
	
	addik	r1,r1,44
	.end	crypto_verify64
$Lfe43:
	.size	crypto_verify64,$Lfe43-crypto_verify64
	.section	.text.crypto_wipe,"ax",@progbits
	.align	2
	.globl	crypto_wipe
	.ent	crypto_wipe
	.type	crypto_wipe, @function
crypto_wipe:
	.frame	r1,0,r15		# vars= 0, regs= 0, args= 0
	.mask	0x00000000
	addk	r3,r0,r0
$L150:
	cmpu	r18,r6,r3
	blti	r18,$L151
	rtsd	r15,8 
	nop		# Unfilled delay slot

$L151:
	sb	r0,r3,r5
	brid	$L150
	addik	r3,r3,1
	.end	crypto_wipe
$Lfe44:
	.size	crypto_wipe,$Lfe44-crypto_wipe
	.section	.text.chacha20_core,"ax",@progbits
	.align	2
	.ent	chacha20_core
	.type	chacha20_core, @function
chacha20_core:
	.frame	r1,204,r15		# vars= 132, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-204
	swi	r19,r1,160
	swi	r22,r1,164
	swi	r23,r1,168
	swi	r24,r1,172
	swi	r26,r1,180
	addk	r19,r5,r0
	addk	r26,r6,r0
	addk	r24,r7,r0
	addk	r22,r8,r0
	addk	r23,r6,r0
	swi	r25,r1,176
	bsrli	r25,r8,6
	swi	r27,r1,184
	swi	r15,r1,0
	swi	r28,r1,188
	swi	r29,r1,192
	swi	r30,r1,196
	swi	r31,r1,200
	addk	r27,r0,r0
$L153:
	cmpu	r18,r25,r27
	bltid	r18,$L159
	addk	r6,r19,r0
	andi	r22,r22,63 #and1
	beqid	r22,$L160
	bslli	r25,r25,6
	bneid	r24,$L172
	addik	r5,r1,92
	addik	r24,r0,zero
	addk	r6,r19,r0
$L172:
	brlid	r15,chacha20_rounds
	
	addik	r23,r0,16	# 0x10
	addk	r27,r0,r0
	bslli	r3,r27,2
$L173:
	addik	r4,r1,28
	addk	r5,r4,r3
	lw	r6,r3,r19
	lwi	r3,r5,64
	addik	r23,r23,-1
	addik	r27,r27,1
	brlid	r15,store32_le
	
	addk	r6,r6,r3
	bneid	r23,$L173
	bslli	r3,r27,2
$L163:
	addk	r5,r1,r23
	lbu	r3,r23,r24
	lbui	r5,r5,28
	addk	r4,r26,r23
	addik	r23,r23,1
	xor	r3,r3,r5
	cmpu	r18,r22,r23
	bltid	r18,$L163
	sb	r3,r25,r4
	addik	r6,r0,64	# 0x40
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
$L160:
	addik	r5,r1,92
	brlid	r15,crypto_wipe
	
	addik	r6,r0,64	# 0x40
	addik	r5,r0,0x00000000
	addik	r4,r0,0x00000000 #li => la
	lwi	r5,r19,52
	lwi	r6,r19,48
	addk	r7,r4,r0
	lwi	r15,r1,0
	lwi	r19,r1,160
	add	r6,r4,r6
	addc	r7,r5,r7
	rsubk	r4,r22,r0
	bsrli	r4,r4,31
	addk	r4,r0,r4
	add	r5,r4,r4
	addc	r5,r0,r0
	beqi	r5,.+8
	addi	r5,r0,0xffffffff
	add	r4,r6,r4
	addc	r5,r7,r5
	addk	r3,r4,r0
	lwi	r22,r1,164
	addk	r4,r5,r0
	lwi	r23,r1,168
	lwi	r24,r1,172
	lwi	r25,r1,176
	lwi	r26,r1,180
	lwi	r27,r1,184
	lwi	r28,r1,188
	lwi	r29,r1,192
	lwi	r30,r1,196
	lwi	r31,r1,200
	rtsd	r15,8 
	
	addik	r1,r1,204
$L159:
	brlid	r15,chacha20_rounds
	
	addik	r5,r1,92
	beqid	r24,$L154
	addk	r30,r24,r0
	addk	r31,r23,r0
	addik	r28,r0,16	# 0x10
	addk	r29,r0,r0
$L155:
	bslli	r3,r29,2
	addik	r5,r1,28
	addk	r4,r5,r3
	lw	r6,r3,r19
	lwi	r3,r4,64
	addk	r5,r30,r0
	addik	r28,r28,-1
	addk	r6,r6,r3
	brlid	r15,load32_le
	
	swi	r6,r1,156
	lwi	r6,r1,156
	addk	r5,r31,r0
	addik	r30,r30,4
	brlid	r15,store32_le
	
	xor	r6,r6,r3
	addik	r31,r31,4
	bneid	r28,$L155
	addik	r29,r29,1
	addik	r23,r23,64
	addik	r24,r24,64
$L156:
	lwi	r3,r19,48
	addik	r3,r3,1
	bneid	r3,$L158
	swi	r3,r19,48
	lwi	r3,r19,52
	addik	r3,r3,1
	swi	r3,r19,52
$L158:
	brid	$L153
	addik	r27,r27,1
$L154:
	addk	r30,r23,r0
	addk	r29,r24,r0
	addik	r28,r0,16	# 0x10
$L157:
	bslli	r3,r29,2
	addik	r5,r1,28
	addk	r4,r5,r3
	lw	r6,r3,r19
	lwi	r3,r4,64
	addk	r5,r30,r0
	addik	r28,r28,-1
	brlid	r15,store32_le
	
	addk	r6,r6,r3
	addik	r30,r30,4
	bneid	r28,$L157
	addik	r29,r29,1
	brid	$L156
	addik	r23,r23,64
	.end	chacha20_core
$Lfe45:
	.size	chacha20_core,$Lfe45-chacha20_core
	.section	.text.fe_pow22523,"ax",@progbits
	.align	2
	.ent	fe_pow22523
	.type	fe_pow22523, @function
fe_pow22523:
	.frame	r1,160,r15		# vars= 120, regs= 3, args= 24
	.mask	0x00c88000
	addik	r1,r1,-160
	swi	r23,r1,156
	addk	r23,r5,r0
	addik	r5,r1,108
	swi	r15,r1,0
	swi	r19,r1,148
	swi	r22,r1,152
	brlid	r15,fe_sq
	
	addk	r22,r6,r0
	addik	r6,r1,108
	brlid	r15,fe_sq
	
	addik	r5,r1,68
	addik	r6,r1,68
	addk	r5,r6,r0
	brlid	r15,fe_sq
	
	addik	r19,r0,4	# 0x4
	addik	r7,r1,68
	addk	r5,r7,r0
	brlid	r15,fe_mul
	
	addk	r6,r22,r0
	addik	r6,r1,108
	addk	r5,r6,r0
	brlid	r15,fe_mul
	
	addik	r7,r1,68
	addik	r6,r1,108
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addik	r7,r1,108
	addk	r5,r7,r0
	brlid	r15,fe_mul
	
	addik	r6,r1,68
	addik	r6,r1,108
	brlid	r15,fe_sq
	
	addik	r5,r1,68
	addik	r6,r1,68
$L190:
	addk	r5,r6,r0
	brlid	r15,fe_sq
	
	addik	r19,r19,-1
	bneid	r19,$L190
	addik	r6,r1,68
	addik	r7,r1,108
	addk	r5,r7,r0
	brlid	r15,fe_mul
	
	addik	r19,r0,9	# 0x9
	addik	r6,r1,108
	brlid	r15,fe_sq
	
	addik	r5,r1,68
	addik	r6,r1,68
$L191:
	addk	r5,r6,r0
	brlid	r15,fe_sq
	
	addik	r19,r19,-1
	bneid	r19,$L191
	addik	r6,r1,68
	addk	r5,r6,r0
	addik	r7,r1,108
	brlid	r15,fe_mul
	
	addik	r19,r0,19	# 0x13
	addik	r6,r1,68
	brlid	r15,fe_sq
	
	addik	r5,r1,28
	addik	r6,r1,28
$L192:
	addk	r5,r6,r0
	brlid	r15,fe_sq
	
	addik	r19,r19,-1
	bneid	r19,$L192
	addik	r6,r1,28
	addik	r7,r1,68
	addk	r5,r7,r0
	brlid	r15,fe_mul
	
	addik	r19,r0,9	# 0x9
	addik	r6,r1,68
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addik	r6,r1,68
$L193:
	addk	r5,r6,r0
	brlid	r15,fe_sq
	
	addik	r19,r19,-1
	bneid	r19,$L193
	addik	r6,r1,68
	addik	r7,r1,108
	addk	r5,r7,r0
	brlid	r15,fe_mul
	
	addik	r19,r0,49	# 0x31
	addik	r6,r1,108
	brlid	r15,fe_sq
	
	addik	r5,r1,68
	addik	r6,r1,68
$L194:
	addk	r5,r6,r0
	brlid	r15,fe_sq
	
	addik	r19,r19,-1
	bneid	r19,$L194
	addik	r6,r1,68
	addk	r5,r6,r0
	addik	r7,r1,108
	brlid	r15,fe_mul
	
	addik	r19,r0,99	# 0x63
	addik	r6,r1,68
	brlid	r15,fe_sq
	
	addik	r5,r1,28
	addik	r6,r1,28
$L195:
	addk	r5,r6,r0
	brlid	r15,fe_sq
	
	addik	r19,r19,-1
	bneid	r19,$L195
	addik	r6,r1,28
	addik	r7,r1,68
	addk	r5,r7,r0
	brlid	r15,fe_mul
	
	addik	r19,r0,49	# 0x31
	addik	r6,r1,68
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
$L181:
	addik	r6,r1,68
	addk	r5,r6,r0
	brlid	r15,fe_sq
	
	addik	r19,r19,-1
	bneid	r19,$L181
	addik	r7,r1,108
	addk	r5,r7,r0
	brlid	r15,fe_mul
	
	addik	r6,r1,68
	addik	r6,r1,108
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addik	r6,r1,108
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addk	r7,r22,r0
	addk	r5,r23,r0
	brlid	r15,fe_mul
	
	addik	r6,r1,108
	addik	r5,r1,108
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,68
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r6,r0,40	# 0x28
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,148
	lwi	r22,r1,152
	lwi	r23,r1,156
	rtsd	r15,8 
	
	addik	r1,r1,160
	.end	fe_pow22523
$Lfe46:
	.size	fe_pow22523,$Lfe46-fe_pow22523
	.section	.text.fe_invert,"ax",@progbits
	.align	2
	.ent	fe_invert
	.type	fe_invert, @function
fe_invert:
	.frame	r1,76,r15		# vars= 40, regs= 2, args= 24
	.mask	0x00488000
	addik	r1,r1,-76
	swi	r22,r1,72
	addk	r22,r5,r0
	addik	r5,r1,28
	swi	r15,r1,0
	swi	r19,r1,68
	brlid	r15,fe_pow22523
	
	addk	r19,r6,r0
	addik	r6,r1,28
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addik	r6,r1,28
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addik	r6,r1,28
	addk	r7,r19,r0
	brlid	r15,fe_mul
	
	addk	r5,r6,r0
	addik	r6,r1,28
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addk	r7,r19,r0
	addk	r5,r22,r0
	brlid	r15,fe_mul
	
	addik	r6,r1,28
	addik	r6,r0,40	# 0x28
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,68
	lwi	r22,r1,72
	rtsd	r15,8 
	
	addik	r1,r1,76
	.end	fe_invert
$Lfe47:
	.size	fe_invert,$Lfe47-fe_invert
	.section	.text.fe_tobytes,"ax",@progbits
	.align	2
	.ent	fe_tobytes
	.type	fe_tobytes, @function
fe_tobytes:
	.frame	r1,76,r15		# vars= 40, regs= 2, args= 24
	.mask	0x00488000
	addik	r1,r1,-76
	swi	r19,r1,68
	addk	r19,r5,r0
	swi	r22,r1,72
	swi	r15,r1,0
	addik	r3,r0,10	# 0xa
	addk	r4,r0,r0
	addik	r22,r1,28
$L199:
	bslli	r5,r4,2
	lw	r7,r5,r6
	addik	r3,r3,-1
	addik	r4,r4,1
	bneid	r3,$L199
	sw	r7,r5,r22
	lwi	r4,r1,64
	addik	r5,r0,5	# 0x5
	muli	r6,r4,19
	addik	r6,r6,16777216
	bsrai	r6,r6,25
$L200:
	bslli	r7,r3,3
	lw	r7,r7,r22
	addik	r5,r5,-1
	addk	r6,r6,r7
	bslli	r7,r3,3
	bsrai	r6,r6,26
	addik	r7,r7,4
	lw	r7,r7,r22
	addik	r3,r3,1
	addk	r6,r6,r7
	bneid	r5,$L200
	bsrai	r6,r6,25
	muli	r3,r6,19
	lwi	r6,r1,28
	addk	r3,r3,r6
	lwi	r6,r1,32
	bsrai	r5,r3,26
	addk	r6,r5,r6
	bslli	r5,r5,26
	bsrai	r7,r6,25
	rsubk	r3,r5,r3
	lwi	r5,r1,36
	swi	r3,r1,28
	addk	r5,r7,r5
	bslli	r7,r7,25
	bsrai	r8,r5,26
	rsubk	r6,r7,r6
	lwi	r7,r1,40
	swi	r6,r1,32
	bslli	r6,r6,26
	addk	r7,r8,r7
	bslli	r8,r8,26
	rsubk	r5,r8,r5
	swi	r5,r1,36
	lwi	r5,r1,44
	bsrai	r8,r7,25
	addk	r5,r8,r5
	bslli	r8,r8,25
	rsubk	r7,r8,r7
	swi	r7,r1,40
	lwi	r7,r1,48
	bsrai	r8,r5,26
	addk	r7,r8,r7
	bslli	r8,r8,26
	rsubk	r5,r8,r5
	swi	r5,r1,44
	lwi	r5,r1,52
	bsrai	r8,r7,25
	addk	r5,r8,r5
	bslli	r8,r8,25
	rsubk	r7,r8,r7
	swi	r7,r1,48
	lwi	r7,r1,56
	bsrai	r8,r5,26
	addk	r7,r8,r7
	bslli	r8,r8,26
	rsubk	r5,r8,r5
	swi	r5,r1,52
	lwi	r5,r1,60
	bsrai	r8,r7,25
	addk	r5,r8,r5
	bslli	r8,r8,25
	rsubk	r7,r8,r7
	swi	r7,r1,56
	bsrai	r7,r5,26
	addk	r4,r4,r7
	bslli	r7,r7,26
	rsubk	r5,r7,r5
	swi	r5,r1,60
	addk	r5,r19,r0
	andi	r4,r4,33554431 #and2
	or	r6,r6,r3
	brlid	r15,store32_le
	
	swi	r4,r1,64
	lwi	r6,r1,32
	lwi	r3,r1,36
	addik	r5,r19,4
	bsrli	r6,r6,6
	bslli	r3,r3,19
	brlid	r15,store32_le
	
	or	r6,r6,r3
	lwi	r6,r1,36
	lwi	r3,r1,40
	addik	r5,r19,8
	bsrli	r6,r6,13
	bslli	r3,r3,13
	brlid	r15,store32_le
	
	or	r6,r6,r3
	lwi	r6,r1,40
	lwi	r3,r1,44
	addik	r5,r19,12
	bsrli	r6,r6,19
	bslli	r3,r3,6
	brlid	r15,store32_le
	
	or	r6,r6,r3
	lwi	r3,r1,52
	lwi	r6,r1,48
	addik	r5,r19,16
	bslli	r3,r3,25
	brlid	r15,store32_le
	
	or	r6,r3,r6
	lwi	r6,r1,52
	lwi	r3,r1,56
	addik	r5,r19,20
	bsrli	r6,r6,7
	bslli	r3,r3,19
	brlid	r15,store32_le
	
	or	r6,r6,r3
	lwi	r6,r1,56
	lwi	r3,r1,60
	addik	r5,r19,24
	bsrli	r6,r6,13
	bslli	r3,r3,12
	brlid	r15,store32_le
	
	or	r6,r6,r3
	lwi	r6,r1,60
	lwi	r3,r1,64
	addik	r5,r19,28
	bsrli	r6,r6,20
	bslli	r3,r3,6
	brlid	r15,store32_le
	
	or	r6,r6,r3
	addk	r5,r22,r0
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	lwi	r15,r1,0
	lwi	r19,r1,68
	lwi	r22,r1,72
	rtsd	r15,8 
	
	addik	r1,r1,76
	.end	fe_tobytes
$Lfe48:
	.size	fe_tobytes,$Lfe48-fe_tobytes
	.section	.text.mul_add,"ax",@progbits
	.align	2
	.ent	mul_add
	.type	mul_add, @function
mul_add:
	.frame	r1,580,r15		# vars= 512, regs= 10, args= 24
	.mask	0x7fc88000
	addik	r1,r1,-580
	swi	r27,r1,564
	swi	r29,r1,572
	swi	r30,r1,576
	addk	r27,r5,r0
	addk	r29,r6,r0
	addk	r30,r7,r0
	swi	r23,r1,548
	swi	r15,r1,0
	swi	r19,r1,540
	swi	r22,r1,544
	swi	r24,r1,552
	swi	r25,r1,556
	swi	r26,r1,560
	swi	r28,r1,568
	addik	r4,r0,32	# 0x20
	addk	r3,r0,r0
	addik	r23,r1,28
$L205:
	lbu	r7,r3,r8
	bslli	r5,r3,3
	addk	r6,r23,r5
	sw	r7,r5,r23
	swi	r0,r6,4
	addik	r4,r4,-1
	bneid	r4,$L205
	addik	r3,r3,1
	addik	r3,r0,32	# 0x20
	addk	r4,r3,r0
$L206:
	bslli	r5,r4,3
	addik	r7,r0,0x00000000
	addik	r6,r0,0x00000000 #li => la
	addk	r5,r23,r5
	swi	r6,r5,0
	swi	r7,r5,4
	addik	r3,r3,-1
	bneid	r3,$L206
	addik	r4,r4,1
	addk	r22,r3,r0
	addik	r26,r0,32	# 0x20
$L209:
	lbu	r28,r22,r29
	addk	r24,r0,r0
	addik	r25,r0,32	# 0x20
$L208:
	addk	r8,r0,r0
	lbu	r5,r24,r30
	addk	r19,r22,r24
	addk	r7,r28,r0
	addk	r6,r8,r0
	brlid	r15,__muldi3
	
	bslli	r19,r19,3
	addk	r19,r23,r19
	addk	r7,r4,r0
	addk	r6,r3,r0
	lwi	r4,r19,0
	lwi	r5,r19,4
	addik	r25,r25,-1
	add	r4,r6,r4
	addc	r5,r7,r5
	swi	r4,r19,0
	swi	r5,r19,4
	bneid	r25,$L208
	addik	r24,r24,1
	addik	r26,r26,-1
	bneid	r26,$L209
	addik	r22,r22,1
	addk	r6,r23,r0
	brlid	r15,modL
	
	addk	r5,r27,r0
	addk	r5,r23,r0
	brlid	r15,crypto_wipe
	
	addik	r6,r0,512	# 0x200
	lwi	r15,r1,0
	lwi	r19,r1,540
	lwi	r22,r1,544
	lwi	r23,r1,548
	lwi	r24,r1,552
	lwi	r25,r1,556
	lwi	r26,r1,560
	lwi	r27,r1,564
	lwi	r28,r1,568
	lwi	r29,r1,572
	lwi	r30,r1,576
	rtsd	r15,8 
	
	addik	r1,r1,580
	.end	mul_add
$Lfe49:
	.size	mul_add,$Lfe49-mul_add
	.section	.text.ge_scalarmult_base,"ax",@progbits
	.align	2
	.ent	ge_scalarmult_base
	.type	ge_scalarmult_base, @function
ge_scalarmult_base:
	.frame	r1,464,r15		# vars= 392, regs= 10, args= 28
	.mask	0x7fc88000
	addik	r1,r1,-464
	addik	r8,r0,half_ones.2840
	addik	r7,r0,half_mod_L.2839
	swi	r25,r1,440
	addk	r25,r5,r0
	addik	r5,r1,392
	swi	r15,r1,0
	swi	r23,r1,432
	swi	r26,r1,444
	swi	r19,r1,424
	swi	r22,r1,428
	swi	r24,r1,436
	swi	r27,r1,448
	swi	r28,r1,452
	swi	r29,r1,456
	brlid	r15,mul_add
	
	swi	r30,r1,460
	addk	r5,r25,r0
	addik	r26,r0,51	# 0x33
	brlid	r15,ge_zero
	
	addik	r23,r0,50	# 0x32
$L218:
	brlid	r15,fe_1
	
	addik	r5,r1,352
	brlid	r15,fe_1
	
	addik	r5,r1,312
	addik	r24,r1,272
	addk	r5,r24,r0
	addik	r29,r0,16	# 0x10
	brlid	r15,fe_0
	
	addk	r28,r0,r0
	addk	r6,r23,r0
	brlid	r15,scalar_bit
	
	addik	r5,r1,392
	addik	r6,r23,51
	addik	r5,r1,392
	brlid	r15,scalar_bit
	
	addk	r19,r3,r0
	addk	r22,r3,r0
	addik	r6,r23,102
	brlid	r15,scalar_bit
	
	addik	r5,r1,392
	bslli	r3,r3,2
	addik	r6,r23,153
	addik	r5,r1,392
	addk	r22,r22,r22
	brlid	r15,scalar_bit
	
	addk	r22,r22,r3
	addk	r19,r22,r19
	bslli	r3,r3,3
	andi	r19,r19,0x00ff
	addik	r6,r23,204
	addik	r5,r1,392
	brlid	r15,scalar_bit
	
	addk	r19,r19,r3
	bslli	r3,r3,4
	andi	r19,r19,0x00ff
	addk	r3,r19,r3
	andi	r3,r3,0x00ff
	bsrli	r27,r3,4
	addik	r22,r27,-1
	xor	r3,r22,r3
	andi	r22,r3,15 #and1
$L219:
	xor	r19,r22,r28
	addik	r19,r19,-1
	bsefi r19,r19,1,8
	muli	r30,r28,40
	addk	r7,r19,r0
	addik	r6,r30,comb_Yp
	brlid	r15,fe_ccopy
	
	addik	r5,r1,352
	addk	r7,r19,r0
	addik	r6,r30,comb_Ym
	brlid	r15,fe_ccopy
	
	addik	r5,r1,312
	addk	r7,r19,r0
	addk	r5,r24,r0
	addik	r6,r30,comb_T2
	brlid	r15,fe_ccopy
	
	addik	r29,r29,-1
	bneid	r29,$L219
	addik	r28,r28,1
	addk	r6,r24,r0
	addik	r5,r1,232
	brlid	r15,fe_neg
	
	addik	r26,r26,-1
	addk	r7,r27,r0
	addk	r5,r24,r0
	addik	r6,r1,232
	brlid	r15,fe_cswap
	
	addik	r23,r23,-1
	addk	r7,r27,r0
	addik	r6,r1,312
	brlid	r15,fe_cswap
	
	addik	r5,r1,352
	addk	r6,r25,r0
	addk	r5,r25,r0
	swi	r24,r1,28
	addik	r10,r1,192
	addik	r9,r1,232
	addik	r8,r1,352
	brlid	r15,ge_madd
	
	addik	r7,r1,312
	bneid	r26,$L220
	addk	r6,r25,r0
	addik	r5,r1,32
	brlid	r15,crypto_wipe
	
	addik	r6,r0,160	# 0xa0
	addik	r5,r1,352
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addk	r5,r24,r0
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,192
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,312
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,232
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r6,r0,32	# 0x20
	brlid	r15,crypto_wipe
	
	addik	r5,r1,392
	lwi	r15,r1,0
	lwi	r19,r1,424
	lwi	r22,r1,428
	lwi	r23,r1,432
	lwi	r24,r1,436
	lwi	r25,r1,440
	lwi	r26,r1,444
	lwi	r27,r1,448
	lwi	r28,r1,452
	lwi	r29,r1,456
	lwi	r30,r1,460
	rtsd	r15,8 
	
	addik	r1,r1,464
$L220:
	addk	r5,r25,r0
	brlid	r15,ge_double
	
	addik	r7,r1,32
	bri	$L218
	.end	ge_scalarmult_base
$Lfe50:
	.size	ge_scalarmult_base,$Lfe50-ge_scalarmult_base
	.section	.text.reduce,"ax",@progbits
	.align	2
	.ent	reduce
	.type	reduce, @function
reduce:
	.frame	r1,544,r15		# vars= 512, regs= 1, args= 24
	.mask	0x00088000
	addik	r1,r1,-544
	swi	r19,r1,540
	swi	r15,r1,0
	addik	r4,r0,64	# 0x40
	addk	r3,r0,r0
	addik	r19,r1,28
$L224:
	lbu	r8,r3,r5
	bslli	r6,r3,3
	addk	r7,r19,r6
	sw	r8,r6,r19
	sb	r0,r3,r5
	swi	r0,r7,4
	addik	r4,r4,-1
	bneid	r4,$L224
	addik	r3,r3,1
	brlid	r15,modL
	
	addk	r6,r19,r0
	addk	r5,r19,r0
	brlid	r15,crypto_wipe
	
	addik	r6,r0,512	# 0x200
	lwi	r15,r1,0
	lwi	r19,r1,540
	rtsd	r15,8 
	
	addik	r1,r1,544
	.end	reduce
$Lfe51:
	.size	reduce,$Lfe51-reduce
	.section	.text.fe_isnonzero,"ax",@progbits
	.align	2
	.ent	fe_isnonzero
	.type	fe_isnonzero, @function
fe_isnonzero:
	.frame	r1,64,r15		# vars= 36, regs= 0, args= 24
	.mask	0x00008000
	addk	r6,r5,r0
	addik	r1,r1,-64
	swi	r15,r1,0
	brlid	r15,fe_tobytes
	
	addik	r5,r1,28
	addik	r6,r0,zero
	brlid	r15,crypto_verify32
	
	addik	r5,r1,28
	addik	r6,r0,32	# 0x20
	addik	r5,r1,28
	brlid	r15,crypto_wipe
	
	swi	r3,r1,60
	lwi	r3,r1,60
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,64
	.end	fe_isnonzero
$Lfe52:
	.size	fe_isnonzero,$Lfe52-fe_isnonzero
	.section	.text.ge_tobytes,"ax",@progbits
	.align	2
	.ent	ge_tobytes
	.type	ge_tobytes, @function
ge_tobytes:
	.frame	r1,188,r15		# vars= 152, regs= 2, args= 24
	.mask	0x00488000
	addik	r1,r1,-188
	swi	r19,r1,180
	addk	r19,r6,r0
	swi	r22,r1,184
	addik	r6,r6,80
	addk	r22,r5,r0
	swi	r15,r1,0
	brlid	r15,fe_invert
	
	addik	r5,r1,108
	addk	r6,r19,r0
	addik	r7,r1,108
	brlid	r15,fe_mul
	
	addik	r5,r1,68
	addik	r7,r1,108
	addik	r6,r19,40
	brlid	r15,fe_mul
	
	addik	r5,r1,28
	addk	r5,r22,r0
	brlid	r15,fe_tobytes
	
	addik	r6,r1,28
	addik	r6,r1,68
	brlid	r15,fe_tobytes
	
	addik	r5,r1,148
	lbui	r19,r1,148
	addik	r5,r1,148
	brlid	r15,crypto_wipe
	
	addik	r6,r0,32	# 0x20
	lbui	r3,r22,31
	andi	r19,r19,1 #and1
	bslli	r19,r19,7
	xor	r19,r19,r3
	sbi	r19,r22,31
	addik	r5,r1,108
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,68
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r6,r0,40	# 0x28
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,180
	lwi	r22,r1,184
	rtsd	r15,8 
	
	addik	r1,r1,188
	.end	ge_tobytes
$Lfe53:
	.size	ge_tobytes,$Lfe53-ge_tobytes
	.section	.text.crypto_hchacha20,"ax",@progbits
	.align	2
	.globl	crypto_hchacha20
	.ent	crypto_hchacha20
	.type	crypto_hchacha20, @function
crypto_hchacha20:
	.frame	r1,112,r15		# vars= 64, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-112
	swi	r19,r1,92
	addik	r19,r1,28
	swi	r25,r1,108
	addk	r25,r5,r0
	addk	r5,r19,r0
	swi	r22,r1,96
	swi	r23,r1,100
	swi	r24,r1,104
	swi	r15,r1,0
	addk	r24,r7,r0
	brlid	r15,chacha20_init_key
	
	addik	r22,r0,4	# 0x4
	addk	r23,r0,r0
$L232:
	bslli	r5,r23,2
	brlid	r15,load32_le
	
	addk	r5,r24,r5
	addik	r4,r23,12
	bslli	r4,r4,2
	addik	r22,r22,-1
	sw	r3,r4,r19
	bneid	r22,$L232
	addik	r23,r23,1
	addk	r6,r19,r0
	addk	r5,r19,r0
	brlid	r15,chacha20_rounds
	
	addik	r24,r0,4	# 0x4
$L233:
	bslli	r23,r22,2
	lw	r6,r23,r19
	addk	r5,r25,r23
	brlid	r15,store32_le
	
	addik	r24,r24,-1
	addik	r3,r22,12
	bslli	r3,r3,2
	lw	r6,r3,r19
	addik	r5,r23,16
	brlid	r15,store32_le
	
	addk	r5,r25,r5
	bneid	r24,$L233
	addik	r22,r22,1
	addk	r5,r19,r0
	brlid	r15,crypto_wipe
	
	addik	r6,r0,64	# 0x40
	lwi	r15,r1,0
	lwi	r19,r1,92
	lwi	r22,r1,96
	lwi	r23,r1,100
	lwi	r24,r1,104
	lwi	r25,r1,108
	rtsd	r15,8 
	
	addik	r1,r1,112
	.end	crypto_hchacha20
$Lfe54:
	.size	crypto_hchacha20,$Lfe54-crypto_hchacha20
	.section	.text.crypto_chacha20_ctr,"ax",@progbits
	.align	2
	.globl	crypto_chacha20_ctr
	.ent	crypto_chacha20_ctr
	.type	crypto_chacha20_ctr, @function
crypto_chacha20_ctr:
	.frame	r1,116,r15		# vars= 64, regs= 6, args= 24
	.mask	0x07c88000
	addik	r1,r1,-116
	swi	r23,r1,100
	addk	r23,r6,r0
	addk	r6,r8,r0
	swi	r19,r1,92
	addk	r19,r9,r0
	swi	r22,r1,96
	addk	r22,r5,r0
	addik	r5,r1,28
	swi	r15,r1,0
	swi	r10,r1,140
	swi	r24,r1,104
	swi	r25,r1,108
	addk	r24,r7,r0
	lwi	r25,r1,144
	swi	r26,r1,112
	brlid	r15,chacha20_init_key
	
	addk	r26,r10,r0
	addk	r5,r19,r0
	swi	r26,r1,76
	brlid	r15,load32_le
	
	swi	r25,r1,80
	addik	r5,r19,4
	brlid	r15,load32_le
	
	swi	r3,r1,84
	addk	r8,r24,r0
	addk	r7,r23,r0
	addk	r6,r22,r0
	addik	r5,r1,28
	brlid	r15,chacha20_core
	
	swi	r3,r1,88
	addk	r22,r3,r0
	addk	r23,r4,r0
	addik	r6,r0,64	# 0x40
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
	addk	r3,r22,r0
	addk	r4,r23,r0
	lwi	r15,r1,0
	lwi	r19,r1,92
	lwi	r22,r1,96
	lwi	r23,r1,100
	lwi	r24,r1,104
	lwi	r25,r1,108
	lwi	r26,r1,112
	rtsd	r15,8 
	
	addik	r1,r1,116
	.end	crypto_chacha20_ctr
$Lfe55:
	.size	crypto_chacha20_ctr,$Lfe55-crypto_chacha20_ctr
	.section	.text.crypto_ietf_chacha20_ctr,"ax",@progbits
	.align	2
	.globl	crypto_ietf_chacha20_ctr
	.ent	crypto_ietf_chacha20_ctr
	.type	crypto_ietf_chacha20_ctr, @function
crypto_ietf_chacha20_ctr:
	.frame	r1,116,r15		# vars= 68, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-116
	swi	r23,r1,104
	addk	r23,r6,r0
	addk	r6,r8,r0
	swi	r19,r1,96
	addk	r19,r9,r0
	swi	r22,r1,100
	addk	r22,r5,r0
	addik	r5,r1,28
	swi	r15,r1,0
	swi	r24,r1,108
	swi	r25,r1,112
	addk	r24,r7,r0
	brlid	r15,chacha20_init_key
	
	addk	r25,r10,r0
	addk	r5,r19,r0
	brlid	r15,load32_le
	
	swi	r25,r1,76
	addik	r5,r19,4
	brlid	r15,load32_le
	
	swi	r3,r1,80
	addik	r5,r19,8
	brlid	r15,load32_le
	
	swi	r3,r1,84
	addk	r8,r24,r0
	addk	r7,r23,r0
	addk	r6,r22,r0
	addik	r5,r1,28
	brlid	r15,chacha20_core
	
	swi	r3,r1,88
	addik	r6,r0,64	# 0x40
	addik	r5,r1,28
	brlid	r15,crypto_wipe
	
	swi	r3,r1,92
	lwi	r3,r1,92
	lwi	r15,r1,0
	lwi	r19,r1,96
	lwi	r22,r1,100
	lwi	r23,r1,104
	lwi	r24,r1,108
	lwi	r25,r1,112
	rtsd	r15,8 
	
	addik	r1,r1,116
	.end	crypto_ietf_chacha20_ctr
$Lfe56:
	.size	crypto_ietf_chacha20_ctr,$Lfe56-crypto_ietf_chacha20_ctr
	.section	.text.crypto_xchacha20_ctr,"ax",@progbits
	.align	2
	.globl	crypto_xchacha20_ctr
	.ent	crypto_xchacha20_ctr
	.type	crypto_xchacha20_ctr, @function
crypto_xchacha20_ctr:
	.frame	r1,88,r15		# vars= 36, regs= 5, args= 28
	.mask	0x03c88000
	addik	r1,r1,-88
	swi	r23,r1,76
	swi	r24,r1,80
	addk	r23,r6,r0
	addk	r24,r7,r0
	addk	r6,r8,r0
	addk	r7,r9,r0
	swi	r22,r1,72
	addk	r22,r5,r0
	addik	r5,r1,32
	swi	r15,r1,0
	swi	r19,r1,68
	swi	r25,r1,84
	addk	r19,r9,r0
	lwi	r25,r1,116
	swi	r10,r1,112
	brlid	r15,crypto_hchacha20
	
	swi	r10,r1,64
	addk	r7,r24,r0
	lwi	r10,r1,64
	addk	r6,r23,r0
	addk	r5,r22,r0
	addik	r9,r19,16
	swi	r25,r1,28
	brlid	r15,crypto_chacha20_ctr
	
	addik	r8,r1,32
	addk	r22,r3,r0
	addk	r23,r4,r0
	addik	r6,r0,32	# 0x20
	brlid	r15,crypto_wipe
	
	addk	r5,r1,r6
	addk	r3,r22,r0
	addk	r4,r23,r0
	lwi	r15,r1,0
	lwi	r19,r1,68
	lwi	r22,r1,72
	lwi	r23,r1,76
	lwi	r24,r1,80
	lwi	r25,r1,84
	rtsd	r15,8 
	
	addik	r1,r1,88
	.end	crypto_xchacha20_ctr
$Lfe57:
	.size	crypto_xchacha20_ctr,$Lfe57-crypto_xchacha20_ctr
	.section	.text.crypto_chacha20,"ax",@progbits
	.align	2
	.globl	crypto_chacha20
	.ent	crypto_chacha20
	.type	crypto_chacha20, @function
crypto_chacha20:
	.frame	r1,32,r15		# vars= 0, regs= 0, args= 28
	.mask	0x00008000
	addik	r1,r1,-32
	addk	r10,r0,r0
	swi	r10,r1,28
	swi	r15,r1,0
	brlid	r15,crypto_chacha20_ctr
	nop		# Unfilled delay slot

	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,32
	.end	crypto_chacha20
$Lfe58:
	.size	crypto_chacha20,$Lfe58-crypto_chacha20
	.section	.text.crypto_ietf_chacha20,"ax",@progbits
	.align	2
	.globl	crypto_ietf_chacha20
	.ent	crypto_ietf_chacha20
	.type	crypto_ietf_chacha20, @function
crypto_ietf_chacha20:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_ietf_chacha20_ctr
	
	addk	r10,r0,r0
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_ietf_chacha20
$Lfe59:
	.size	crypto_ietf_chacha20,$Lfe59-crypto_ietf_chacha20
	.section	.text.crypto_xchacha20,"ax",@progbits
	.align	2
	.globl	crypto_xchacha20
	.ent	crypto_xchacha20
	.type	crypto_xchacha20, @function
crypto_xchacha20:
	.frame	r1,32,r15		# vars= 0, regs= 0, args= 28
	.mask	0x00008000
	addik	r1,r1,-32
	addk	r10,r0,r0
	swi	r10,r1,28
	swi	r15,r1,0
	brlid	r15,crypto_xchacha20_ctr
	nop		# Unfilled delay slot

	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,32
	.end	crypto_xchacha20
$Lfe60:
	.size	crypto_xchacha20,$Lfe60-crypto_xchacha20
	.section	.text.crypto_poly1305_init,"ax",@progbits
	.align	2
	.globl	crypto_poly1305_init
	.ent	crypto_poly1305_init
	.type	crypto_poly1305_init, @function
crypto_poly1305_init:
	.frame	r1,48,r15		# vars= 0, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-48
	swi	r19,r1,28
	swi	r22,r1,32
	swi	r23,r1,36
	swi	r24,r1,40
	swi	r15,r1,0
	swi	r25,r1,44
	addik	r3,r0,1	# 0x1
	addk	r19,r5,r0
	swi	r0,r5,16
	swi	r0,r5,20
	swi	r0,r5,24
	swi	r0,r5,28
	swi	r0,r5,32
	swi	r3,r5,52
	swi	r0,r5,36
	swi	r0,r5,40
	swi	r0,r5,44
	swi	r0,r5,48
	swi	r0,r5,72
	addk	r5,r6,r0
	addk	r24,r6,r0
	brlid	r15,load32_le
	
	addik	r22,r0,3	# 0x3
	andi	r3,r3,268435455 #and2
	swi	r3,r19,0
	addik	r23,r0,1	# 0x1
$L250:
	bslli	r25,r23,2
	brlid	r15,load32_le
	
	addk	r5,r24,r25
	andi	r3,r3,268435452 #and2
	sw	r3,r25,r19
	addik	r22,r22,-1
	bneid	r22,$L250
	addik	r23,r23,1
	addik	r23,r0,4	# 0x4
$L251:
	addik	r5,r22,4
	bslli	r5,r5,2
	brlid	r15,load32_le
	
	addk	r5,r24,r5
	addik	r4,r22,14
	bslli	r4,r4,2
	addik	r23,r23,-1
	sw	r3,r4,r19
	bneid	r23,$L251
	addik	r22,r22,1
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	rtsd	r15,8 
	
	addik	r1,r1,48
	.end	crypto_poly1305_init
$Lfe61:
	.size	crypto_poly1305_init,$Lfe61-crypto_poly1305_init
	.section	.text.crypto_poly1305_update,"ax",@progbits
	.align	2
	.globl	crypto_poly1305_update
	.ent	crypto_poly1305_update
	.type	crypto_poly1305_update, @function
crypto_poly1305_update:
	.frame	r1,60,r15		# vars= 0, regs= 8, args= 24
	.mask	0x1fc88000
	addik	r1,r1,-60
	swi	r19,r1,28
	swi	r23,r1,36
	swi	r24,r1,40
	swi	r15,r1,0
	swi	r22,r1,32
	swi	r25,r1,44
	swi	r26,r1,48
	swi	r27,r1,52
	swi	r28,r1,56
	lwi	r22,r5,72
	addk	r19,r5,r0
	addk	r23,r6,r0
	rsubk	r22,r22,r0
	andi	r22,r22,15 #and1
	cmpu	r18,r22,r7
	bgeid	r18,$L256
	addk	r24,r7,r0
	addk	r22,r7,r0
$L256:
	addk	r7,r22,r0
	addk	r6,r23,r0
	addk	r5,r19,r0
	addk	r23,r23,r22
	addk	r27,r23,r0
	rsubk	r22,r22,r24
	brlid	r15,poly_update
	
	bsrli	r25,r22,4
	addk	r26,r0,r0
$L257:
	cmpu	r18,r25,r26
	bltid	r18,$L259
	addik	r28,r0,4	# 0x4
	bslli	r6,r25,4
	beqid	r25,$L260
	addk	r6,r23,r6
	swi	r0,r19,36
	swi	r0,r19,40
	swi	r0,r19,44
	swi	r0,r19,48
	swi	r0,r19,72
$L260:
	addk	r5,r19,r0
	brlid	r15,poly_update
	
	andi	r7,r22,15 #and1
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	lwi	r26,r1,48
	lwi	r27,r1,52
	lwi	r28,r1,56
	rtsd	r15,8 
	
	addik	r1,r1,60
$L259:
	addk	r24,r0,r0
$L258:
	bslli	r5,r24,2
	brlid	r15,load32_le
	
	addk	r5,r27,r5
	addik	r4,r24,9
	bslli	r4,r4,2
	addik	r28,r28,-1
	sw	r3,r4,r19
	bneid	r28,$L258
	addik	r24,r24,1
	addk	r5,r19,r0
	addik	r27,r27,16
	brlid	r15,poly_block
	
	addik	r26,r26,1
	bri	$L257
	.end	crypto_poly1305_update
$Lfe62:
	.size	crypto_poly1305_update,$Lfe62-crypto_poly1305_update
	.section	.text.crypto_poly1305_final,"ax",@progbits
	.align	2
	.globl	crypto_poly1305_final
	.ent	crypto_poly1305_final
	.type	crypto_poly1305_final, @function
crypto_poly1305_final:
	.frame	r1,76,r15		# vars= 8, regs= 10, args= 24
	.mask	0x7fc88000
	addik	r1,r1,-76
	swi	r19,r1,36
	swi	r30,r1,72
	swi	r15,r1,0
	swi	r22,r1,40
	swi	r23,r1,44
	swi	r24,r1,48
	swi	r25,r1,52
	swi	r26,r1,56
	swi	r27,r1,60
	swi	r28,r1,64
	swi	r29,r1,68
	lwi	r3,r5,72
	addk	r30,r5,r0
	beqid	r3,$L267
	addk	r19,r6,r0
	andi	r4,r3,-4 #and1
	bslli	r7,r3,3
	swi	r0,r5,52
	addk	r4,r5,r4
	addik	r6,r0,1	# 0x1
	bsll	r7,r6,r7
	lwi	r6,r4,36
	addik	r3,r3,1
	or	r6,r6,r7
	swi	r6,r4,36
	brlid	r15,poly_block
	
	swi	r3,r5,72
$L267:
	lwi	r22,r30,16
	addk	r23,r0,r0
	lwi	r28,r30,20
	addi	r6,r22,0x00000005
	addic	r7,r23,0x00000000
	addk	r29,r23,r0
	addk	r5,r23,r0
	addk	r4,r7,r0
	lwi	r26,r30,24
	addk	r27,r23,r0
	add	r6,r4,r28
	addc	r7,r5,r29
	addk	r4,r7,r0
	addk	r5,r23,r0
	lwi	r24,r30,28
	addk	r25,r23,r0
	add	r6,r4,r26
	addc	r7,r5,r27
	addk	r4,r7,r0
	addk	r5,r23,r0
	addk	r7,r23,r0
	lwi	r10,r30,32
	add	r4,r4,r24
	addc	r5,r5,r25
	addk	r6,r5,r0
	addk	r11,r23,r0
	add	r10,r6,r10
	addc	r11,r7,r11
	bslli	r5,r11,30
	bsrli	r3,r10,2
	bsrli	r6,r11,2
	addik	r8,r0,0x00000000
	addik	r7,r0,0x00000005 #li => la
	brlid	r15,__muldi3
	
	or	r5,r5,r3
	lwi	r6,r30,56
	addk	r7,r23,r0
	addk	r5,r4,r0
	addk	r4,r3,r0
	add	r6,r6,r22
	addc	r7,r7,r23
	lwi	r8,r30,64
	add	r6,r4,r6
	addc	r7,r5,r7
	lwi	r4,r30,60
	addk	r5,r23,r0
	addk	r9,r23,r0
	swi	r19,r1,32
	add	r28,r4,r28
	addc	r29,r5,r29
	addk	r4,r7,r0
	addk	r5,r23,r0
	add	r26,r8,r26
	addc	r27,r9,r27
	addk	r9,r23,r0
	add	r4,r28,r4
	addc	r5,r29,r5
	addk	r8,r5,r0
	swi	r4,r1,28
	add	r26,r26,r8
	addc	r27,r27,r9
	lwi	r8,r30,68
	addk	r9,r23,r0
	add	r24,r8,r24
	addc	r25,r9,r25
	addk	r8,r27,r0
	addk	r9,r23,r0
	add	r24,r24,r8
	addc	r25,r25,r9
	brlid	r15,store32_le
	
	addk	r5,r19,r0
	lwi	r4,r1,28
	addik	r5,r19,4
	brlid	r15,store32_le
	
	addk	r6,r4,r0
	addk	r6,r26,r0
	brlid	r15,store32_le
	
	addik	r5,r19,8
	addk	r6,r24,r0
	brlid	r15,store32_le
	
	addik	r5,r19,12
	addk	r5,r30,r0
	brlid	r15,crypto_wipe
	
	addik	r6,r0,76	# 0x4c
	lwi	r15,r1,0
	lwi	r19,r1,36
	lwi	r22,r1,40
	lwi	r23,r1,44
	lwi	r24,r1,48
	lwi	r25,r1,52
	lwi	r26,r1,56
	lwi	r27,r1,60
	lwi	r28,r1,64
	lwi	r29,r1,68
	lwi	r30,r1,72
	rtsd	r15,8 
	
	addik	r1,r1,76
	.end	crypto_poly1305_final
$Lfe63:
	.size	crypto_poly1305_final,$Lfe63-crypto_poly1305_final
	.section	.text.lock_auth,"ax",@progbits
	.align	2
	.ent	lock_auth
	.type	lock_auth, @function
lock_auth:
	.frame	r1,148,r15		# vars= 92, regs= 7, args= 24
	.mask	0x0fc88000
	addik	r1,r1,-148
	swi	r23,r1,128
	addk	r23,r0,r0
	swi	r26,r1,140
	swi	r27,r1,144
	addk	r26,r7,r0
	addk	r27,r6,r0
	addk	r7,r23,r0
	addk	r6,r8,r0
	swi	r19,r1,120
	addk	r19,r10,r0
	swi	r24,r1,132
	addk	r24,r5,r0
	addik	r5,r1,104
	swi	r15,r1,0
	swi	r22,r1,124
	swi	r25,r1,136
	addk	r22,r8,r0
	brlid	r15,store64_le
	
	addk	r25,r9,r0
	addk	r7,r23,r0
	addk	r6,r19,r0
	brlid	r15,store64_le
	
	addik	r5,r1,112
	addk	r6,r27,r0
	brlid	r15,crypto_poly1305_init
	
	addik	r5,r1,28
	addk	r7,r22,r0
	addk	r6,r26,r0
	brlid	r15,crypto_poly1305_update
	
	addik	r5,r1,28
	addik	r6,r0,zero
	rsubk	r7,r22,r0
	addik	r5,r1,28
	brlid	r15,crypto_poly1305_update
	
	andi	r7,r7,15 #and1
	addk	r7,r19,r0
	addk	r6,r25,r0
	brlid	r15,crypto_poly1305_update
	
	addik	r5,r1,28
	addik	r6,r0,zero
	rsubk	r7,r19,r0
	addik	r5,r1,28
	brlid	r15,crypto_poly1305_update
	
	andi	r7,r7,15 #and1
	addik	r7,r0,16	# 0x10
	addik	r6,r1,104
	brlid	r15,crypto_poly1305_update
	
	addik	r5,r1,28
	addk	r6,r24,r0
	brlid	r15,crypto_poly1305_final
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,120
	lwi	r22,r1,124
	lwi	r23,r1,128
	lwi	r24,r1,132
	lwi	r25,r1,136
	lwi	r26,r1,140
	lwi	r27,r1,144
	rtsd	r15,8 
	
	addik	r1,r1,148
	.end	lock_auth
$Lfe64:
	.size	lock_auth,$Lfe64-lock_auth
	.section	.text.crypto_poly1305,"ax",@progbits
	.align	2
	.globl	crypto_poly1305
	.ent	crypto_poly1305
	.type	crypto_poly1305, @function
crypto_poly1305:
	.frame	r1,116,r15		# vars= 80, regs= 2, args= 24
	.mask	0x00488000
	addik	r1,r1,-116
	swi	r22,r1,112
	addk	r22,r6,r0
	addk	r6,r8,r0
	swi	r19,r1,108
	addk	r19,r5,r0
	addik	r5,r1,28
	swi	r15,r1,0
	brlid	r15,crypto_poly1305_init
	
	swi	r7,r1,104
	lwi	r7,r1,104
	addk	r6,r22,r0
	brlid	r15,crypto_poly1305_update
	
	addik	r5,r1,28
	addk	r6,r19,r0
	brlid	r15,crypto_poly1305_final
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,108
	lwi	r22,r1,112
	rtsd	r15,8 
	
	addik	r1,r1,116
	.end	crypto_poly1305
$Lfe65:
	.size	crypto_poly1305,$Lfe65-crypto_poly1305
	.section	.text.crypto_blake2b_update,"ax",@progbits
	.align	2
	.globl	crypto_blake2b_update
	.ent	crypto_blake2b_update
	.type	crypto_blake2b_update, @function
crypto_blake2b_update:
	.frame	r1,60,r15		# vars= 0, regs= 8, args= 24
	.mask	0x1fc88000
	addik	r1,r1,-60
	swi	r19,r1,28
	swi	r23,r1,36
	swi	r24,r1,40
	swi	r15,r1,0
	swi	r22,r1,32
	swi	r25,r1,44
	swi	r26,r1,48
	swi	r27,r1,52
	swi	r28,r1,56
	lwi	r22,r5,208
	addk	r19,r5,r0
	addk	r23,r6,r0
	rsubk	r22,r22,r0
	andi	r22,r22,127 #and1
	cmpu	r18,r22,r7
	bgeid	r18,$L277
	addk	r24,r7,r0
	addk	r22,r7,r0
$L277:
	addk	r7,r22,r0
	addk	r6,r23,r0
	addk	r5,r19,r0
	addk	r23,r23,r22
	addk	r27,r23,r0
	rsubk	r22,r22,r24
	brlid	r15,blake2b_update
	
	bsrli	r25,r22,7
	addk	r26,r0,r0
$L278:
	cmpu	r18,r25,r26
	bltid	r18,$L281
	addk	r5,r19,r0
	bslli	r6,r25,7
	andi	r7,r22,127 #and1
	brlid	r15,blake2b_update
	
	addk	r6,r23,r6
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	lwi	r26,r1,48
	lwi	r27,r1,52
	lwi	r28,r1,56
	rtsd	r15,8 
	
	addik	r1,r1,60
$L281:
	lwi	r24,r19,208
	xori	r24,r24,128
	bneid	r24,$L284
	addik	r28,r0,16	# 0x10
	brlid	r15,blake2b_incr
	
	addk	r5,r19,r0
	addk	r6,r24,r0
	brlid	r15,blake2b_compress
	
	addk	r5,r19,r0
	swi	r24,r19,208
	addik	r28,r0,16	# 0x10
$L284:
	addk	r24,r0,r0
$L280:
	bslli	r5,r24,3
	brlid	r15,load64_le
	
	addk	r5,r27,r5
	addk	r5,r4,r0
	addk	r4,r3,r0
	addik	r3,r24,10
	bslli	r3,r3,3
	addk	r3,r19,r3
	swi	r4,r3,0
	swi	r5,r3,4
	addik	r28,r28,-1
	bneid	r28,$L280
	addik	r24,r24,1
	addik	r3,r0,128	# 0x80
	addik	r27,r27,128
	swi	r3,r19,208
	brid	$L278
	addik	r26,r26,1
	.end	crypto_blake2b_update
$Lfe66:
	.size	crypto_blake2b_update,$Lfe66-crypto_blake2b_update
	.section	.text.crypto_blake2b_general_init,"ax",@progbits
	.align	2
	.globl	crypto_blake2b_general_init
	.ent	crypto_blake2b_general_init
	.type	crypto_blake2b_general_init, @function
crypto_blake2b_general_init:
	.frame	r1,40,r15		# vars= 0, regs= 3, args= 24
	.mask	0x00c88000
	addik	r1,r1,-40
	swi	r15,r1,0
	swi	r19,r1,28
	swi	r22,r1,32
	swi	r23,r1,36
	addik	r3,r0,8	# 0x8
	addk	r4,r0,r0
$L286:
	bslli	r9,r4,3
	lwi	r22,r9,iv
	lwi	r23,r9,iv+4
	addk	r10,r5,r9
	addik	r3,r3,-1
	swi	r22,r10,0
	swi	r23,r10,4
	bneid	r3,$L286
	addik	r4,r4,1
	bslli	r9,r8,8
	xori	r4,r6,16842752
	xor	r9,r4,r9
	lwi	r4,r5,0
	addik	r11,r0,0x00000000
	addik	r10,r0,0x00000000 #li => la
	swi	r10,r5,64
	swi	r11,r5,68
	xor	r4,r4,r9
	swi	r4,r5,0
	swi	r10,r5,72
	swi	r11,r5,76
	swi	r6,r5,212
	beqid	r8,$L285
	swi	r3,r5,208
	addk	r6,r7,r0
	addk	r7,r8,r0
	addk	r19,r5,r0
	brlid	r15,crypto_blake2b_update
	
	addk	r22,r8,r0
	addik	r6,r0,zero
	addk	r5,r19,r0
	addik	r11,r0,128	# 0x80
	brlid	r15,crypto_blake2b_update
	
	rsubk	r7,r22,r11
$L285:
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	rtsd	r15,8 
	
	addik	r1,r1,40
	.end	crypto_blake2b_general_init
$Lfe67:
	.size	crypto_blake2b_general_init,$Lfe67-crypto_blake2b_general_init
	.section	.text.crypto_blake2b_init,"ax",@progbits
	.align	2
	.globl	crypto_blake2b_init
	.ent	crypto_blake2b_init
	.type	crypto_blake2b_init, @function
crypto_blake2b_init:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addk	r8,r0,r0
	addk	r7,r8,r0
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_blake2b_general_init
	
	addik	r6,r0,64	# 0x40
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_blake2b_init
$Lfe68:
	.size	crypto_blake2b_init,$Lfe68-crypto_blake2b_init
	.section	.text.blake2b_vtable_init,"ax",@progbits
	.align	2
	.ent	blake2b_vtable_init
	.type	blake2b_vtable_init, @function
blake2b_vtable_init:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_blake2b_init
	
	addik	r5,r5,132
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	blake2b_vtable_init
$Lfe69:
	.size	blake2b_vtable_init,$Lfe69-blake2b_vtable_init
	.section	.text.blake2b_vtable_update,"ax",@progbits
	.align	2
	.ent	blake2b_vtable_update
	.type	blake2b_vtable_update, @function
blake2b_vtable_update:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_blake2b_update
	
	addik	r5,r5,132
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	blake2b_vtable_update
$Lfe70:
	.size	blake2b_vtable_update,$Lfe70-blake2b_vtable_update
	.section	.text.blake_update_32,"ax",@progbits
	.align	2
	.ent	blake_update_32
	.type	blake_update_32, @function
blake_update_32:
	.frame	r1,36,r15		# vars= 4, regs= 1, args= 24
	.mask	0x00088000
	addik	r1,r1,-36
	swi	r19,r1,32
	addk	r19,r5,r0
	swi	r15,r1,0
	brlid	r15,store32_le
	
	addik	r5,r1,28
	addk	r5,r19,r0
	addik	r7,r0,4	# 0x4
	brlid	r15,crypto_blake2b_update
	
	addik	r6,r1,28
	addik	r6,r0,4	# 0x4
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,32
	rtsd	r15,8 
	
	addik	r1,r1,36
	.end	blake_update_32
$Lfe71:
	.size	blake_update_32,$Lfe71-blake_update_32
	.section	.text.crypto_blake2b_final,"ax",@progbits
	.align	2
	.globl	crypto_blake2b_final
	.ent	crypto_blake2b_final
	.type	crypto_blake2b_final, @function
crypto_blake2b_final:
	.frame	r1,48,r15		# vars= 0, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-48
	swi	r19,r1,28
	swi	r24,r1,40
	swi	r15,r1,0
	swi	r22,r1,32
	swi	r23,r1,36
	swi	r25,r1,44
	addk	r19,r5,r0
	addk	r24,r6,r0
	lwi	r3,r5,208
	addik	r7,r0,127	# 0x7f
$L302:
	cmpu	r18,r3,r7
	bgeid	r18,$L306
	addk	r5,r19,r0
	brlid	r15,blake2b_incr
	
	addk	r23,r0,r0
	addk	r5,r19,r0
	brlid	r15,blake2b_compress
	
	addik	r6,r0,1	# 0x1
	lwi	r22,r19,212
	bsrli	r25,r22,3
$L307:
	cmpu	r18,r25,r23
	bltid	r18,$L308
	bslli	r5,r23,3
	andi	r22,r22,-8 #and1
$L309:
	lwi	r3,r19,212
	cmpu	r18,r3,r22
	bltid	r18,$L310
	andi	r3,r22,-8 #and1
	addk	r5,r19,r0
	brlid	r15,crypto_wipe
	
	addik	r6,r0,216	# 0xd8
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	lwi	r25,r1,44
	rtsd	r15,8 
	
	addik	r1,r1,48
$L306:
	beqid	r3,$L303
	addk	r6,r3,r0
	brid	$L302
	addik	r3,r3,1
$L303:
	addik	r5,r0,16	# 0x10
$L304:
	addik	r4,r6,10
	bslli	r4,r4,3
	addik	r9,r0,0x00000000
	addik	r8,r0,0x00000000 #li => la
	addk	r4,r19,r4
	swi	r8,r4,0
	swi	r9,r4,4
	addik	r5,r5,-1
	bneid	r5,$L304
	addik	r6,r6,1
	brid	$L302
	addik	r3,r3,1
$L308:
	addk	r3,r19,r5
	lwi	r6,r3,0
	lwi	r7,r3,4
	addk	r5,r24,r5
	brlid	r15,store64_le
	
	addik	r23,r23,1
	bri	$L307
$L310:
	addk	r3,r19,r3
	andi	r7,r22,7 #and1
	lwi	r5,r3,0
	lwi	r6,r3,4
	brlid	r15,__lshrdi3
	
	bslli	r7,r7,3
	sb	r3,r22,r24
	brid	$L309
	addik	r22,r22,1
	.end	crypto_blake2b_final
$Lfe72:
	.size	crypto_blake2b_final,$Lfe72-crypto_blake2b_final
	.section	.text.blake2b_vtable_final,"ax",@progbits
	.align	2
	.ent	blake2b_vtable_final
	.type	blake2b_vtable_final, @function
blake2b_vtable_final:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_blake2b_final
	
	addik	r5,r5,132
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	blake2b_vtable_final
$Lfe73:
	.size	blake2b_vtable_final,$Lfe73-blake2b_vtable_final
	.section	.text.crypto_blake2b_general,"ax",@progbits
	.align	2
	.globl	crypto_blake2b_general
	.ent	crypto_blake2b_general
	.type	crypto_blake2b_general, @function
crypto_blake2b_general:
	.frame	r1,256,r15		# vars= 216, regs= 3, args= 24
	.mask	0x00c88000
	addik	r1,r1,-256
	swi	r22,r1,248
	swi	r23,r1,252
	addk	r22,r9,r0
	addk	r23,r10,r0
	swi	r19,r1,244
	addk	r19,r5,r0
	swi	r15,r1,0
	brlid	r15,crypto_blake2b_general_init
	
	addik	r5,r1,28
	addk	r7,r23,r0
	addk	r6,r22,r0
	brlid	r15,crypto_blake2b_update
	
	addik	r5,r1,28
	addk	r6,r19,r0
	brlid	r15,crypto_blake2b_final
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,244
	lwi	r22,r1,248
	lwi	r23,r1,252
	rtsd	r15,8 
	
	addik	r1,r1,256
	.end	crypto_blake2b_general
$Lfe74:
	.size	crypto_blake2b_general,$Lfe74-crypto_blake2b_general
	.section	.text.crypto_blake2b,"ax",@progbits
	.align	2
	.globl	crypto_blake2b
	.ent	crypto_blake2b
	.type	crypto_blake2b, @function
crypto_blake2b:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addk	r8,r0,r0
	addk	r10,r7,r0
	addk	r9,r6,r0
	addk	r7,r8,r0
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_blake2b_general
	
	addik	r6,r0,64	# 0x40
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_blake2b
$Lfe75:
	.size	crypto_blake2b,$Lfe75-crypto_blake2b
	.section	.text.extended_hash,"ax",@progbits
	.align	2
	.ent	extended_hash
	.type	extended_hash, @function
extended_hash:
	.frame	r1,268,r15		# vars= 216, regs= 6, args= 24
	.mask	0x07c88000
	addik	r1,r1,-268
	swi	r19,r1,244
	swi	r22,r1,248
	swi	r23,r1,252
	swi	r25,r1,260
	swi	r15,r1,0
	swi	r24,r1,256
	swi	r26,r1,264
	addik	r3,r0,64	# 0x40
	addk	r25,r5,r0
	addk	r22,r6,r0
	addk	r19,r7,r0
	cmpu	r18,r6,r3
	bgeid	r18,$L320
	addk	r23,r8,r0
	addk	r6,r3,r0
$L320:
	addk	r8,r0,r0
	addk	r7,r8,r0
	brlid	r15,crypto_blake2b_general_init
	
	addik	r5,r1,28
	addk	r6,r22,r0
	brlid	r15,blake_update_32
	
	addik	r5,r1,28
	addk	r7,r23,r0
	addk	r6,r19,r0
	brlid	r15,crypto_blake2b_update
	
	addik	r5,r1,28
	addk	r6,r25,r0
	brlid	r15,crypto_blake2b_final
	
	addik	r5,r1,28
	addik	r3,r0,64	# 0x40
	cmpu	r18,r22,r3
	bgeid	r18,$L319
	addk	r4,r22,r0
	addk	r5,r0,r0
	addk	r26,r5,r0
	addi	r6,r4,0x0000001f
	addic	r7,r5,0x00000000
	bslli	r3,r7,27
	bsrli	r6,r6,5
	or	r6,r3,r6
	addik	r19,r6,-2
	addik	r24,r0,32	# 0x20
	addik	r23,r0,1	# 0x1
$L322:
	addk	r6,r25,r26
	cmpu	r18,r19,r23
	bltid	r18,$L323
	addk	r5,r25,r24
	addk	r8,r0,r0
	bslli	r19,r19,5
	addk	r9,r6,r0
	addk	r7,r8,r0
	addik	r10,r0,64	# 0x40
	brlid	r15,crypto_blake2b_general
	
	rsubk	r6,r19,r22
$L319:
	lwi	r15,r1,0
	lwi	r19,r1,244
	lwi	r22,r1,248
	lwi	r23,r1,252
	lwi	r24,r1,256
	lwi	r25,r1,260
	lwi	r26,r1,264
	rtsd	r15,8 
	
	addik	r1,r1,268
$L323:
	brlid	r15,crypto_blake2b
	
	addik	r7,r0,64	# 0x40
	addik	r23,r23,1
	addik	r26,r26,32
	brid	$L322
	addik	r24,r24,32
	.end	extended_hash
$Lfe76:
	.size	extended_hash,$Lfe76-extended_hash
	.section	.text.crypto_argon2i_general,"ax",@progbits
	.align	2
	.globl	crypto_argon2i_general
	.ent	crypto_argon2i_general
	.type	crypto_argon2i_general, @function
crypto_argon2i_general:
	.frame	r1,3280,r15		# vars= 3208, regs= 11, args= 24
	.mask	0xffc88000
	addik	r1,r1,-3280
	swi	r5,r1,3284
	addik	r5,r1,2100
	swi	r15,r1,0
	swi	r9,r1,3300
	swi	r19,r1,3236
	swi	r22,r1,3240
	addk	r19,r8,r0
	addk	r22,r10,r0
	swi	r23,r1,3244
	swi	r25,r1,3252
	swi	r26,r1,3256
	addk	r25,r7,r0
	swi	r6,r1,3288
	swi	r24,r1,3248
	swi	r27,r1,3260
	swi	r28,r1,3264
	swi	r29,r1,3268
	swi	r30,r1,3272
	brlid	r15,crypto_blake2b_init
	
	swi	r31,r1,3276
	addik	r6,r0,1	# 0x1
	brlid	r15,blake_update_32
	
	addik	r5,r1,2100
	lwi	r6,r1,3288
	addik	r5,r1,2100
	brlid	r15,blake_update_32
	
	addik	r23,r0,128	# 0x80
	addk	r6,r19,r0
	addik	r5,r1,2100
	brlid	r15,blake_update_32
	
	addk	r26,r0,r0
	lwi	r6,r1,3300
	brlid	r15,blake_update_32
	
	addik	r5,r1,2100
	addik	r6,r0,19	# 0x13
	brlid	r15,blake_update_32
	
	addik	r5,r1,2100
	addik	r6,r0,1	# 0x1
	brlid	r15,blake_update_32
	
	addik	r5,r1,2100
	lwi	r6,r1,3308
	brlid	r15,blake_update_32
	
	addik	r5,r1,2100
	lwi	r7,r1,3308
	addk	r6,r22,r0
	addik	r5,r1,2100
	brlid	r15,crypto_blake2b_update
	
	addik	r22,r1,28
	lwi	r6,r1,3316
	brlid	r15,blake_update_32
	
	addik	r5,r1,2100
	lwi	r7,r1,3316
	lwi	r6,r1,3312
	brlid	r15,crypto_blake2b_update
	
	addik	r5,r1,2100
	lwi	r6,r1,3324
	brlid	r15,blake_update_32
	
	addik	r5,r1,2100
	lwi	r7,r1,3324
	lwi	r6,r1,3320
	brlid	r15,crypto_blake2b_update
	
	addik	r5,r1,2100
	lwi	r6,r1,3332
	brlid	r15,blake_update_32
	
	addik	r5,r1,2100
	lwi	r7,r1,3332
	lwi	r6,r1,3328
	brlid	r15,crypto_blake2b_update
	
	addik	r5,r1,2100
	addik	r6,r1,3124
	brlid	r15,crypto_blake2b_final
	
	addik	r5,r1,2100
	addk	r5,r22,r0
	addik	r8,r0,72	# 0x48
	addik	r7,r1,3124
	addik	r6,r0,1024	# 0x400
	sbi	r0,r1,3188
	sbi	r0,r1,3189
	sbi	r0,r1,3190
	sbi	r0,r1,3191
	sbi	r0,r1,3192
	sbi	r0,r1,3193
	sbi	r0,r1,3194
	brlid	r15,extended_hash
	
	sbi	r0,r1,3195
	bslli	r24,r26,3
$L363:
	addk	r24,r22,r24
	addk	r5,r24,r0
	addik	r23,r23,-1
	brlid	r15,load64_le
	
	addik	r26,r26,1
	addk	r5,r4,r0
	addk	r4,r3,r0
	swi	r4,r24,1048
	swi	r5,r24,1052
	bneid	r23,$L363
	bslli	r24,r26,3
	addk	r5,r25,r0
	addik	r6,r1,1076
	brlid	r15,copy_block
	
	addik	r26,r0,128	# 0x80
	addk	r5,r22,r0
	addik	r3,r0,1	# 0x1
	addik	r8,r0,72	# 0x48
	addik	r7,r1,3124
	addik	r6,r0,1024	# 0x400
	sbi	r3,r1,3188
	sbi	r23,r1,3189
	sbi	r23,r1,3190
	brlid	r15,extended_hash
	
	sbi	r23,r1,3191
	bslli	r24,r23,3
$L364:
	addk	r24,r22,r24
	addk	r5,r24,r0
	addik	r26,r26,-1
	brlid	r15,load64_le
	
	addik	r23,r23,1
	addk	r5,r4,r0
	addk	r4,r3,r0
	swi	r4,r24,1048
	swi	r5,r24,1052
	bneid	r26,$L364
	bslli	r24,r23,3
	addik	r6,r1,1076
	brlid	r15,copy_block
	
	addik	r5,r25,1024
	addik	r6,r0,72	# 0x48
	brlid	r15,crypto_wipe
	
	addik	r5,r1,3124
	addk	r5,r22,r0
	addik	r6,r0,1024	# 0x400
	brlid	r15,crypto_wipe
	
	andi	r19,r19,-4 #and1
	brlid	r15,wipe_block
	
	addik	r5,r1,1076
	bsrli	r4,r19,2
	addk	r24,r26,r0
	addik	r5,r19,-1
	swi	r4,r1,3200
	swi	r5,r1,3228
$L328:
	lwi	r4,r1,3300
	cmpu	r18,r4,r24
	bltid	r18,$L343
	rsubk	r3,r24,r0
	addik	r23,r19,4194303
	bslli	r23,r23,10
	brlid	r15,wipe_block
	
	addik	r5,r1,2100
	addk	r23,r25,r23
	addik	r22,r0,128	# 0x80
$L344:
	bslli	r5,r26,3
	addk	r3,r23,r5
	lwi	r6,r3,0
	lwi	r7,r3,4
	addik	r3,r1,1076
	addk	r5,r3,r5
	brlid	r15,store64_le
	
	addik	r22,r22,-1
	bneid	r22,$L344
	addik	r26,r26,1
	lwi	r6,r1,3288
	lwi	r5,r1,3284
	addik	r8,r0,1024	# 0x400
	brlid	r15,extended_hash
	
	addik	r7,r1,1076
	addik	r6,r0,1024	# 0x400
	addik	r5,r1,1076
	brlid	r15,crypto_wipe
	
	bslli	r19,r19,7
$L345:
	cmpu	r18,r19,r22
	bltid	r18,$L346
	bslli	r3,r22,3
	lwi	r15,r1,0
	lwi	r19,r1,3236
	lwi	r22,r1,3240
	lwi	r23,r1,3244
	lwi	r24,r1,3248
	lwi	r25,r1,3252
	lwi	r26,r1,3256
	lwi	r27,r1,3260
	lwi	r28,r1,3264
	lwi	r29,r1,3268
	lwi	r30,r1,3272
	lwi	r31,r1,3276
	rtsd	r15,8 
	
	addik	r1,r1,3280
$L343:
	or	r3,r3,r24
	xori	r3,r3,-1
	bsrli	r3,r3,31
	addik	r6,r0,4	# 0x4
	swi	r3,r1,3204
	swi	r6,r1,3196
	addk	r27,r0,r0
$L342:
	lwi	r7,r1,3300
	swi	r24,r1,1052
	swi	r27,r1,1056
	swi	r19,r1,1060
	swi	r7,r1,1064
	or	r3,r24,r27
	beqid	r3,$L329
	swi	r0,r1,1068
	swi	r0,r1,1072
	rsubk	r3,r27,r0
$L361:
	or	r3,r3,r27
	bltid	r3,$L350
	lwi	r5,r1,3204
	bneid	r5,$L331
	addik	r23,r0,2	# 0x2
$L350:
	addk	r23,r0,r0
$L331:
	lwi	r6,r1,3200
	mul	r3,r6,r27
	addik	r27,r27,1
	addk	r23,r23,r3
	addk	r3,r6,r3
	swi	r3,r1,3208
	lwi	r7,r1,3208
$L362:
	cmpu	r18,r7,r23
	bltid	r18,$L341
	lwi	r3,r1,1072
	lwi	r3,r1,3196
	addik	r3,r3,-1
	bneid	r3,$L342
	swi	r3,r1,3196
	brid	$L328
	addik	r24,r24,1
$L329:
	addk	r5,r22,r0
	addik	r3,r0,2	# 0x2
	addik	r4,r0,1	# 0x1
	swi	r3,r1,1072
	brlid	r15,gidx_refresh
	
	swi	r4,r1,1068
	brid	$L361
	rsubk	r3,r27,r0
$L341:
	andi	r3,r3,127 #and1
	bneid	r3,$L365
	lwi	r8,r1,1072
	lwi	r3,r1,1068
	addk	r5,r22,r0
	addik	r3,r3,1
	brlid	r15,gidx_refresh
	
	swi	r3,r1,1068
	lwi	r8,r1,1072
$L365:
	lwi	r28,r1,1060
	lwi	r7,r1,1052
	addik	r3,r8,1
	swi	r3,r1,1072
	andi	r5,r8,127 #and1
	bsrli	r6,r28,2
	lwi	r4,r1,1056
	bneid	r7,$L335
	addik	r3,r0,3	# 0x3
	addk	r3,r4,r0
$L335:
	mul	r3,r6,r3
	addk	r29,r0,r0
	addk	r3,r3,r8
	beqid	r7,$L336
	addik	r9,r3,-1
	addik	r29,r4,1
	andi	r29,r29,3 #and1
	mul	r29,r29,r6
$L336:
	addk	r31,r0,r0
	bslli	r5,r5,3
	lw	r7,r5,r22
	addk	r8,r31,r0
	addk	r6,r31,r0
	addk	r5,r7,r0
	addik	r30,r3,-2
	brlid	r15,__muldi3
	
	swi	r9,r1,3232
	lwi	r9,r1,3232
	addk	r8,r31,r0
	addk	r5,r4,r0
	addk	r7,r9,r0
	brlid	r15,__muldi3
	
	addk	r6,r31,r0
	swi	r4,r1,3212
	swi	r31,r1,3216
	lwi	r6,r1,3212
	lwi	r7,r1,3216
	swi	r29,r1,3220
	swi	r31,r1,3224
	rsub	r4,r6,r30
	rsubc	r5,r7,r31
	lwi	r6,r1,3220
	lwi	r7,r1,3224
	addk	r8,r31,r0
	add	r4,r4,r6
	addc	r5,r5,r7
	addk	r6,r5,r0
	addk	r7,r28,r0
	brlid	r15,__umoddi3
	
	addk	r5,r4,r0
	bneid	r23,$L338
	addik	r6,r23,-1
	lwi	r6,r1,3228
$L338:
	bslli	r28,r23,10
	bslli	r6,r6,10
	bslli	r29,r3,10
	addk	r28,r25,r28
	addk	r6,r25,r6
	addk	r29,r25,r29
	bneid	r24,$L339
	addik	r5,r1,2100
	brlid	r15,copy_block
	nop		# Unfilled delay slot

	addk	r6,r29,r0
	brlid	r15,xor_block
	
	addik	r5,r1,2100
	addk	r5,r28,r0
	brlid	r15,copy_block
	
	addik	r6,r1,2100
$L360:
	brlid	r15,g_rounds
	
	addik	r5,r1,2100
	addk	r5,r28,r0
	addik	r6,r1,2100
	brlid	r15,xor_block
	
	addik	r23,r23,1
	brid	$L362
	lwi	r7,r1,3208
$L339:
	brlid	r15,copy_block
	nop		# Unfilled delay slot

	addk	r6,r29,r0
	brlid	r15,xor_block
	
	addik	r5,r1,2100
	addk	r5,r28,r0
	brlid	r15,xor_block
	
	addik	r6,r1,2100
	bri	$L360
$L346:
	addik	r5,r0,0x00000000
	addik	r4,r0,0x00000000 #li => la
	addk	r3,r25,r3
	swi	r4,r3,0
	swi	r5,r3,4
	brid	$L345
	addik	r22,r22,1
	.end	crypto_argon2i_general
$Lfe77:
	.size	crypto_argon2i_general,$Lfe77-crypto_argon2i_general
	.section	.text.crypto_argon2i,"ax",@progbits
	.align	2
	.globl	crypto_argon2i
	.ent	crypto_argon2i
	.type	crypto_argon2i, @function
crypto_argon2i:
	.frame	r1,56,r15		# vars= 0, regs= 0, args= 52
	.mask	0x00008000
	addik	r1,r1,-56
	lwi	r3,r1,92
	swi	r0,r1,52
	swi	r0,r1,48
	swi	r3,r1,36
	lwi	r3,r1,88
	swi	r0,r1,44
	swi	r0,r1,40
	swi	r3,r1,32
	lwi	r3,r1,84
	swi	r15,r1,0
	brlid	r15,crypto_argon2i_general
	
	swi	r3,r1,28
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,56
	.end	crypto_argon2i
$Lfe78:
	.size	crypto_argon2i,$Lfe78-crypto_argon2i
	.section	.text.crypto_x25519,"ax",@progbits
	.align	2
	.globl	crypto_x25519
	.ent	crypto_x25519
	.type	crypto_x25519, @function
crypto_x25519:
	.frame	r1,360,r15		# vars= 312, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-360
	swi	r22,r1,344
	addk	r22,r6,r0
	addk	r6,r7,r0
	swi	r24,r1,352
	addk	r24,r5,r0
	addik	r5,r1,268
	swi	r19,r1,340
	swi	r15,r1,0
	swi	r23,r1,348
	brlid	r15,fe_frombytes
	
	swi	r25,r1,356
	addik	r19,r0,32	# 0x20
	addk	r3,r0,r0
$L369:
	addik	r5,r1,28
	addk	r4,r5,r3
	lbu	r5,r3,r22
	addik	r19,r19,-1
	addik	r3,r3,1
	bneid	r19,$L369
	sbi	r5,r4,280
	lbui	r3,r1,308
	addik	r5,r1,228
	addik	r22,r0,255	# 0xff
	andi	r3,r3,-8 #and1
	sbi	r3,r1,308
	lbui	r3,r1,339
	addik	r23,r0,254	# 0xfe
	andi	r3,r3,127 #and1
	ori	r3,r3,64
	brlid	r15,fe_1
	
	sbi	r3,r1,339
	brlid	r15,fe_0
	
	addik	r5,r1,188
	addik	r6,r1,268
	brlid	r15,fe_copy
	
	addik	r5,r1,148
	brlid	r15,fe_1
	
	addik	r5,r1,108
$L370:
	addk	r6,r23,r0
	addik	r5,r1,308
	brlid	r15,scalar_bit
	
	addik	r22,r22,-1
	xor	r19,r3,r19
	addk	r7,r19,r0
	addik	r6,r1,148
	addik	r5,r1,228
	brlid	r15,fe_cswap
	
	addk	r25,r3,r0
	addk	r7,r19,r0
	addik	r6,r1,108
	brlid	r15,fe_cswap
	
	addik	r5,r1,188
	addik	r7,r1,108
	addik	r6,r1,148
	brlid	r15,fe_sub
	
	addik	r5,r1,68
	addik	r7,r1,188
	addik	r6,r1,228
	brlid	r15,fe_sub
	
	addik	r5,r1,28
	addik	r6,r1,228
	addk	r5,r6,r0
	addik	r7,r1,188
	brlid	r15,fe_add
	
	addik	r23,r23,-1
	addik	r7,r1,108
	addik	r6,r1,148
	brlid	r15,fe_add
	
	addik	r5,r1,188
	addik	r7,r1,228
	addik	r6,r1,68
	brlid	r15,fe_mul
	
	addik	r5,r1,108
	addik	r6,r1,188
	addk	r5,r6,r0
	addik	r7,r1,28
	brlid	r15,fe_mul
	
	addk	r19,r25,r0
	addik	r6,r1,28
	brlid	r15,fe_sq
	
	addik	r5,r1,68
	addik	r6,r1,228
	brlid	r15,fe_sq
	
	addik	r5,r1,28
	addik	r7,r1,188
	addik	r6,r1,108
	brlid	r15,fe_add
	
	addik	r5,r1,148
	addik	r7,r1,188
	addk	r5,r7,r0
	brlid	r15,fe_sub
	
	addik	r6,r1,108
	addik	r7,r1,68
	addik	r6,r1,28
	brlid	r15,fe_mul
	
	addik	r5,r1,228
	addik	r6,r1,28
	addk	r5,r6,r0
	brlid	r15,fe_sub
	
	addik	r7,r1,68
	addik	r6,r1,188
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addik	r7,r0,121666
	addik	r6,r1,28
	brlid	r15,fe_mul_small
	
	addik	r5,r1,108
	addik	r6,r1,148
	brlid	r15,fe_sq
	
	addk	r5,r6,r0
	addik	r6,r1,68
	addk	r5,r6,r0
	brlid	r15,fe_add
	
	addik	r7,r1,108
	addik	r7,r1,188
	addik	r6,r1,268
	brlid	r15,fe_mul
	
	addik	r5,r1,108
	addik	r7,r1,68
	addik	r6,r1,28
	brlid	r15,fe_mul
	
	addik	r5,r1,188
	bnei	r22,$L370
	addk	r7,r25,r0
	addik	r6,r1,148
	brlid	r15,fe_cswap
	
	addik	r5,r1,228
	addk	r7,r25,r0
	addik	r6,r1,108
	brlid	r15,fe_cswap
	
	addik	r5,r1,188
	addik	r6,r1,188
	brlid	r15,fe_invert
	
	addk	r5,r6,r0
	addik	r6,r1,228
	addk	r5,r6,r0
	brlid	r15,fe_mul
	
	addik	r7,r1,188
	addk	r5,r24,r0
	brlid	r15,fe_tobytes
	
	addik	r6,r1,228
	addik	r5,r1,268
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,308
	brlid	r15,crypto_wipe
	
	addik	r6,r0,32	# 0x20
	addik	r5,r1,228
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,188
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,148
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,108
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r5,r1,68
	brlid	r15,crypto_wipe
	
	addik	r6,r0,40	# 0x28
	addik	r6,r0,40	# 0x28
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,340
	lwi	r22,r1,344
	lwi	r23,r1,348
	lwi	r24,r1,352
	lwi	r25,r1,356
	rtsd	r15,8 
	
	addik	r1,r1,360
	.end	crypto_x25519
$Lfe79:
	.size	crypto_x25519,$Lfe79-crypto_x25519
	.section	.text.crypto_x25519_public_key,"ax",@progbits
	.align	2
	.globl	crypto_x25519_public_key
	.ent	crypto_x25519_public_key
	.type	crypto_x25519_public_key, @function
crypto_x25519_public_key:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r7,r0,base_point.2637
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_x25519
	nop		# Unfilled delay slot

	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_x25519_public_key
$Lfe80:
	.size	crypto_x25519_public_key,$Lfe80-crypto_x25519_public_key
	.section	.text.crypto_sign_public_key_custom_hash,"ax",@progbits
	.align	2
	.globl	crypto_sign_public_key_custom_hash
	.ent	crypto_sign_public_key_custom_hash
	.type	crypto_sign_public_key_custom_hash, @function
crypto_sign_public_key_custom_hash:
	.frame	r1,256,r15		# vars= 224, regs= 1, args= 24
	.mask	0x00088000
	addik	r1,r1,-256
	swi	r15,r1,0
	swi	r19,r1,252
	lwi	r3,r7,0
	addk	r19,r5,r0
	addik	r7,r0,32	# 0x20
	brald	r15,r3
	
	addik	r5,r1,188
	lbui	r3,r1,188
	addik	r6,r1,188
	addik	r5,r1,28
	andi	r3,r3,-8 #and1
	sbi	r3,r1,188
	lbui	r3,r1,219
	andi	r3,r3,127 #and1
	ori	r3,r3,64
	brlid	r15,ge_scalarmult_base
	
	sbi	r3,r1,219
	addk	r5,r19,r0
	brlid	r15,ge_tobytes
	
	addik	r6,r1,28
	addik	r5,r1,188
	brlid	r15,crypto_wipe
	
	addik	r6,r0,64	# 0x40
	addik	r6,r0,160	# 0xa0
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,252
	rtsd	r15,8 
	
	addik	r1,r1,256
	.end	crypto_sign_public_key_custom_hash
$Lfe81:
	.size	crypto_sign_public_key_custom_hash,$Lfe81-crypto_sign_public_key_custom_hash
	.section	.text.crypto_sign_public_key,"ax",@progbits
	.align	2
	.globl	crypto_sign_public_key
	.ent	crypto_sign_public_key
	.type	crypto_sign_public_key, @function
crypto_sign_public_key:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r7,r0,crypto_blake2b_vtable
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_sign_public_key_custom_hash
	nop		# Unfilled delay slot

	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_sign_public_key
$Lfe82:
	.size	crypto_sign_public_key,$Lfe82-crypto_sign_public_key
	.section	.text.crypto_sign_init_first_pass_custom_hash,"ax",@progbits
	.align	2
	.globl	crypto_sign_init_first_pass_custom_hash
	.ent	crypto_sign_init_first_pass_custom_hash
	.type	crypto_sign_init_first_pass_custom_hash, @function
crypto_sign_init_first_pass_custom_hash:
	.frame	r1,44,r15		# vars= 0, regs= 4, args= 24
	.mask	0x01c88000
	addik	r1,r1,-44
	lwi	r3,r8,0
	swi	r19,r1,28
	swi	r22,r1,32
	addk	r19,r5,r0
	swi	r23,r1,36
	swi	r24,r1,40
	swi	r15,r1,0
	swi	r8,r5,0
	addk	r22,r7,r0
	addik	r23,r5,36
	addik	r7,r0,32	# 0x20
	addik	r5,r5,4
	brald	r15,r3
	
	addk	r24,r6,r0
	lbui	r3,r19,4
	andi	r3,r3,-8 #and1
	sbi	r3,r19,4
	lbui	r3,r19,35
	andi	r3,r3,127 #and1
	ori	r3,r3,64
	bneid	r22,$L386
	sbi	r3,r19,35
	lwi	r7,r19,0
	addk	r6,r24,r0
	brlid	r15,crypto_sign_public_key_custom_hash
	
	addik	r5,r19,100
	lwi	r3,r19,0
$L388:
	lwi	r3,r3,4
	brald	r15,r3
	
	addk	r5,r19,r0
	lwi	r3,r19,0
	addk	r6,r23,r0
	addk	r5,r19,r0
	lwi	r3,r3,8
	brald	r15,r3
	
	addik	r7,r0,32	# 0x20
	lwi	r15,r1,0
	lwi	r19,r1,28
	lwi	r22,r1,32
	lwi	r23,r1,36
	lwi	r24,r1,40
	rtsd	r15,8 
	
	addik	r1,r1,44
$L386:
	addik	r4,r0,32	# 0x20
	addk	r3,r0,r0
$L384:
	lbu	r6,r3,r22
	addk	r5,r19,r3
	addik	r4,r4,-1
	sbi	r6,r5,100
	bneid	r4,$L384
	addik	r3,r3,1
	brid	$L388
	lwi	r3,r19,0
	.end	crypto_sign_init_first_pass_custom_hash
$Lfe83:
	.size	crypto_sign_init_first_pass_custom_hash,$Lfe83-crypto_sign_init_first_pass_custom_hash
	.section	.text.crypto_sign_init_first_pass,"ax",@progbits
	.align	2
	.globl	crypto_sign_init_first_pass
	.ent	crypto_sign_init_first_pass
	.type	crypto_sign_init_first_pass, @function
crypto_sign_init_first_pass:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r8,r0,crypto_blake2b_vtable
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_sign_init_first_pass_custom_hash
	nop		# Unfilled delay slot

	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_sign_init_first_pass
$Lfe84:
	.size	crypto_sign_init_first_pass,$Lfe84-crypto_sign_init_first_pass
	.section	.text.crypto_sign_init_second_pass,"ax",@progbits
	.align	2
	.globl	crypto_sign_init_second_pass
	.ent	crypto_sign_init_second_pass
	.type	crypto_sign_init_second_pass, @function
crypto_sign_init_second_pass:
	.frame	r1,200,r15		# vars= 160, regs= 3, args= 24
	.mask	0x00c88000
	addik	r1,r1,-200
	swi	r15,r1,0
	swi	r19,r1,188
	swi	r22,r1,192
	swi	r23,r1,196
	lwi	r3,r5,0
	addik	r22,r5,36
	addk	r6,r22,r0
	lwi	r3,r3,12
	addk	r19,r5,r0
	brald	r15,r3
	
	addik	r23,r5,68
	brlid	r15,reduce
	
	addk	r5,r22,r0
	addk	r6,r22,r0
	brlid	r15,ge_scalarmult_base
	
	addik	r5,r1,28
	addk	r5,r23,r0
	brlid	r15,ge_tobytes
	
	addik	r6,r1,28
	addik	r6,r0,160	# 0xa0
	brlid	r15,crypto_wipe
	
	addik	r5,r1,28
	lwi	r3,r19,0
	lwi	r3,r3,4
	brald	r15,r3
	
	addk	r5,r19,r0
	lwi	r3,r19,0
	addk	r6,r23,r0
	addk	r5,r19,r0
	lwi	r3,r3,8
	brald	r15,r3
	
	addik	r7,r0,32	# 0x20
	lwi	r3,r19,0
	addk	r5,r19,r0
	addik	r6,r19,100
	lwi	r3,r3,8
	brald	r15,r3
	
	addik	r7,r0,32	# 0x20
	lwi	r15,r1,0
	lwi	r19,r1,188
	lwi	r22,r1,192
	lwi	r23,r1,196
	rtsd	r15,8 
	
	addik	r1,r1,200
	.end	crypto_sign_init_second_pass
$Lfe85:
	.size	crypto_sign_init_second_pass,$Lfe85-crypto_sign_init_second_pass
	.section	.text.crypto_sign_final,"ax",@progbits
	.align	2
	.globl	crypto_sign_final
	.ent	crypto_sign_final
	.type	crypto_sign_final, @function
crypto_sign_final:
	.frame	r1,112,r15		# vars= 64, regs= 5, args= 24
	.mask	0x03c88000
	addik	r1,r1,-112
	swi	r15,r1,0
	swi	r19,r1,92
	swi	r22,r1,96
	swi	r23,r1,100
	swi	r24,r1,104
	swi	r25,r1,108
	lwi	r3,r5,0
	addk	r22,r6,r0
	addik	r6,r1,28
	lwi	r3,r3,12
	addk	r19,r5,r0
	addik	r23,r5,4
	addik	r24,r5,36
	brald	r15,r3
	
	addik	r25,r5,68
	brlid	r15,reduce
	
	addik	r5,r1,28
	addik	r4,r0,32	# 0x20
	addk	r3,r0,r0
$L394:
	lbu	r5,r3,r25
	addik	r4,r4,-1
	sb	r5,r3,r22
	bneid	r4,$L394
	addik	r3,r3,1
	addk	r8,r24,r0
	addk	r7,r23,r0
	addik	r6,r1,28
	brlid	r15,mul_add
	
	addik	r5,r22,32
	addik	r5,r1,28
	brlid	r15,crypto_wipe
	
	addik	r6,r0,64	# 0x40
	lwi	r3,r19,0
	addk	r5,r19,r0
	brlid	r15,crypto_wipe
	
	lwi	r6,r3,16
	lwi	r15,r1,0
	lwi	r19,r1,92
	lwi	r22,r1,96
	lwi	r23,r1,100
	lwi	r24,r1,104
	lwi	r25,r1,108
	rtsd	r15,8 
	
	addik	r1,r1,112
	.end	crypto_sign_final
$Lfe86:
	.size	crypto_sign_final,$Lfe86-crypto_sign_final
	.section	.text.crypto_check_init_custom_hash,"ax",@progbits
	.align	2
	.globl	crypto_check_init_custom_hash
	.ent	crypto_check_init_custom_hash
	.type	crypto_check_init_custom_hash, @function
crypto_check_init_custom_hash:
	.frame	r1,40,r15		# vars= 4, regs= 2, args= 24
	.mask	0x00488000
	addik	r1,r1,-40
	swi	r19,r1,32
	swi	r22,r1,36
	addk	r19,r5,r0
	addk	r22,r7,r0
	swi	r15,r1,0
	swi	r8,r5,0
	addik	r3,r0,64	# 0x40
	addk	r4,r0,r0
$L398:
	lbu	r7,r4,r6
	addk	r5,r19,r4
	addik	r3,r3,-1
	sbi	r7,r5,4
	bneid	r3,$L398
	addik	r4,r4,1
	addik	r4,r0,32	# 0x20
$L399:
	lbu	r7,r3,r22
	addk	r5,r19,r3
	addik	r4,r4,-1
	sbi	r7,r5,100
	bneid	r4,$L399
	addik	r3,r3,1
	lwi	r3,r8,4
	addk	r5,r19,r0
	brald	r15,r3
	
	swi	r6,r1,28
	lwi	r3,r19,0
	lwi	r6,r1,28
	addk	r5,r19,r0
	lwi	r3,r3,8
	brald	r15,r3
	
	addik	r7,r0,32	# 0x20
	lwi	r3,r19,0
	addk	r6,r22,r0
	addk	r5,r19,r0
	lwi	r3,r3,8
	brald	r15,r3
	
	addik	r7,r0,32	# 0x20
	lwi	r15,r1,0
	lwi	r19,r1,32
	lwi	r22,r1,36
	rtsd	r15,8 
	
	addik	r1,r1,40
	.end	crypto_check_init_custom_hash
$Lfe87:
	.size	crypto_check_init_custom_hash,$Lfe87-crypto_check_init_custom_hash
	.section	.text.crypto_check_init,"ax",@progbits
	.align	2
	.globl	crypto_check_init
	.ent	crypto_check_init
	.type	crypto_check_init, @function
crypto_check_init:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r8,r0,crypto_blake2b_vtable
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_check_init_custom_hash
	nop		# Unfilled delay slot

	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_check_init
$Lfe88:
	.size	crypto_check_init,$Lfe88-crypto_check_init
	.section	.text.crypto_check_update,"ax",@progbits
	.align	2
	.globl	crypto_check_update
	.ent	crypto_check_update
	.type	crypto_check_update, @function
crypto_check_update:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	lwi	r3,r5,0
	addik	r1,r1,-28
	swi	r15,r1,0
	lwi	r3,r3,8
	brald	r15,r3
	nop		# Unfilled delay slot

	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_check_update
$Lfe89:
	.size	crypto_check_update,$Lfe89-crypto_check_update
	.section	.text.crypto_sign,"ax",@progbits
	.align	2
	.globl	crypto_sign
	.ent	crypto_sign
	.type	crypto_sign, @function
crypto_sign:
	.frame	r1,388,r15		# vars= 348, regs= 3, args= 24
	.mask	0x00c88000
	addik	r1,r1,-388
	swi	r19,r1,376
	swi	r22,r1,380
	addk	r19,r8,r0
	addk	r22,r9,r0
	swi	r23,r1,384
	addk	r23,r5,r0
	swi	r15,r1,0
	brlid	r15,crypto_sign_init_first_pass
	
	addik	r5,r1,28
	addk	r7,r22,r0
	addk	r6,r19,r0
	brlid	r15,crypto_check_update
	
	addik	r5,r1,28
	brlid	r15,crypto_sign_init_second_pass
	
	addik	r5,r1,28
	addk	r7,r22,r0
	addk	r6,r19,r0
	brlid	r15,crypto_check_update
	
	addik	r5,r1,28
	addk	r6,r23,r0
	brlid	r15,crypto_sign_final
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,376
	lwi	r22,r1,380
	lwi	r23,r1,384
	rtsd	r15,8 
	
	addik	r1,r1,388
	.end	crypto_sign
$Lfe90:
	.size	crypto_sign,$Lfe90-crypto_sign
	.section	.text.crypto_sign_update,"ax",@progbits
	.align	2
	.globl	crypto_sign_update
	.ent	crypto_sign_update
	.type	crypto_sign_update, @function
crypto_sign_update:
	.frame	r1,28,r15		# vars= 0, regs= 0, args= 24
	.mask	0x00008000
	addik	r1,r1,-28
	swi	r15,r1,0
	brlid	r15,crypto_check_update
	nop		# Unfilled delay slot

	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,28
	.end	crypto_sign_update
$Lfe91:
	.size	crypto_sign_update,$Lfe91-crypto_sign_update
	.section	.text.crypto_check_final,"ax",@progbits
	.align	2
	.globl	crypto_check_final
	.ent	crypto_check_final
	.type	crypto_check_final, @function
crypto_check_final:
	.frame	r1,980,r15		# vars= 916, regs= 8, args= 28
	.mask	0x1fc88000
	addik	r1,r1,-980
	swi	r25,r1,964
	addik	r25,r5,100
	addk	r6,r25,r0
	swi	r19,r1,948
	swi	r26,r1,968
	swi	r27,r1,972
	addk	r19,r5,r0
	addik	r27,r5,4
	addik	r26,r5,36
	addik	r5,r1,712
	swi	r15,r1,0
	swi	r23,r1,956
	swi	r22,r1,952
	swi	r24,r1,960
	brlid	r15,fe_frombytes
	
	swi	r28,r1,976
	brlid	r15,fe_1
	
	addik	r5,r1,752
	addik	r6,r1,712
	addik	r5,r1,872
	brlid	r15,fe_sq
	
	addik	r23,r1,832
	addik	r7,r0,d.2729
	addk	r5,r23,r0
	brlid	r15,fe_mul
	
	addik	r6,r1,872
	addik	r6,r1,872
	addk	r5,r6,r0
	brlid	r15,fe_sub
	
	addik	r7,r1,752
	addk	r6,r23,r0
	addk	r5,r23,r0
	brlid	r15,fe_add
	
	addik	r7,r1,752
	addk	r6,r23,r0
	brlid	r15,fe_sq
	
	addik	r5,r1,512
	addik	r6,r1,512
	addk	r7,r23,r0
	brlid	r15,fe_mul
	
	addk	r5,r6,r0
	addik	r6,r1,512
	brlid	r15,fe_sq
	
	addik	r5,r1,672
	addik	r6,r1,672
	addk	r5,r6,r0
	brlid	r15,fe_mul
	
	addk	r7,r23,r0
	addik	r6,r1,672
	addk	r5,r6,r0
	brlid	r15,fe_mul
	
	addik	r7,r1,872
	addik	r6,r1,672
	brlid	r15,fe_pow22523
	
	addk	r5,r6,r0
	addik	r6,r1,672
	addk	r5,r6,r0
	brlid	r15,fe_mul
	
	addik	r7,r1,512
	addik	r6,r1,672
	addk	r5,r6,r0
	brlid	r15,fe_mul
	
	addik	r7,r1,872
	addik	r6,r1,672
	brlid	r15,fe_sq
	
	addik	r5,r1,352
	addik	r6,r1,352
	addk	r5,r6,r0
	brlid	r15,fe_mul
	
	addk	r7,r23,r0
	addik	r5,r1,32
	addik	r7,r1,872
	brlid	r15,fe_sub
	
	addik	r6,r1,352
	brlid	r15,fe_isnonzero
	
	addik	r5,r1,32
	beqid	r3,$L447
	addik	r6,r1,672
	addik	r7,r1,872
	addik	r6,r1,352
	brlid	r15,fe_add
	
	addik	r5,r1,32
	brlid	r15,fe_isnonzero
	
	addik	r5,r1,32
	bneid	r3,$L411
	addik	r4,r0,-1	# 0xffffffffffffffff
	addik	r6,r1,672
	addik	r7,r0,sqrtm1.2730
	brlid	r15,fe_mul
	
	addk	r5,r6,r0
	addik	r6,r1,672
$L447:
	brlid	r15,fe_tobytes
	
	addik	r5,r1,912
	lbui	r3,r1,912
	addik	r6,r0,32	# 0x20
	addik	r5,r1,912
	brlid	r15,crypto_wipe
	
	andi	r22,r3,1 #and1
	lbui	r3,r19,131
	bsrli	r3,r3,7
	xor	r3,r3,r22
	bneid	r3,$L448
	addik	r5,r1,792
	addik	r6,r1,672
	brlid	r15,fe_neg
	
	addk	r5,r6,r0
	addik	r5,r1,792
$L448:
	addik	r7,r1,712
	brlid	r15,fe_mul
	
	addik	r6,r1,672
	addik	r5,r0,32	# 0x20
	addik	r3,r0,31	# 0x1f
$L419:
	bslli	r4,r3,3
	addik	r4,r4,L
	lwi	r7,r4,0
	lwi	r4,r4,4
	bltid	r4,$L428
	lbu	r6,r3,r26
	bnei	r4,$L429
	cmpu	r18,r6,r7
	bgei	r18,$L443
$L428:
	brid	$L411
	addik	r4,r0,-1	# 0xffffffffffffffff
$L429:
	bgti	r4,$L417
	bneid	r4,$L449
	addik	r5,r5,-1
	addik	r5,r5,1
$L443:
	cmpu	r18,r7,r6
	blti	r18,$L417
	addik	r5,r5,-1
$L449:
	bneid	r5,$L419
	addik	r3,r3,-1
	brid	$L411
	addik	r4,r0,-1	# 0xffffffffffffffff
$L423:
	beqid	r28,$L424
	bsrli	r19,r28,31
	addk	r19,r19,r28
	sra	r19,r19
	muli	r19,r19,-160
	addik	r3,r1,32
	addk	r6,r3,r19
	brlid	r15,fe_copy
	
	addik	r5,r1,392
	addik	r3,r1,32
	addik	r6,r19,40
	addk	r6,r3,r6
	brlid	r15,fe_copy
	
	addik	r5,r1,352
	addik	r3,r1,32
	addik	r6,r19,80
	addk	r6,r3,r6
	brlid	r15,fe_copy
	
	addik	r5,r1,432
	addik	r3,r1,32
	addik	r6,r19,120
	addk	r6,r3,r6
	brlid	r15,fe_neg
	
	addik	r5,r1,472
	brid	$L445
	addik	r7,r1,352
$L425:
	beqid	r22,$L426
	bsrli	r3,r22,31
	addk	r22,r3,r22
	sra	r22,r22
	muli	r22,r22,-40
	addik	r6,r22,window_T2
	brlid	r15,fe_neg
	
	addik	r5,r1,352
	addik	r10,r1,872
	swi	r23,r1,28
	addik	r8,r22,window_Yp
	addik	r7,r22,window_Ym
	brid	$L446
	addik	r9,r1,352
$L417:
	lwi	r3,r19,0
	addk	r5,r19,r0
	lwi	r3,r3,12
	brald	r15,r3
	
	addik	r6,r1,32
	brlid	r15,reduce
	
	addik	r5,r1,32
	addik	r4,r0,32	# 0x20
	addk	r3,r0,r0
$L420:
	addk	r5,r1,r3
	lbui	r5,r5,32
	addik	r4,r4,-1
	sb	r5,r3,r25
	bneid	r4,$L420
	addik	r3,r3,1
	addik	r7,r1,352
	addik	r6,r1,672
	brlid	r15,ge_double
	
	addik	r5,r1,512
	addik	r6,r1,672
	brlid	r15,ge_cache
	
	addik	r5,r1,32
	addik	r7,r1,32
	addik	r6,r1,512
	brlid	r15,ge_add
	
	addik	r5,r1,352
	addik	r6,r1,352
	brlid	r15,ge_cache
	
	addik	r5,r1,192
	addk	r6,r25,r0
	brlid	r15,slide_init
	
	addik	r5,r1,944
	addk	r6,r26,r0
	brlid	r15,slide_init
	
	addik	r5,r1,912
	lbui	r3,r1,947
	lbui	r24,r1,915
	cmpu	r18,r24,r3
	blti	r18,$L422
	addk	r24,r3,r0
$L422:
	brlid	r15,ge_zero
	
	addik	r5,r1,672
	addik	r6,r1,672
$L450:
	addk	r5,r6,r0
	brlid	r15,ge_double
	
	addik	r7,r1,512
	addk	r8,r25,r0
	addk	r7,r24,r0
	addik	r6,r0,3	# 0x3
	brlid	r15,slide_step
	
	addik	r5,r1,944
	addk	r8,r26,r0
	addk	r7,r24,r0
	addk	r28,r3,r0
	addik	r6,r0,5	# 0x5
	brlid	r15,slide_step
	
	addik	r5,r1,912
	bleid	r28,$L423
	addk	r22,r3,r0
	sra	r19,r28
	muli	r7,r19,160
	addik	r3,r1,32
	addk	r7,r3,r7
$L445:
	addik	r6,r1,672
	brlid	r15,ge_add
	
	addk	r5,r6,r0
$L424:
	bleid	r22,$L425
	sra	r7,r22
	muli	r7,r7,40
	swi	r23,r1,28
	addik	r9,r7,window_T2
	addik	r8,r7,window_Ym
	addik	r10,r1,872
	addik	r7,r7,window_Yp
$L446:
	addik	r6,r1,672
	brlid	r15,ge_madd
	
	addk	r5,r6,r0
$L426:
	addik	r24,r24,-1
	xori	r3,r24,-1
	bneid	r3,$L450
	addik	r6,r1,672
	addk	r5,r25,r0
	brlid	r15,ge_tobytes
	
	addik	r6,r1,672
	addk	r6,r25,r0
	brlid	r15,crypto_verify32
	
	addk	r5,r27,r0
	addk	r4,r3,r0
$L411:
	addk	r3,r4,r0
	lwi	r15,r1,0
	lwi	r19,r1,948
	lwi	r22,r1,952
	lwi	r23,r1,956
	lwi	r24,r1,960
	lwi	r25,r1,964
	lwi	r26,r1,968
	lwi	r27,r1,972
	lwi	r28,r1,976
	rtsd	r15,8 
	
	addik	r1,r1,980
	.end	crypto_check_final
$Lfe92:
	.size	crypto_check_final,$Lfe92-crypto_check_final
	.section	.text.crypto_check,"ax",@progbits
	.align	2
	.globl	crypto_check
	.ent	crypto_check
	.type	crypto_check, @function
crypto_check:
	.frame	r1,384,r15		# vars= 348, regs= 2, args= 24
	.mask	0x00488000
	addik	r1,r1,-384
	swi	r19,r1,376
	addk	r19,r7,r0
	addk	r7,r6,r0
	addk	r6,r5,r0
	swi	r22,r1,380
	addk	r22,r8,r0
	swi	r15,r1,0
	brlid	r15,crypto_check_init
	
	addik	r5,r1,28
	addk	r7,r22,r0
	addk	r6,r19,r0
	brlid	r15,crypto_check_update
	
	addik	r5,r1,28
	brlid	r15,crypto_check_final
	
	addik	r5,r1,28
	lwi	r15,r1,0
	lwi	r19,r1,376
	lwi	r22,r1,380
	rtsd	r15,8 
	
	addik	r1,r1,384
	.end	crypto_check
$Lfe93:
	.size	crypto_check,$Lfe93-crypto_check
	.section	.text.crypto_key_exchange,"ax",@progbits
	.align	2
	.globl	crypto_key_exchange
	.ent	crypto_key_exchange
	.type	crypto_key_exchange, @function
crypto_key_exchange:
	.frame	r1,32,r15		# vars= 0, regs= 1, args= 24
	.mask	0x00088000
	addik	r1,r1,-32
	swi	r19,r1,28
	swi	r15,r1,0
	brlid	r15,crypto_x25519
	
	addk	r19,r5,r0
	addk	r6,r19,r0
	addik	r7,r0,zero
	brlid	r15,crypto_hchacha20
	
	addk	r5,r19,r0
	lwi	r15,r1,0
	lwi	r19,r1,28
	rtsd	r15,8 
	
	addik	r1,r1,32
	.end	crypto_key_exchange
$Lfe94:
	.size	crypto_key_exchange,$Lfe94-crypto_key_exchange
	.section	.text.crypto_lock_aead,"ax",@progbits
	.align	2
	.globl	crypto_lock_aead
	.ent	crypto_lock_aead
	.type	crypto_lock_aead, @function
crypto_lock_aead:
	.frame	r1,148,r15		# vars= 96, regs= 5, args= 28
	.mask	0x03c88000
	addik	r1,r1,-148
	swi	r19,r1,128
	swi	r22,r1,132
	addk	r19,r8,r0
	addk	r22,r6,r0
	addk	r6,r7,r0
	addk	r7,r8,r0
	swi	r23,r1,136
	addk	r23,r5,r0
	addik	r5,r1,96
	swi	r15,r1,0
	swi	r24,r1,140
	swi	r25,r1,144
	addk	r24,r9,r0
	addk	r25,r10,r0
	brlid	r15,crypto_hchacha20
	
	addik	r19,r19,16
	addk	r9,r19,r0
	addik	r8,r1,96
	addik	r5,r1,32
	addik	r7,r0,64	# 0x40
	brlid	r15,crypto_chacha20
	
	addk	r6,r0,r0
	addk	r9,r19,r0
	lwi	r7,r1,180
	lwi	r6,r1,176
	addk	r5,r22,r0
	addik	r8,r1,96
	swi	r0,r1,28
	brlid	r15,crypto_chacha20_ctr
	
	addik	r10,r0,1	# 0x1
	addk	r9,r22,r0
	addk	r8,r25,r0
	addk	r7,r24,r0
	lwi	r10,r1,180
	addk	r5,r23,r0
	brlid	r15,lock_auth
	
	addik	r6,r1,32
	addik	r5,r1,96
	brlid	r15,crypto_wipe
	
	addik	r6,r0,32	# 0x20
	addik	r6,r0,64	# 0x40
	brlid	r15,crypto_wipe
	
	addik	r5,r1,32
	lwi	r15,r1,0
	lwi	r19,r1,128
	lwi	r22,r1,132
	lwi	r23,r1,136
	lwi	r24,r1,140
	lwi	r25,r1,144
	rtsd	r15,8 
	
	addik	r1,r1,148
	.end	crypto_lock_aead
$Lfe95:
	.size	crypto_lock_aead,$Lfe95-crypto_lock_aead
	.section	.text.crypto_unlock_aead,"ax",@progbits
	.align	2
	.globl	crypto_unlock_aead
	.ent	crypto_unlock_aead
	.type	crypto_unlock_aead, @function
crypto_unlock_aead:
	.frame	r1,164,r15		# vars= 112, regs= 5, args= 28
	.mask	0x03c88000
	addik	r1,r1,-164
	swi	r22,r1,148
	addk	r22,r7,r0
	swi	r23,r1,152
	addk	r23,r5,r0
	addik	r5,r1,96
	swi	r15,r1,0
	swi	r19,r1,144
	swi	r24,r1,156
	swi	r25,r1,160
	addk	r19,r8,r0
	addk	r25,r10,r0
	addk	r24,r9,r0
	brlid	r15,crypto_hchacha20
	
	addik	r22,r22,16
	addk	r9,r22,r0
	addik	r8,r1,96
	addik	r7,r0,64	# 0x40
	addk	r6,r0,r0
	brlid	r15,crypto_chacha20
	
	addik	r5,r1,32
	lwi	r10,r1,196
	lwi	r9,r1,192
	addk	r8,r25,r0
	addk	r7,r24,r0
	addik	r6,r1,32
	brlid	r15,lock_auth
	
	addik	r5,r1,128
	addik	r6,r0,64	# 0x40
	brlid	r15,crypto_wipe
	
	addik	r5,r1,32
	addk	r5,r19,r0
	brlid	r15,crypto_verify16
	
	addik	r6,r1,128
	beqid	r3,$L458
	addk	r9,r22,r0
	addik	r6,r0,32	# 0x20
	brlid	r15,crypto_wipe
	
	addik	r5,r1,96
	addik	r6,r0,16	# 0x10
	brlid	r15,crypto_wipe
	
	addik	r5,r1,128
	addik	r19,r0,-1	# 0xffffffffffffffff
	addk	r3,r19,r0
$L461:
	lwi	r15,r1,0
	lwi	r19,r1,144
	lwi	r22,r1,148
	lwi	r23,r1,152
	lwi	r24,r1,156
	lwi	r25,r1,160
	rtsd	r15,8 
	
	addik	r1,r1,164
$L458:
	lwi	r7,r1,196
	lwi	r6,r1,192
	addk	r5,r23,r0
	addik	r10,r0,1	# 0x1
	addik	r8,r1,96
	swi	r3,r1,28
	brlid	r15,crypto_chacha20_ctr
	
	addk	r19,r3,r0
	addik	r5,r1,96
	brlid	r15,crypto_wipe
	
	addik	r6,r0,32	# 0x20
	addik	r6,r0,16	# 0x10
	brlid	r15,crypto_wipe
	
	addik	r5,r1,128
	brid	$L461
	addk	r3,r19,r0
	.end	crypto_unlock_aead
$Lfe96:
	.size	crypto_unlock_aead,$Lfe96-crypto_unlock_aead
	.section	.text.crypto_lock,"ax",@progbits
	.align	2
	.globl	crypto_lock
	.ent	crypto_lock
	.type	crypto_lock, @function
crypto_lock:
	.frame	r1,36,r15		# vars= 0, regs= 0, args= 32
	.mask	0x00008000
	addik	r1,r1,-36
	swi	r10,r1,32
	addk	r10,r0,r0
	swi	r9,r1,28
	swi	r15,r1,0
	brlid	r15,crypto_lock_aead
	
	addk	r9,r10,r0
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,36
	.end	crypto_lock
$Lfe97:
	.size	crypto_lock,$Lfe97-crypto_lock
	.section	.text.crypto_unlock,"ax",@progbits
	.align	2
	.globl	crypto_unlock
	.ent	crypto_unlock
	.type	crypto_unlock, @function
crypto_unlock:
	.frame	r1,36,r15		# vars= 0, regs= 0, args= 32
	.mask	0x00008000
	addik	r1,r1,-36
	swi	r10,r1,32
	addk	r10,r0,r0
	swi	r9,r1,28
	swi	r15,r1,0
	brlid	r15,crypto_unlock_aead
	
	addk	r9,r10,r0
	lwi	r15,r1,0
	rtsd	r15,8 
	
	addik	r1,r1,36
	.end	crypto_unlock
$Lfe98:
	.size	crypto_unlock,$Lfe98-crypto_unlock
	.section	.rodata.D2.2740,"a",@progbits
	.align	2
	.type	D2.2740,@object
	.size	D2.2740,40
D2.2740:
	.long	-21827239
	.long	-5839606
	.long	-30745221
	.long	13898782
	.long	229458
	.long	15978800
	.long	-12551817
	.long	-6495438
	.long	29715968
	.long	9444199
	.section	.rodata.sqrtm1.2730,"a",@progbits
	.align	2
	.type	sqrtm1.2730,@object
	.size	sqrtm1.2730,40
sqrtm1.2730:
	.long	-32595792
	.long	-7943725
	.long	9377950
	.long	3500415
	.long	12389472
	.long	-272473
	.long	-25146209
	.long	-2005654
	.long	326686
	.long	11406482
	.section	.rodata.d.2729,"a",@progbits
	.align	2
	.type	d.2729,@object
	.size	d.2729,40
d.2729:
	.long	-10913610
	.long	13857413
	.long	-15372611
	.long	6949391
	.long	114729
	.long	-8787816
	.long	-6275908
	.long	-3247719
	.long	-18696448
	.long	-12055116
	.section	.rodata.half_ones.2840,"a",@progbits
	.align	2
	.type	half_ones.2840,@object
	.size	half_ones.2840,32
half_ones.2840:
	.byte	66
	.byte	-102
	.byte	-93
	.byte	-70
	.byte	35
	.byte	-91
	.byte	-65
	.byte	-53
	.byte	17
	.byte	91
	.byte	-99
	.byte	-59
	.byte	116
	.byte	-107
	.byte	-13
	.byte	-74
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	7
	.section	.rodata.half_mod_L.2839,"a",@progbits
	.align	2
	.type	half_mod_L.2839,@object
	.size	half_mod_L.2839,32
half_mod_L.2839:
	.byte	-9
	.byte	-23
	.byte	122
	.byte	46
	.byte	-115
	.byte	49
	.byte	9
	.byte	44
	.byte	107
	.byte	-50
	.byte	123
	.byte	81
	.byte	-17
	.byte	124
	.byte	111
	.byte	10
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.section	.rodata.base_point.2637,"a",@progbits
	.align	2
	.type	base_point.2637,@object
	.size	base_point.2637,32
base_point.2637:
	.byte	9
	.space	31
	.section	.rodata.comb_T2,"a",@progbits
	.align	2
	.type	comb_T2,@object
	.size	comb_T2,640
comb_T2:
	.long	-18494317
	.long	2686822
	.long	18449263
	.long	-13905325
	.long	5966562
	.long	-3368714
	.long	2738304
	.long	-8583315
	.long	15987143
	.long	12180258
	.long	-33336513
	.long	-13705917
	.long	-18473364
	.long	-5039204
	.long	-4268481
	.long	-4136039
	.long	-8192211
	.long	-2935105
	.long	-19354402
	.long	5995895
	.long	-19753139
	.long	-1729018
	.long	21880604
	.long	13471713
	.long	28315373
	.long	-8530159
	.long	-17492688
	.long	11730577
	.long	-8790216
	.long	3942124
	.long	17278020
	.long	3905045
	.long	29577748
	.long	11151940
	.long	18451761
	.long	-6801382
	.long	31480073
	.long	-13819665
	.long	26308905
	.long	10868496
	.long	26937294
	.long	3313561
	.long	28601532
	.long	-3497112
	.long	-22814130
	.long	11073654
	.long	8956359
	.long	-16757370
	.long	13465868
	.long	16623983
	.long	-5468054
	.long	6059101
	.long	-31275300
	.long	2469124
	.long	26532937
	.long	8152142
	.long	6423741
	.long	-11427054
	.long	-15537747
	.long	-10938247
	.long	-11303505
	.long	-9659620
	.long	-12354748
	.long	-9331434
	.long	19501116
	.long	-9146390
	.long	-841918
	.long	-5315657
	.long	8903828
	.long	8839982
	.long	16603354
	.long	-215859
	.long	1591180
	.long	3775832
	.long	-705596
	.long	-13913449
	.long	26574704
	.long	14963118
	.long	19649719
	.long	6562441
	.long	33188866
	.long	-12232360
	.long	-24929148
	.long	-6133828
	.long	21818432
	.long	11040754
	.long	-3041582
	.long	-3524558
	.long	-29364727
	.long	-10264096
	.long	-20704194
	.long	-12560423
	.long	-1235774
	.long	-785473
	.long	13240395
	.long	4831780
	.long	-472624
	.long	-3796899
	.long	25480903
	.long	-15422283
	.long	-2204347
	.long	-16313180
	.long	-21388048
	.long	7520851
	.long	-8697745
	.long	-14460961
	.long	20894017
	.long	12210317
	.long	-475249
	.long	-2319102
	.long	-16407882
	.long	4940236
	.long	-21194947
	.long	10781753
	.long	22248400
	.long	14425368
	.long	14866511
	.long	-7552907
	.long	12148703
	.long	-7885797
	.long	16376744
	.long	15908865
	.long	-30663553
	.long	4663134
	.long	-30882819
	.long	-10105163
	.long	19294784
	.long	-10800440
	.long	-33259252
	.long	2563437
	.long	30208741
	.long	11594088
	.long	-15145888
	.long	15073872
	.long	5279309
	.long	-9651774
	.long	8273234
	.long	4796404
	.long	-31270809
	.long	-13316433
	.long	-17802574
	.long	14455251
	.long	27149077
	.long	-7832700
	.long	-29163160
	.long	-7246767
	.long	17498491
	.long	-4216079
	.long	31788733
	.long	-14027536
	.long	-25233439
	.long	-9389070
	.long	-6618212
	.long	-3268087
	.long	-521386
	.long	-7350198
	.long	21035059
	.long	-14970947
	.long	25910190
	.long	11122681
	.section	.rodata.comb_Ym,"a",@progbits
	.align	2
	.type	comb_Ym,@object
	.size	comb_Ym,640
comb_Ym:
	.long	8873912
	.long	14981221
	.long	13714139
	.long	6923085
	.long	25481101
	.long	4243739
	.long	4646647
	.long	-203847
	.long	9015725
	.long	-16205935
	.long	-1827892
	.long	15407265
	.long	2351140
	.long	-11810728
	.long	28403158
	.long	-1487103
	.long	-15057287
	.long	-4656433
	.long	-3780118
	.long	-1145998
	.long	-30623162
	.long	-11845055
	.long	-11327147
	.long	-16008347
	.long	17564978
	.long	-1449578
	.long	-20580262
	.long	14113978
	.long	29643661
	.long	15580734
	.long	-15109423
	.long	13348938
	.long	-14756006
	.long	14132355
	.long	30481360
	.long	1830723
	.long	-240510
	.long	9371801
	.long	-13907882
	.long	8024264
	.long	25119567
	.long	5628696
	.long	10185251
	.long	-9279452
	.long	683770
	.long	-14523112
	.long	-7982879
	.long	-16450545
	.long	1431333
	.long	-13253541
	.long	-8390493
	.long	1276691
	.long	19008763
	.long	-12736675
	.long	-9249429
	.long	-12526388
	.long	17434195
	.long	-13761261
	.long	18962694
	.long	-1227728
	.long	26361856
	.long	-12366343
	.long	8941415
	.long	15163068
	.long	7069802
	.long	-7240693
	.long	-18656349
	.long	8167008
	.long	31106064
	.long	-1670658
	.long	-5677136
	.long	-11012483
	.long	-1246680
	.long	-6422709
	.long	14772010
	.long	1829629
	.long	-11724154
	.long	-15914279
	.long	-18177362
	.long	1301444
	.long	937094
	.long	12383516
	.long	-22597284
	.long	7580462
	.long	-18767748
	.long	13813292
	.long	-2323566
	.long	13503298
	.long	11510849
	.long	-10561992
	.long	28028043
	.long	14715827
	.long	-6558532
	.long	-1773240
	.long	27563607
	.long	-9374554
	.long	3201863
	.long	8865591
	.long	-16953001
	.long	7659464
	.long	13628467
	.long	5701368
	.long	4674031
	.long	11935670
	.long	11461401
	.long	10699118
	.long	31846435
	.long	-114971
	.long	-8269924
	.long	-14777505
	.long	-22124018
	.long	-12859127
	.long	11966893
	.long	1617732
	.long	30972446
	.long	-14350095
	.long	-21822286
	.long	8369862
	.long	-29443219
	.long	-15378798
	.long	290131
	.long	-471434
	.long	8840522
	.long	-2654851
	.long	25963762
	.long	-11578288
	.long	-7227978
	.long	13847103
	.long	30641797
	.long	6003514
	.long	-23547482
	.long	-11475166
	.long	-11913550
	.long	9374455
	.long	22813401
	.long	-5707910
	.long	26635288
	.long	9199956
	.long	20574690
	.long	2061147
	.long	9715324
	.long	7036821
	.long	-17981446
	.long	-11505533
	.long	26555178
	.long	-3571571
	.long	5697062
	.long	-14128022
	.long	2795223
	.long	9694380
	.long	14864569
	.long	-6319076
	.long	-3080
	.long	-8151104
	.long	4994948
	.long	-1572144
	.long	-41927
	.long	9269803
	.long	13881712
	.long	-13439497
	.section	.rodata.comb_Yp,"a",@progbits
	.align	2
	.type	comb_Yp,@object
	.size	comb_Yp,640
comb_Yp:
	.long	2615675
	.long	9989699
	.long	17617367
	.long	-13953520
	.long	-8802803
	.long	1447286
	.long	-8909978
	.long	-270892
	.long	-12199203
	.long	-11617247
	.long	-1271192
	.long	4785266
	.long	-29856067
	.long	-6036322
	.long	-10435381
	.long	15493337
	.long	20321440
	.long	-6036064
	.long	15902131
	.long	13420909
	.long	-26170888
	.long	-12891603
	.long	9568996
	.long	-6197816
	.long	26424622
	.long	16308973
	.long	-4518568
	.long	-3771275
	.long	-15522557
	.long	3991142
	.long	-25875044
	.long	1958396
	.long	19442242
	.long	-9809943
	.long	-26099408
	.long	-18589
	.long	-30794750
	.long	-14100910
	.long	4971028
	.long	-10535388
	.long	-13896937
	.long	-7357727
	.long	-12131124
	.long	617289
	.long	-33188817
	.long	10080542
	.long	6402555
	.long	10779157
	.long	1176712
	.long	2472642
	.long	71503
	.long	12662254
	.long	-17008072
	.long	-8370006
	.long	23408384
	.long	-12897959
	.long	32287612
	.long	11241906
	.long	-16724175
	.long	15336924
	.long	27397666
	.long	4059848
	.long	23573959
	.long	8868915
	.long	-10602416
	.long	-10456346
	.long	-22812831
	.long	-9666299
	.long	31810345
	.long	-2695469
	.long	-3418193
	.long	-694531
	.long	2320482
	.long	-11850408
	.long	-1981947
	.long	-9606132
	.long	23743894
	.long	3933038
	.long	-25004889
	.long	-4478918
	.long	-4448372
	.long	5537982
	.long	-4805580
	.long	14016777
	.long	15544316
	.long	16039459
	.long	-7143453
	.long	-8003716
	.long	-21904564
	.long	8443777
	.long	32495180
	.long	15749868
	.long	2195406
	.long	-15542321
	.long	-3213890
	.long	-4030779
	.long	-2915317
	.long	12751449
	.long	-1872493
	.long	11926798
	.long	26779741
	.long	12553580
	.long	-24344000
	.long	-4071926
	.long	-19447556
	.long	-13464636
	.long	21989468
	.long	7826656
	.long	-17344881
	.long	10055954
	.long	5848288
	.long	-1639207
	.long	-10452929
	.long	-11760637
	.long	6484174
	.long	-5895268
	.long	-11561603
	.long	587105
	.long	-19220796
	.long	14378222
	.long	32050187
	.long	12536702
	.long	9206308
	.long	-10016828
	.long	-13333241
	.long	-4276403
	.long	-24225594
	.long	14562479
	.long	-31803624
	.long	-9967812
	.long	23536033
	.long	-6219361
	.long	199701
	.long	4574817
	.long	30045793
	.long	7163081
	.long	-2244033
	.long	883497
	.long	10960746
	.long	-14779481
	.long	-8143354
	.long	-11558749
	.long	15772067
	.long	14293390
	.long	5914956
	.long	-16702904
	.long	-7410985
	.long	7536196
	.long	6155087
	.long	16571424
	.long	6211591
	.long	-11166015
	.long	24568352
	.long	2768318
	.long	-10822221
	.long	11922793
	.long	33211827
	.long	3852290
	.long	-13160369
	.long	-8855385
	.section	.rodata.window_T2,"a",@progbits
	.align	2
	.type	window_T2,@object
	.size	window_T2,320
window_T2:
	.long	-8738181
	.long	4489570
	.long	9688441
	.long	-14785194
	.long	10184609
	.long	-12363380
	.long	29287919
	.long	11864899
	.long	-24514362
	.long	-4438546
	.long	30464156
	.long	-5976125
	.long	-11779434
	.long	-15670865
	.long	23220365
	.long	15915852
	.long	7512774
	.long	10017326
	.long	-17749093
	.long	-9920357
	.long	19563160
	.long	16186464
	.long	-29386857
	.long	4097519
	.long	10237984
	.long	-4348115
	.long	28542350
	.long	13850243
	.long	-23678021
	.long	-15815942
	.long	28881845
	.long	14381568
	.long	9657904
	.long	3680757
	.long	-20181635
	.long	7843316
	.long	-31400660
	.long	1370708
	.long	29794553
	.long	-1409300
	.long	4566830
	.long	-12963868
	.long	-28974889
	.long	-12240689
	.long	-7602672
	.long	-2830569
	.long	-8514358
	.long	-10431137
	.long	2207753
	.long	-3209784
	.long	23103977
	.long	13316479
	.long	9739013
	.long	-16149481
	.long	817875
	.long	-15038942
	.long	8965339
	.long	-14088058
	.long	-30714912
	.long	16193877
	.long	-13720693
	.long	2639453
	.long	-24237460
	.long	-7406481
	.long	9494427
	.long	-5774029
	.long	-6554551
	.long	-15960994
	.long	-2449256
	.long	-14291300
	.long	-3099351
	.long	10324967
	.long	-2241613
	.long	7453183
	.long	-5446979
	.long	-2735503
	.long	-13812022
	.long	-16236442
	.long	-32461234
	.long	-12290683
	.section	.rodata.window_Ym,"a",@progbits
	.align	2
	.type	window_Ym,@object
	.size	window_Ym,320
window_Ym:
	.long	-12545711
	.long	934262
	.long	-2722910
	.long	3049990
	.long	-727428
	.long	9406986
	.long	12720692
	.long	5043384
	.long	19500929
	.long	-15469378
	.long	16568933
	.long	4717097
	.long	-11556148
	.long	-1102322
	.long	15682896
	.long	-11807043
	.long	16354577
	.long	-11775962
	.long	7689662
	.long	11199574
	.long	4708026
	.long	6336745
	.long	20377586
	.long	9066809
	.long	-11272109
	.long	6594696
	.long	-25653668
	.long	12483688
	.long	-12668491
	.long	5581306
	.long	-30269007
	.long	-3463509
	.long	7665486
	.long	10083793
	.long	28475525
	.long	1649722
	.long	20654025
	.long	16520125
	.long	30598449
	.long	7715701
	.long	-6455177
	.long	-7839871
	.long	3374702
	.long	-4740862
	.long	-27098617
	.long	-10571707
	.long	31655028
	.long	-7212327
	.long	18853322
	.long	-14220951
	.long	25576264
	.long	-2703214
	.long	7349804
	.long	-11814844
	.long	16472782
	.long	9300885
	.long	3844789
	.long	15725684
	.long	171356
	.long	6466918
	.long	-25182317
	.long	-4174131
	.long	32336398
	.long	5036987
	.long	-21236817
	.long	11360617
	.long	22616405
	.long	9761698
	.long	-19827198
	.long	630305
	.long	-24326370
	.long	15950226
	.long	-31801215
	.long	-14592823
	.long	-11662737
	.long	-5090925
	.long	1573892
	.long	-2625887
	.long	2198790
	.long	-15804619
	.section	.rodata.window_Yp,"a",@progbits
	.align	2
	.type	window_Yp,@object
	.size	window_Yp,320
window_Yp:
	.long	25967493
	.long	-14356035
	.long	29566456
	.long	3660896
	.long	-12694345
	.long	4014787
	.long	27544626
	.long	-11754271
	.long	-6079156
	.long	2047605
	.long	15636291
	.long	-9688557
	.long	24204773
	.long	-7912398
	.long	616977
	.long	-16685262
	.long	27787600
	.long	-14772189
	.long	28944400
	.long	-1550024
	.long	10861363
	.long	11473154
	.long	27284546
	.long	1981175
	.long	-30064349
	.long	12577861
	.long	32867885
	.long	14515107
	.long	-15438304
	.long	10819380
	.long	5153746
	.long	9909285
	.long	1723747
	.long	-2777874
	.long	30523605
	.long	5516873
	.long	19480852
	.long	5230134
	.long	-23952439
	.long	-15175766
	.long	-22518993
	.long	-6692182
	.long	14201702
	.long	-8745502
	.long	-23510406
	.long	8844726
	.long	18474211
	.long	-1361450
	.long	-13062696
	.long	13821877
	.long	-25154831
	.long	-4185821
	.long	29681144
	.long	7868801
	.long	-6854661
	.long	-9423865
	.long	-12437364
	.long	-663000
	.long	-31111463
	.long	-16132436
	.long	-33521811
	.long	3180713
	.long	-2394130
	.long	14003687
	.long	-16903474
	.long	-16270840
	.long	17238398
	.long	4729455
	.long	-18074513
	.long	9256800
	.long	-3151181
	.long	-5046075
	.long	9282714
	.long	6866145
	.long	-31907062
	.long	-863023
	.long	-18940575
	.long	15033784
	.long	25105118
	.long	-7894876
	.section	.rodata.L,"a",@progbits
	.align	2
	.type	L,@object
	.size	L,256
L:
	.long	237
	.long	0
	.long	211
	.long	0
	.long	245
	.long	0
	.long	92
	.long	0
	.long	26
	.long	0
	.long	99
	.long	0
	.long	18
	.long	0
	.long	88
	.long	0
	.long	214
	.long	0
	.long	156
	.long	0
	.long	247
	.long	0
	.long	162
	.long	0
	.long	222
	.long	0
	.long	249
	.long	0
	.long	222
	.long	0
	.long	20
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	16
	.long	0
	.globl	crypto_blake2b_vtable
	.section	.rodata.crypto_blake2b_vtable,"a",@progbits
	.align	2
	.type	crypto_blake2b_vtable,@object
	.size	crypto_blake2b_vtable,20
crypto_blake2b_vtable:
	.long	crypto_blake2b
	.long	blake2b_vtable_init
	.long	blake2b_vtable_update
	.long	blake2b_vtable_final
	.long	348
	.section	.rodata.iv,"a",@progbits
	.align	2
	.type	iv,@object
	.size	iv,64
iv:
	.long	-205731576
	.long	1779033703
	.long	-2067093701
	.long	-1150833019
	.long	-23791573
	.long	1013904242
	.long	1595750129
	.long	-1521486534
	.long	-1377402159
	.long	1359893119
	.long	725511199
	.long	-1694144372
	.long	-79577749
	.long	528734635
	.long	327033209
	.long	1541459225
	.section	.rodata.zero,"a",@progbits
	.align	2
	.type	zero,@object
	.size	zero,128
zero:
	.space	128
