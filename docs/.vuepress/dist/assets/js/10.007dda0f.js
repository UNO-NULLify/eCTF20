(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{215:function(_,n,A){"use strict";A.r(n);var I=A(0),R=Object(I.a)({},(function(){var _=this,n=_.$createElement,A=_._self._c||n;return A("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[A("h1",{attrs:{id:"compiler-fixes"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#compiler-fixes"}},[_._v("#")]),_._v(" Compiler Fixes")]),_._v(" "),A("p",[A("strong",[_._v("Original Flags")])]),_._v(" "),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v('mb-gcc -Wall -O0 -g3 -I"../../drm_audio_fw_bsp/microblaze_0/include" -c -fmessage-length=0 -MT"$@" -I"../../drm_audio_fw_bsp/microblaze_0/include" -mlittle-endian -mcpu=v10.0 -mxl-soft-mul -Wl,--no-relax -ffunction-sections -fdata-sections -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"\n')])])]),A("p",[A("code",[_._v("-Wall")]),_._v(" This flag is usefull in development.")]),_._v(" "),A("p",[A("code",[_._v("-Wextra")]),_._v(" Will be added to increase code quality.")]),_._v(" "),A("p",[A("code",[_._v("-Wconversion -Wsign-conversion")]),_._v(" added to warn about potential casting issues that may cause security vulnerabilities.")]),_._v(" "),A("p",[A("code",[_._v("-O0")]),_._v(" Was the original Flag, We will be applying "),A("code",[_._v("-Os")]),_._v(" to optimize for code size.")]),_._v(" "),A("p",[A("code",[_._v("-g3")]),_._v(" Tells the compiler to include debug symbols, this will be replaced with "),A("code",[_._v("-s -fvisability=hidden")]),_._v(" to strip the symbols out of the binary.")]),_._v(" "),A("p",[A("code",[_._v("-static")]),_._v(" Tells the compiler to statically link all binaries, third party libraries cant be used to affect the functionality of our code")]),_._v(" "),A("p",[A("code",[_._v("mxl-reorder")]),_._v(" To cause some chaos in reverse engeneering and exploit development by reordering instructions on run.")]),_._v(" "),A("p",[A("code",[_._v("-Wstack-protector --param ssp-buffer-size=4")]),_._v(" Adding stack protection to the elf.")]),_._v(" "),A("p",[A("code",[_._v("-Wl,-z,noexecstack")]),_._v(" Ensure the Stack is not executable.")]),_._v(" "),A("p",[A("strong",[_._v("New Compiler Options")])]),_._v(" "),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v('mb-gcc -Wall -Wextra -Os -s -fvisibility=hidden -static -Wconversion -Wsign-conversion -fstack-check -mxl-reorder -Wstack-protector --param ssp-buffer-size=4 -ftrapv -Wl,-z,noexecstack -I"../../drm_audio_fw_bsp/microblaze_0/include" -c -fmessage-length=0 -MT"$@" -I"../../drm_audio_fw_bsp/microblaze_0/include" -mlittle-endian -mcpu=v10.0 -mxl-soft-mul -Wl,--no-relax -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"\n')])])]),A("h1",{attrs:{id:"effects"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#effects"}},[_._v("#")]),_._v(" Effects")]),_._v(" "),A("h2",{attrs:{id:"strings"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[_._v("#")]),_._v(" Strings")]),_._v(" "),A("h3",{attrs:{id:"original"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#original"}},[_._v("#")]),_._v(" original")]),_._v(" "),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v('c0H \n>`0p\n>`0t\n,z`0\n!0""\nUnited States\nJapan\nAustralia\ndrew\nmisha\n1234567890\n00000000\n0987654321\nMB> Could not find region ID \'%d\'\n<unknown region>\nMB> Could not find region name \'%s\'\nMB> Could not find uid \'%d\'\n<unknown user>\nMB> Could not find username \'%s\'\nMB> No user logged in\nMB> User \'%s\' does not have access to this song\nMB> User \'%s\' has access to this song\nMB> Region Match. Full Song can be played. Unlocking...\nMB> Invalid region\nMB> Already logged in. Please log out first.\nMB> Logged in for user \'%s\'\nMB> Incorrect pin for user \'%s\'\nMB> User not found\nMB> Logging out...\nMB> Not logged in\nMB> Queried player (%d regions, %d users)\nMB> Queried song (%d regions, %d users)\nMB> No user is logged in. Cannot share song\nMB> User \'%s\' is not song\'s owner. Cannot share song\nMB> Username not found\nMB> Shared song with \'%s\'\nMB> Reading Audio File...\nMB> Song length = %dB\nMB> Song is locked.  Playing only %ds = %dB\nMB> Song is unlocked. Playing full song\nMB> Pausing... \nMB> Resuming... \nMB> Stopping playback...\nMB> Restarting song... \nMB> Only playing 30 seconds\nMB> \nMB> Dumping song (%dB)...\nMB> Song dump finished\nMB> DMA configuration ERROR\nMB> Audio DRM Module has Booted\nMB> Done Playing Song\nMB> No config found for %d\nMB> Initialization failed %d\nMB> Device configured as SG mode\n0123456789ABCDEF\nxintc_intr.c\nxintc.c\n         (((((                  \nAAAAAA\nBBBBBB\n         (((((                  \nAAAAAA\nBBBBBB\n\t$FF\n,led\n,RED\n\\1rem\n}.Jl\n}1uid\n8buf\nt3(:\n8uid\n8uid\n8uid\n8rid\n8rid\n8rid\nx3 4\n&led\n&led\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/rdi_scripts/../build/nt/ctng_bld/target_build/src/gcc-custom/libgcc/config/microblaze/mulsi3.S\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/build/nt/ctng_bld/target_build/microblaze-xilinx-elf/build/build-cc-final/microblaze-xilinx-elf/le/libgcc\nGNU AS 2.27.0\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/rdi_scripts/../build/nt/ctng_bld/target_build/src/gcc-custom/libgcc/config/microblaze/udivsi3.S\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/build/nt/ctng_bld/target_build/microblaze-xilinx-elf/build/build-cc-final/microblaze-xilinx-elf/le/libgcc\nGNU AS 2.27.0\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/rdi_scripts/../build/nt/ctng_bld/target_build/src/gcc-custom/libgcc/config/microblaze/umodsi3.S\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/build/nt/ctng_bld/target_build/microblaze-xilinx-elf/build/build-cc-final/microblaze-xilinx-elf/le/libgcc\nGNU AS 2.27.0\n<int\n../src\n/home/vagrant/eCTF20/mb/drm_audio_fw_bsp/microblaze_0/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys\nmain.c\nmachine/_default_types.h\nsys/_stdint.h\nxil_types.h\nctype.h\nsys/lock.h\nsys/_types.h\nstddef.h\nsys/reent.h\nconstants.h\nsecrets.h\nxil_assert.h\nxaxidma_bd.h\nstdlib.h\nxaxidma_bdring.h\nxaxidma.h\nxintc_l.h\nxintc.h\nxil_printf.h\nstdint.h\nstdint.h\nsys/features.h\n_newlib_version.h\nsys/_intsup.h\nxparameters.h\n_ansi.h\nnewlib.h\nsys/config.h\nmachine/ieeefp.h\nsys/cdefs.h\nstdarg.h\nstring.h\nmachine/_types.h\nsys/string.h\nplatform.h\nplatform_config.h\nsleep.h\nxil_io.h\nmb_interface.h\nxil_exception.h\nutil.h\nxaxidma_hw.h\nxdebug.h\nxil_cache.h\nxstatus.h\nxenv.h\nxenv_standalone.h\nmachine/stdlib.h\nalloca.h\nxil_mem.h\nstdio.h\nsys/types.h\nmachine/types.h\nsys/select.h\nsys/_sigset.h\nsys/_timeval.h\nsys/timespec.h\nsys/_timespec.h\nsys/stdio.h\n../src\n/home/vagrant/eCTF20/mb/drm_audio_fw_bsp/microblaze_0/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys\nplatform.c\nmachine/_default_types.h\nsys/_stdint.h\nxil_types.h\nxil_assert.h\nxil_cache.h\nmb_interface.h\nstddef.h\nstdint.h\nstdint.h\nsys/features.h\n_newlib_version.h\nsys/_intsup.h\nxil_exception.h\nxparameters.h\nplatform_config.h\n../src\n/home/vagrant/eCTF20/mb/drm_audio_fw_bsp/microblaze_0/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/lib/gcc/microblaze-xilinx-elf/6.2.0/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/machine\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/microblaze-xilinx-elf/include/sys\nutil.c\nmachine/_default_types.h\nsys/_stdint.h\nxil_types.h\nctype.h\nsys/lock.h\nsys/_types.h\nstddef.h\nsys/reent.h\nconstants.h\nxil_assert.h\nxil_exception.h\nxstatus.h\nxaxidma_bd.h\nstdlib.h\nxaxidma_bdring.h\nxaxidma.h\nxintc_l.h\nxintc.h\nutil.h\nxil_printf.h\nstdint.h\nstdint.h\nsys/features.h\n_newlib_version.h\nsys/_intsup.h\nxparameters.h\n_ansi.h\nnewlib.h\nsys/config.h\nmachine/ieeefp.h\nsys/cdefs.h\nstdarg.h\nstring.h\nmachine/_types.h\nsys/string.h\nxaxidma_hw.h\nxil_io.h\nmb_interface.h\nxdebug.h\nxil_cache.h\nxenv.h\nxenv_standalone.h\nmachine/stdlib.h\nalloca.h\nPWM.h\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/rdi_scripts/../build/nt/ctng_bld/target_build/src/gcc-custom/libgcc/config/microblaze\nmulsi3.S\nKKKKKLKLLLKKKKKKKLKLK\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/rdi_scripts/../build/nt/ctng_bld/target_build/src/gcc-custom/libgcc/config/microblaze\nudivsi3.S\nKKKLKKKMKKMKKKKKKNKKNLKKLKKKKKLKKKLMMKKKK\n/proj/sdk/gnu/microblaze/builds/HEAD/nightly/2017_11_15/rdi_scripts/../build/nt/ctng_bld/target_build/src/gcc-custom/libgcc/config/microblaze\numodsi3.S\nKKKLKKKKMKMKKKKKKNK\nKKKKMLKKLKKKKKLKKKLMMKKKK\n_on_exit_args_ptr\nmfedr() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,redr\\n" : "=d"(_rval)); _rval; })\nstderr (_REENT->_stderr)\n__strfmonlike(fmtarg,firstvararg) __attribute__((__format__ (__strfmon__, fmtarg, firstvararg)))\n__CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1\nXPAR_MICROBLAZE_S13_AXIS_DATA_WIDTH 32\n__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__\nXAXIDMA_IDLE_MASK 0x00000002\nalloca\nXPAR_PS7_GPIO_0_BASEADDR 0xE000A000\nXPAR_MICROBLAZE_DEBUG_LATENCY_COUNTERS 1\nXPAR_MICROBLAZE_0_S6_AXIS_PROTOCOL GENERIC\n_mbrtowc_state\n_MICROBLAZE_INTERFACE_H_ \n__compar_fn_t_defined \n__SOPT 0x0400\nXST_BUFFER_TOO_SMALL 12L\n__DBL_EPSILON__ ((double)2.2204460492503131e-16L)\nP_tmpdir "/tmp"\n__GCC_ATOMIC_LLONG_LOCK_FREE 1\n__MISC_VISIBLE 1\nXAXIDMA_BD_ID_OFFSET 0x34\nXPAR_SHARE_AXI_BRAM_CTRL_0_ECC 0U\nXPAR_MICROBLAZE_0_NUM_SYNC_FF_DBG_TRACE_CLK 2\n__INT_FAST16_MAX__ 0x7fffffff\nXPAR_XEMACPS_0_ENET_SLCR_10Mbps_DIV1 50\n__LEAST16 "h"\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_ECC_STATUS_REGISTERS 0U\nmffsr() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rfsr\\n" : "=d"(_rval)); _rval; })\nXAXIDMA_CDESC_OFFSET 0x00000008\nXIL_EXCEPTION_ID_FPU 6U\nWCHAR_MAX (__WCHAR_MAX__)\nXPAR_MICROBLAZE_0_S6_AXIS_DATA_WIDTH 32\n_WINT_T \n__lock_release(lock) (_CAST_VOID 0)\nmfgpr(rn) ({ u32 _rval; __asm__ __volatile__("or\\t%0,r0," stringify(rn) "\\n" : "=d"(_rval)); _rval; })\nXPAR_MICROBLAZE_0_RESET_MSR 0x00000000\nXST_FLASH_PART_NOT_SUPPORTED 1131L\nXPAR_MICROBLAZE_SCO 0\nXAxiDma_BdRing\nXST_ATMC_ERROR_COUNT_MAX 1101L\nXPAR_XUARTPS_0_BASEADDR 0xE0000000\n__sferror(p) ((int)(((p)->_flags & __SERR) != 0))\nmttlblo(v) ({ __asm__ __volatile__("mts\\trtlblo,%0\\n\\tnop\\n" ::"d"(v)); })\nXPAR_MICROBLAZE_0_M_AXI_DC_RUSER_WIDTH 1\nXPAR_MICROBLAZE_MMU_DTLB_SIZE 4\nXPAR_MICROBLAZE_0_I_LMB_MON 0\n_ubuf\nXPAR_MICROBLAZE_M_AXI_DC_DATA_WIDTH 32\n__PTRDIFF_MAX__ 0x7fffffff\nXPAR_MICROBLAZE_M7_AXIS_PROTOCOL GENERIC\nXPAR_PS7_ETHERNET_0_ENET_CLK_FREQ_HZ 125000000\nXPAR_MICROBLAZE_0_M_AXI_DC_ADDR_WIDTH 32\nXPAR_MICROBLAZE_0_EDGE_IS_POSITIVE 1\n__GNUCLIKE_BUILTIN_CONSTANT_P 1\nRxNumChannels\n__uint8_t\n_EXFUN(name,proto) name proto\ntolower(__c) __extension__ ({ __typeof__ (__c) __x = (__c); isupper (__x) ? (int) __x - \'A\' + \'a\' : (int) __x;})\n__WCHAR_TYPE__ int\nXPAR_MICROBLAZE_USE_MSR_INSTR 0\n__printflike(fmtarg,firstvararg) __attribute__((__format__ (__printf__, fmtarg, firstvararg)))\n__STDC__ 1\nXil_AssertNonvoid(Expression) { if (Expression) { Xil_AssertStatus = XIL_ASSERT_NONE; } else { Xil_Assert(__FILE__, __LINE__); Xil_AssertStatus = XIL_ASSERT_OCCURRED; return 0; } }\nXPAR_MICROBLAZE_0_DEBUG_PROFILE_SIZE 0\nq_user_lookup(q,i) (q.users + (i * USERNAME_SZ))\nUINT_LEAST64_MAX (__UINT_LEAST64_MAX__)\n_misc\nXPAR_MICROBLAZE_0_DEBUG_TRACE_SIZE 8192\n_READ_WRITE_BUFSIZE_TYPE int\nXPAR_MICROBLAZE_NUMBER_OF_RD_ADDR_BRK 2\nXST_DMA_SG_NO_LIST 523L\n__MICROBLAZE__ 1\n__DEC128_MIN_EXP__ (-6142)\nXAXIDMA_BD_WORDLEN_SHIFT 0\n_mbstate\n_GLOBAL_ATEXIT (_GLOBAL_REENT->_atexit)\nXST_SYSACE_NO_LOCK 1351L\nXInterruptHandler\n_atexit\nXPAR_PS7_SD_0_HIGHADDR 0xE0100FFF\n__UINT64_MAX__ 0xffffffffffffffffULL\nXAxiDma_HasSg(InstancePtr) ((InstancePtr)->HasSg) ? TRUE : FALSE\nXST_FR_TX_BUSY 1401\n__UINT64_TYPE__ long long unsigned int\n_REENT_MP_FREELIST(ptr) ((ptr)->_mp->_freelist)\n__DBL_MAX_10_EXP__ 308\n__const const\nXPAR_MICROBLAZE_0_S0_AXIS_DATA_WIDTH 32\nXPAR_AXI_INTC_0_IVAR_RESET_VALUE 0x00000010\n_IOLBF 1\n__UINT_FAST64_MAX__ 0xffffffffffffffffULL\nXST_IS_STOPPED 24L\nXPAR_MICROBLAZE_0_ALLOW_ICACHE_WR 1\nSeparation\n__GNUCLIKE___TYPEOF 1\nisascii(__c) ((unsigned)(__c)<=0177)\nINT32_C(x) __INT32_C(x)\n__LDBL_DIG__ 15\n__SIZEOF_LONG__ 4\n__INT64 "ll"\n__need_wint_t \nXIL_EXCEPTION_ID_INT 16U\n_add\nXPAR_XUSBPS_0_HIGHADDR 0xE0002FFF\nMAX_PIN_SZ 64\nMAX_USERS 64\nXST_FIFO_NO_ROOM 11L\nINT64_C(x) __INT64_C(x)\n__WCHAR_T__ \nXPAR_MICROBLAZE_0_M5_AXIS_DATA_WIDTH 32\n__tm_mon\n__need___va_list\n_fntypes\nXAXIDMA_RX_TDESC0_OFFSET 0x00000048\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_DATA_WIDTH 32U\nquad quad_t\nXPAR_MICROBLAZE_I_AXI 1\nBdaRestart\n_inc\n_ind\nXAXIDMA_BD_USR0_OFFSET 0x20\n__P(protos) protos\n__INTPTR_TYPE__ int\n___int_least32_t_defined 1\nXAXIDMA_BD_STS_RXEOF_MASK 0x04000000\nXST_IIC_SELFTEST_FAILED 1076\nXPAR_INTC_SINGLE_DEVICE_ID XPAR_AXI_INTC_0_DEVICE_ID\nXIL_CACHE_H \nXAxiDma_IntrAckIrq(InstancePtr,Mask,Direction) XAxiDma_WriteReg((InstancePtr)->RegBase + (XAXIDMA_RX_OFFSET * Direction), XAXIDMA_SR_OFFSET, (Mask)&XAXIDMA_IRQ_ALL_MASK)\nXPAR_CPU_ID 0\nXPAR_PS7_SD_0_HAS_WP 0\n__FLT_HAS_INFINITY__ 1\nXPAR_MICROBLAZE_UNALIGNED_EXCEPTIONS 0\nXPAR_MICROBLAZE_M13_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_RESET_MSR_ICE 0\n_LDBL_EQ_DBL 1\n__WCHAR_MIN__ (-__WCHAR_MAX__ - 1)\nunsigned +0\nIntVectorAddr\nXPAR_MICROBLAZE_M_AXI_DP_DATA_WIDTH 32\n_REENT_CHECK_TM(var) _REENT_CHECK(var, _localtime_buf, struct __tm *, sizeof *((var)->_localtime_buf), )\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_CE_COUNTER_WIDTH 0U\nXAxiDma_GetRxIndexRing(InstancePtr,RingIndex) (&((InstancePtr)->RxBdRing[RingIndex]))\nINT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)\nXPAR_MICROBLAZE_0_M_AXI_DP_ADDR_WIDTH 32\nXPAR_XINTC_USE_DCR_BRIDGE 0\n__predict_true(exp) __builtin_expect((exp), 1)\nlogin_status\nXST_NO_DATA 13L\nXST_NOT_ENABLED 29L\n_REENT_CHECK_SIGNAL_BUF(var) _REENT_CHECK(var, _signal_buf, char *, _REENT_SIGNAL_SIZE, )\nXPAR_MICROBLAZE_RESET_MSR_IE 0\nXAXIDMA_BD_USR2_OFFSET 0x28\nXAXIDMA_DESC_LSB_MASK (0xFFFFFFC0U)\nXPAR_MICROBLAZE_0_FAULT_TOLERANT 0\n_SIZE_T_DEFINED \ncounter\n__lock_acquire(lock) (_CAST_VOID 0)\nREGION_IDS\nXST_SPI_COMMAND_ERROR 1162\nFALSE 0U\nXST_DEVICE_BLOCK_NOT_FOUND 3L\nmftlblo() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rtlblo\\n" : "=d"(_rval)); _rval; })\n_REENT_CHECK_MISC(var) _REENT_CHECK(var, _misc, struct _misc_reent *, sizeof *((var)->_misc), _REENT_INIT_MISC(var))\n_T_PTRDIFF_ \nXPAR_MICROBLAZE_RESET_MSR_EE 0\nXAXIDMA_LAST_APPWORD 4\nXPAR_MICROBLAZE_G_TEMPLATE_LIST 0\n_cvtlen\nXPAR_MICROBLAZE_0_S4_AXIS_DATA_WIDTH 32\n_STDLIB_H_ \n_FSTDIO \n_REENT_WCTOMB_STATE(ptr) ((ptr)->_misc->_wctomb_state)\n_sig_func\n__DEQUALIFY(type,var) ((type)(__uintptr_t)(const volatile void *)(var))\nXPAR_PS7_USB_0_BASEADDR 0xE0002000\nXST_IPIF_DEVICE_ENABLE_ERROR 535L\nYELLOW\n__unbounded \nXPAR_AXIDMA_0_S2MM_BURST_SIZE 16\nXST_OPBARB_INVALID_PRIORITY 1176\nXPAR_BRAM_0_ECC_ONOFF_RESET_VALUE 1U\nmicroblaze_getfpex_operand_b() ({ extern u32 mb_fpex_op_b; mb_fpex_op_b; })\n_FVWRITE_IN_STREAMIO 1\nXPAR_BRAM_2_ECC_STATUS_REGISTERS 0U\n__INT_LEAST32_TYPE__ long int\nMB_CUR_MAX __locale_mb_cur_max()\nXPAR_MICROBLAZE_0_DEBUG_LATENCY_COUNTERS 1\n__DBL_HAS_INFINITY__ 1\n_MB_LEN_MAX 1\nXPAR_XAXIDMA_NUM_INSTANCES 1\nXPAR_MICROBLAZE_0_IADDR_SIZE 32\nXAXIDMA_ERR_SG_DEC_MASK 0x00000400\nXIN_INTC_SECONDARY 2\n_VA_LIST_DEFINED \n__DEC128_MANT_DIG__ 34\nINT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)\n__SHRT_MAX__ 0x7fff\nXPAR_BRAM_3_WRITE_ACCESS 0U\nXPAR_XGPIOPS_0_BASEADDR 0xE000A000\nINT_LEAST32_MAX (__INT_LEAST32_MAX__)\nXIntc_DisableIntr(BaseAddress,DisableMask) XIntc_Out32((BaseAddress) + XIN_IER_OFFSET, ~(DisableMask))\n_lock\n_nbuf\nXPAR_MICROBLAZE_DP_AXI_MON 0\nXPAR_XINTC_NUM_INSTANCES 1\nXAXIDMA_SRCADDR_MSB_OFFSET 0x0000001C\n__lock_init(lock) (_CAST_VOID 0)\nisgraph(__c) (__ctype_lookup(__c)&(_P|_U|_L|_N))\nXPAR_MICROBLAZE_0_ICACHE_STREAMS 0\nXPAR_MICROBLAZE_M_AXI_D_BUS_EXCEPTION 0\nTMP_MAX 26\nXAXIDMA_BD_START_CLEAR 8\n__fastcall __attribute__((__fastcall__))\n_mbstate_t\nXPAR_MICROBLAZE_0_PIADDR_SIZE 32\nXPAR_MICROBLAZE_PVR 0\n_NOINLINE __attribute__ ((__noinline__))\n__INT_FAST64_MAX__ 0x7fffffffffffffffLL\nDeviceId\nHasStsCntrlStrm\nXIN_IAR_OFFSET 12\n__GCC_ATOMIC_CHAR_LOCK_FREE 1\n__UINT_FAST16_TYPE__ unsigned int\nXPAR_MICROBLAZE_0_MMU_DTLB_SIZE 4\nXPAR_MICROBLAZE_0_INSTR_SIZE 32\nXST_IIC_DTR_READBACK_ERROR 1084\nXPAR_FIFO_COUNT_AXI_GPIO_0_INTERRUPT_PRESENT 0\nXPAR_AXI_DMA_0_M_AXI_MM2S_DATA_WIDTH 32\nisupper(__c) ((__ctype_lookup(__c)&(_U|_L))==_U)\n__SIZEOF_INT__ 4\nXIntc_VectorTableEntry\nXAxiDma_BdRingMemCalc(Alignment,NumBd) (int)((sizeof(XAxiDma_Bd) + ((Alignment)-1)) & ~((Alignment)-1)) * (NumBd)\nXAxiDma_BdGetTDest(BdPtr) ((XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STS_OFFSET)) & XAXIDMA_BD_TDEST_FIELD_MASK)\nXPAR_BRAM_2_ECC_ONOFF_REGISTER 0U\nXPAR_XUARTPS_0_DEVICE_ID XPAR_PS7_UART_0_DEVICE_ID\n__used __attribute__((__used__))\ngetchar_unlocked() getc_unlocked(stdin)\nXPAR_INTC_0_BASEADDR 0x04B30000U\nXAXIDMA_DELAY_MASK 0xFF000000\n__SIG_ATOMIC_TYPE__ int\n_current_locale\n_BSD_SIZE_T_DEFINED_ \n__GNUCLIKE_CTOR_SECTION_HANDLING 1\nXPAR_PS7_ETHERNET_0_ENET_SLCR_1000MBPS_DIV0 8\nXPAR_MICROBLAZE_0_M_AXI_DC_ARUSER_WIDTH 5\n__INT32_MAX__ 0x7fffffffL\nXPAR_MICROBLAZE_ICACHE_STREAMS 0\nXAXIDMA_CACHE_INVALIDATE(BdPtr) Xil_DCacheInvalidateRange((UINTPTR)(BdPtr), XAXIDMA_BD_HW_NUM_BYTES)\nXST_SUCCESS 0L\nXST_NO_CALLBACK 18L\n__UINT16_C(c) c\nXPAR_MICROBLAZE_S2_AXIS_PROTOCOL GENERIC\n__PRAGMA_REDEFINE_EXTNAME 1\n__INT_LEAST64_TYPE__ long long int\nXPAR_PS7_UART_0_UART_CLK_FREQ_HZ 100000000\nXPAR_MICROBLAZE_0_M13_AXIS_DATA_WIDTH 32\n_DEFUN_VOID(name) name(_NOARGS)\nXPAR_MICROBLAZE_M_AXI_IC_ADDR_WIDTH 32\nXPAR_MICROBLAZE_0_M11_AXIS_PROTOCOL GENERIC\nXil_Out32LE Xil_Out32\nXPAR_MICROBLAZE_0_S8_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_0_M9_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_0_ASYNC_WAKEUP 3\nXAxiDma_BdSetTId(BdPtr,TId) { u32 val; val = (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_MCCTL_OFFSET) & ~XAXIDMA_BD_TID_FIELD_MASK); val |= ((u32)(TId) << XAXIDMA_BD_TID_FIELD_SHIFT); XAxiDma_BdWrite((BdPtr), XAXIDMA_BD_MCCTL_OFFSET, val); }\nXPAR_BRAM_3_DEVICE_ID XPAR_SHARE_AXI_BRAM_CTRL_0_DEVICE_ID\nAddr_ext\n__FILE\nXAXIDMA_BD_TDEST_FIELD_MASK 0x0000000F\n__sFILE_fake\n__requires_unlocked(...) __lock_annotate(locks_excluded(__VA_ARGS__))\nshea(lladdr,data) ({ __asm__ __volatile__("shea\\t%0,%M1,%L1\\n" ::"d"(data), "d"(lladdr)); })\n___int_wchar_t_h \n__SYS_LOCK_H__ \n_RAND48_ADD (0x000b)\nmb_sleep() ({ __asm__ __volatile__("sleep\\t"); })\nXAxiDma_BdClear(BdPtr) memset((void *)(((UINTPTR)(BdPtr)) + XAXIDMA_BD_START_CLEAR), 0, XAXIDMA_BD_BYTES_TO_CLEAR)\nXPAR_MICROBLAZE_0_MMU_ZONES 16\nXAxiDma_BdRingGetCnt(RingPtr) ((RingPtr)->AllCnt)\nHwTail\nPreHead\nXPAR_MICROBLAZE_USE_INTERRUPT 1\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_UE_FAILING_REGISTERS 0U\nXPAR_MICROBLAZE_0_M13_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_ENDIANNESS 1\nXPAR_XEMACPS_0_ENET_SLCR_1000Mbps_DIV0 8\nXil_L1DCacheInvalidateRange(Addr,Len) microblaze_invalidate_dcache_range((Addr), (Len))\nINT64_MIN (-__INT64_MAX__ - 1)\nXAXIDMA_BD_HAS_STSCNTRL_OFFSET 0x38\nXAxiDma_BdHwCompleted(BdPtr) (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STS_OFFSET) & XAXIDMA_BD_STS_COMPLETE_MASK)\nXPAR_MICROBLAZE_0_LOCKSTEP_SELECT 0\n__BIGGEST_ALIGNMENT__ 4\n__va_list__ \nget_drm_uids(d) (d.md.buf + d.md.num_regions)\nXPAR_MICROBLAZE_0_M_AXI_I_BUS_EXCEPTION 0\n__dead2 __attribute__((__noreturn__))\nXPAR_MICROBLAZE_M3_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_IADDR_SIZE 32\n__UINT8_TYPE__ unsigned char\n_N 04\nncputfsl(val,id) asm volatile("ncput\\t%0,rfsl" stringify(id)::"d"(val))\nXAXIDMA_DELAY_SHIFT 24\nRAND_MAX __RAND_MAX\nUINT_LEAST32_MAX (__UINT_LEAST32_MAX__)\nXPAR_MICROBLAZE_M13_AXIS_DATA_WIDTH 32\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_ECC_ONOFF_REGISTER 0U\nXST_DMA_SG_COUNT_EXCEEDED 521L\nfd_set _types_fd_set\nXPAR_XSDPS_NUM_INSTANCES 1\nXPAR_MICROBLAZE_S6_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_ICACHE_ALWAYS_USED 0\n__UINTMAX_TYPE__ long long unsigned int\nXST_PLBARB_FAIL_SELFTEST 1276L\nXPAR_MICROBLAZE_M15_AXIS_PROTOCOL GENERIC\n__STDC_UTF_32__ 1\nXPAR_MICROBLAZE_0_M15_AXIS_PROTOCOL GENERIC\n__INT_LEAST16_MAX__ 0x7fff\nXPAR_MICROBLAZE_0_ALLOW_DCACHE_WR 1\nMicroDmaMode\nXIN_ISR_OFFSET 0\nXAXIDMA_IRQ_ERROR_MASK 0x00004000\nXPAR_MICROBLAZE_0_S12_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_M_AXI_IP_ADDR_WIDTH 32\n_lbfsize\nXAXIDMA_MCHAN_MAX_TRANSFER_LEN 0x00FFFF\ngetchar() getc(stdin)\n_REENT_INIT_PTR_ZEROED(var) { (var)->_stdin = (__FILE *)&__sf_fake_stdin; (var)->_stdout = (__FILE *)&__sf_fake_stdout; (var)->_stderr = (__FILE *)&__sf_fake_stderr; (var)->_current_locale = "C"; }\n_REENT_INIT_MISC(var) do { struct _reent *_r = (var); _r->_misc->_strtok_last = _NULL; _r->_misc->_mblen_state.__count = 0; _r->_misc->_mblen_state.__value.__wch = 0; _r->_misc->_wctomb_state.__count = 0; _r->_misc->_wctomb_state.__value.__wch = 0; _r->_misc->_mbtowc_state.__count = 0; _r->_misc->_mbtowc_state.__value.__wch = 0; _r->_misc->_mbrlen_state.__count = 0; _r->_misc->_mbrlen_state.__value.__wch = 0; _r->_misc->_mbrtowc_state.__count = 0; _r->_misc->_mbrtowc_state.__value.__wch = 0; _r->_misc->_mbsrtowcs_state.__count = 0; _r->_misc->_mbsrtowcs_state.__value.__wch = 0; _r->_misc->_wcrtomb_state.__count = 0; _r->_misc->_wcrtomb_state.__value.__wch = 0; _r->_misc->_wcsrtombs_state.__count = 0; _r->_misc->_wcsrtombs_state.__value.__wch = 0; _r->_misc->_l64a_buf[0] = \'\\0\'; _r->_misc->_getdate_err = 0; } while (0)\nXST_SPI_SLAVE_MODE 1160\nTRUE 1U\nXAXIDMA_BD_NDESC_MSB_OFFSET 0x04\n_ANSIDECL_H_ \n__UINT16_TYPE__ short unsigned int\n_NEWLIB_ALLOCA_H \nXPAR_MICROBLAZE_INSTR_SIZE 32\nXPAR_MICROBLAZE_0_M_AXI_DC_EXCLUSIVE_ACCESS 0\nXPAR_MICROBLAZE_IP_AXI_MON 0\nstdout (_REENT->_stdout)\n__EXP\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_S_AXI_CTRL_HIGHADDR 0xFFFFFFFFU\nXPAR_MICROBLAZE_ENABLE_DISCRETE_PORTS 0\n_T_SIZE_ \nXPAR_MICROBLAZE_DCACHE_DATA_WIDTH 0\n__ISO_C_VISIBLE 2011\nXPAR_MICROBLAZE_ECC_USE_CE_EXCEPTION 0\n_SIGSET_T_DECLARED \nXPAR_MICROBLAZE_0_M_AXI_IC_RUSER_WIDTH 1\nXAxiDma_BdGetActualLength(BdPtr,LengthMask) (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STS_OFFSET) & LengthMask)\nUINT_FAST8_MAX (__UINT_FAST8_MAX__)\nislower(__c) ((__ctype_lookup(__c)&(_U|_L))==_L)\nisblank(__c) __extension__ ({ __typeof__ (__c) __x = (__c); (__ctype_lookup(__x)&_B) || (int) (__x) == \'\\t\';})\nXST_SPI_NOT_MASTER 1157\n_data\nXST_UART_START_ERROR 1052L\nXIL_ASSERT_NONE 0U\nXAxiDma_BdRingIntEnable(RingPtr,Mask) (XAxiDma_WriteReg((RingPtr)->ChanBase, XAXIDMA_CR_OFFSET, XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_CR_OFFSET) | ((Mask)&XAXIDMA_IRQ_ALL_MASK)))\nXPAR_BRAM_2_DATA_WIDTH 32U\nXPAR_MICROBLAZE_S2_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_0_DCACHE_ALWAYS_USED 0\nmb_swaph(v) ({ u32 _rval; __asm__ __volatile__("swaph\\t%0,%1\\n" : "=d"(_rval) : "d"(v)); _rval; })\n__INT8_C(c) c\nXPAR_MICROBLAZE_M_AXI_IP_ADDR_WIDTH 32\n_MACHTYPES_H_ \n__printf0like(fmtarg,firstvararg) \nXPAR_MICROBLAZE_ICACHE_HIGHADDR 0x3FFFFFFF\nXPAR_MICROBLAZE_0_M11_AXIS_DATA_WIDTH 32\nXPAR_AXIDMA_0_INCLUDE_S2MM_DRE 0\nAXIDMA_CHANNEL_NOT_HALTED 1\n__IEEE_LITTLE_ENDIAN \n__FLT_MAX_EXP__ 128\n__INT64_MAX__ 0x7fffffffffffffffLL\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_ECC_ONOFF_RESET_VALUE 1U\n__CC_SUPPORTS___INLINE 1\n__ATOMIC_SEQ_CST 5\nLength\n_GCC_SIZE_T \nXST_PFIFO_LACK_OF_DATA 501L\nXPAR_MICROBLAZE_M_AXI_DC_THREAD_ID_WIDTH 1\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_ECC_ONOFF_RESET_VALUE 1U\n_L 02\nXPAR_MICROBLAZE_OPCODE_0X0_ILLEGAL 0\nXAxiDma_BdRingHwIsStarted(RingPtr) ((XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_SR_OFFSET) & XAXIDMA_HALTED_MASK) ? FALSE : TRUE)\nXIL_EXCEPTION_ID_IPLB_EXCEPTION 3U\n__CC_SUPPORTS_WARNING 1\nclz(v) ({ u32 _rval; __asm__ __volatile__("clz\\t%0,%1\\n" : "=d"(_rval) : "d"(v)); _rval; })\nXPAR_MICROBLAZE_M7_AXIS_DATA_WIDTH 32\n__UINT_FAST8_TYPE__ unsigned int\nTxNumChannels\nXPAR_PS7_UART_0_HIGHADDR 0xE0000FFF\n__u_long_defined \nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_HIGHADDR 0x0001FFFFU\nXil_L1DCacheInvalidate() microblaze_invalidate_dcache()\n__DBL_DIG__ 15\nXPAR_MICROBLAZE_INTERCONNECT 2\n__sf\n__EXP(x) __ ##x ##__\n__DECIMAL_DIG__ 17\nXENV_MEM_COPY(DestPtr,SrcPtr,Bytes) memcpy((void *)DestPtr, (const void *)SrcPtr, (size_t)Bytes)\n__arg_type_tag(arg_kind,arg_idx,type_tag_idx) \nUINT16_MAX (__UINT16_MAX__)\n_base\n__long_double_t long double\n__FILE_defined \n__has_feature(x) 0\n_mbtowc_state\n_REENT_EMERGENCY_SIZE 25\nXPAR_MICROBLAZE_0_ICACHE_HIGHADDR 0x3FFFFFFF\n__GCC_IEC_559_COMPLEX 0\nXPAR_MICROBLAZE_0_IC_AXI_MON 0\nINT64_MAX (__INT64_MAX__)\nXST_IIC_CR_READBACK_ERROR 1083\n_REENT_ASCTIME_BUF(ptr) ((ptr)->_asctime_buf)\nmicroblaze_bread_datafsl(val,id) getfsl(val, id)\nXil_L1DCacheEnable() microblaze_enable_dcache()\n_REENT_SIGNGAM(ptr) ((ptr)->_gamma_signgam)\nXAXIDMA_BD_MCCTL_OFFSET 0x10\n_CONST const\nXPAR_PS7_ETHERNET_0_ENET_SLCR_10MBPS_DIV1 50\nXAXIDMA_BD_VSIZE_FIELD_MASK 0xFFF80000\n__aligned(x) __attribute__((__aligned__(x)))\nXPAR_MICROBLAZE_0_MMU_ITLB_SIZE 2\nULONG64_LO_MASK ~ULONG64_HI_MASK\n__USER_LABEL_PREFIX__ \nXST_OPBARB_NOT_SUSPENDED 1177\nXPAR_XEMACPS_NUM_INSTANCES 1\nXIntc_GetIntrStatus(BaseAddress) (XIntc_In32((BaseAddress) + XIN_ISR_OFFSET) & XIntc_In32((BaseAddress) + XIN_IER_OFFSET))\n__attribute_malloc__ \nXAXIDMA_CACHE_FLUSH(BdPtr) Xil_DCacheFlushRange((UINTPTR)(BdPtr), XAXIDMA_BD_HW_NUM_BYTES)\nXST_IIC_ADR_READBACK_ERROR 1086\n_SIZE_T_DECLARED \nXPAR_MICROBLAZE_0_NUM_SYNC_FF_CLK 2\nEOF (-1)\nXAXIDMA_TDESC_MSB_OFFSET 0x00000014\nSECRETS_H \nXPAR_MICROBLAZE_OPTIMIZATION 0\n_HAVE_STDC \n__gnu_inline __attribute__((__gnu_inline__, __artificial__))\nXST_IPIF_IP_STATUS_ERROR 536L\n__tm\nNUM_REGIONS 3\n__SCCSID(s) struct __hack\nXPAR_MICROBLAZE_0_ICACHE_DATA_WIDTH 0\nXPAR_PS7_M_AXI_GP0_S_AXI_HIGHADDR 0x7FFFFFFF\n__DECONST(type,var) ((type)(__uintptr_t)(const void *)(var))\nXPAR_MICROBLAZE_S6_AXIS_DATA_WIDTH 32\n__DBL_MIN__ ((double)2.2250738585072014e-308L)\n__lock_annotate(x) \n__INT_FAST8_MAX__ 0x7fffffff\nXST_NAND_PARAM_PAGE_ERROR 1449L\nXIN_INT_HARDWARE_ENABLE_MASK 0x2UL\nXPAR_SHARE_AXI_BRAM_CTRL_0_ECC_STATUS_REGISTERS 0U\nINT_FAST16_MAX (__INT_FAST16_MAX__)\nXPAR_PS7_I2C_0_BASEADDR 0xE0004000\nXPAR_SHARE_AXI_BRAM_CTRL_0_UE_FAILING_REGISTERS 0U\nXPAR_MICROBLAZE_USE_FPU 0\n__nonnull(x) __attribute__((__nonnull__(x)))\n__tm_yday\n__LDBL_MAX__ 1.7976931348623157e+308L\nMaxTransferLen\nXPAR_MICROBLAZE_RESET_MSR 0x00000000\n_REENT_L64A_BUF(ptr) ((ptr)->_misc->_l64a_buf)\nXPAR_MICROBLAZE_S14_AXIS_DATA_WIDTH 32\nXil_DCacheFlush() Xil_L2CacheFlush(); Xil_L1DCacheFlush();\n_REENT_MP_P5S(ptr) ((ptr)->_mp->_p5s)\nXPAR_PS7_ETHERNET_0_ENET_SLCR_1000MBPS_DIV1 1\n__LDBL_MIN_EXP__ (-1021)\nXPAR_MICROBLAZE_0_RESET_MSR_BIP 0\nXPAR_MICROBLAZE_0_M_AXI_IC_DATA_WIDTH 32\n__DBL_MIN_10_EXP__ (-307)\nXST_IIC_TBA_REG_RESET_ERROR 1082\n__int20 +2\n_GCC_PTRDIFF_T \nXPAR_MICROBLAZE_0_M2_AXIS_PROTOCOL GENERIC\nINT_LEAST64_MAX (__INT_LEAST64_MAX__)\nXAxiDma_BdGetARCache(BdPtr) ((XAxiDma_BdRead((BdPtr), XAXIDMA_BD_MCCTL_OFFSET)) & XAXIDMA_BD_ARCACHE_FIELD_MASK)\nXAxiDma_In32 Xil_In32\n__FLT_MIN_10_EXP__ (-37)\nXPAR_MICROBLAZE_0_M10_AXIS_PROTOCOL GENERIC\nXST_PFIFO_BAD_REG_VALUE 503L\n__uint16_t\nINST_SYNC mbar(0)\nXPAR_BRAM_0_DATA_WIDTH 32U\n__DBL_MANT_DIG__ 53\nXPAR_MICROBLAZE_M0_AXIS_DATA_WIDTH 32\n__SRD 0x0004\n_REENT_WCRTOMB_STATE(ptr) ((ptr)->_misc->_wcrtomb_state)\n__FBSDID(s) struct __hack\nSTDOUT_IS_PS7_UART \nXPAR_INTC_0_IVAR_RESET_VALUE 0x00000010U\nXAXIDMA_BD_H_ \n__INT_WCHAR_T_H \nXPAR_MICROBLAZE_USE_EXTENDED_FSL_INSTR 0\nINT16_MIN (-__INT16_MAX__ - 1)\nXPAR_MICROBLAZE_DC_AXI_MON 0\n__DEC32_EPSILON__ 1E-6DF\nNUM_PROVISIONED_USERS 3\nXIL_EXCEPTION_ID_M_AXI_D_EXCEPTION 4U\n_WCHAR_T_DEFINED \nSEEK_END 2\nXPAR_MICROBLAZE_NUM_SYNC_FF_CLK_DEBUG 2\n_POSIX_SOURCE\nXPAR_AXIDMA_0_ENABLE_MULTI_CHANNEL 0\nAllCnt\n__size_t \n__WINT_MAX__ 0xffffffffU\nXST_INVALID_VERSION 4L\nXAXIDMA_CDESC_MSB_OFFSET 0x0000000C\nXPAR_XSDPS_0_MIO_BANK 0\nPREVIEW_TIME_SEC 30\n_result_k\n_result\nXST_NAND_ALIGNMENT_ERROR 1448L\nXPAR_MICROBLAZE_0_S12_AXIS_DATA_WIDTH 32\ncgetfsl(val,id) asm volatile("cget\\t%0,rfsl" stringify(id) : "=d"(val))\nXPAR_MICROBLAZE_0_M6_AXIS_PROTOCOL GENERIC\npadding\n__PLATFORM_H_ \nswea(lladdr,data) ({ __asm__ __volatile__("swea\\t%0,%M1,%L1\\n" ::"d"(data), "d"(lladdr)); })\n_dso_handle\n__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\nINT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)\nXAXIDMA_H_ \n__FLT_EPSILON__ 1.1920928955078125e-7F\n__GNUCLIKE___OFFSETOF 1\nSHARE\nXPAR_MICROBLAZE_D_LMB_MON 0\nXST_FIFO_ERROR 7L\nPROVISIONED_UIDS\nXAXIDMA_BD_BUFA_OFFSET 0x08\n__UINT8_C(c) c\nXPAR_MICROBLAZE_0_ADDR_TAG_BITS 17\nXST_DMA_SG_IS_STARTED 514L\n_REENT _impure_ptr\n_is_cxa\nXPAR_MICROBLAZE_0_G_USE_EXCEPTIONS 0\n__tm_isdst\nXAXIDMA_BDRING_H_ \nXPAR_GPIO_0_INTERRUPT_PRESENT 0\nXil_AssertStatus\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_WRITE_ACCESS 0U\nXST_PLB2OPB_FAIL_SELFTEST 1301L\nXENV_MEM_FILL(DestPtr,Data,Bytes) memset((void *)DestPtr, (s32)Data, (size_t)Bytes)\n__weak_symbol __attribute__((__weak__))\n__flexarr [0]\nXAxiDma_BdRingAckIrq(RingPtr,Mask) XAxiDma_WriteReg((RingPtr)->ChanBase, XAXIDMA_SR_OFFSET, (Mask)&XAXIDMA_IRQ_ALL_MASK)\n__tm_wday\nudelay(delay) \nXil_ICacheInvalidateRange(Addr,Len) Xil_L2CacheInvalidateRange((Addr), (Len)); Xil_L1ICacheInvalidateRange((Addr), (Len));\nXPAR_XINTC_HAS_SIE 1\nCyclic\nXAxiDma_IntrEnable(InstancePtr,Mask,Direction) XAxiDma_WriteReg((InstancePtr)->RegBase + (XAXIDMA_RX_OFFSET * Direction), XAXIDMA_CR_OFFSET, (XAxiDma_ReadReg((InstancePtr)->RegBase + (XAXIDMA_RX_OFFSET * Direction), XAXIDMA_CR_OFFSET)) | (Mask & XAXIDMA_IRQ_ALL_MASK))\n_REENT_INIT_RAND48(var) do { struct _reent *_r = (var); _r->_r48->_seed[0] = _RAND48_SEED_0; _r->_r48->_seed[1] = _RAND48_SEED_1; _r->_r48->_seed[2] = _RAND48_SEED_2; _r->_r48->_mult[0] = _RAND48_MULT_0; _r->_r48->_mult[1] = _RAND48_MULT_1; _r->_r48->_mult[2] = _RAND48_MULT_2; _r->_r48->_add = _RAND48_ADD; _r->_r48->_rand_next = 1; } while (0)\nXAXIDMA_BD_VSIZE_FIELD_SHIFT 19\n_REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_misc->_mbsrtowcs_state)\nXPAR_MICROBLAZE_M_AXI_IC_WUSER_WIDTH 1\n_SYS_REENT_H_ \nXPAR_MICROBLAZE_S12_AXIS_DATA_WIDTH 32\n_VOLATILE volatile\n_ctype_\nXil_L1DCacheFlush() microblaze_invalidate_dcache()\nXil_ICacheInvalidate() Xil_L2CacheInvalidate(); Xil_L1ICacheInvalidate();\n__ORDER_LITTLE_ENDIAN__ 1234\n_PTRDIFF_T_DECLARED \nXAxiDma_BdGetTUser(BdPtr) ((XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STS_OFFSET)) & XAXIDMA_BD_TUSER_FIELD_MASK)\nXPAR_MICROBLAZE_USE_DCACHE 0\nXil_AssertVoidAlways() { Xil_Assert(__FILE__, __LINE__); Xil_AssertStatus = XIL_ASSERT_OCCURRED; return; }\nXPAR_BRAM_3_UE_FAILING_REGISTERS 0U\n_VOID void\nXST_NAND_ADDRESS_ERROR 1447L\n_mbsrtowcs_state\nXST_SPI_TRANSMIT_UNDERRUN 1153\nXIN_CIE_OFFSET 20\n_CLOCK_T_ unsigned long\nXPAR_MICROBLAZE_USE_HW_MUL 0\n_wds\n__SCHAR_MAX__ 0x7f\nXPAR_BRAM_1_ECC_ONOFF_REGISTER 0U\n__FAST8 \nXPAR_MICROBLAZE_M_AXI_DC_AWUSER_WIDTH 5\nXST_MEMTEST_FAILED 401L\n__DBL_MAX_EXP__ 1024\nXPAR_XUSBPS_NUM_INSTANCES 1\nQUERY_SONG\nXPAR_PS7_SD_0_HAS_CD 1\n__UINT_LEAST16_MAX__ 0xffff\nXPAR_XIICPS_0_DEVICE_ID XPAR_PS7_I2C_0_DEVICE_ID\nXPAR_BRAM_1_HIGHADDR 0x0001FFFFU\nXIL_EXCEPTION_ID_M_AXI_I_EXCEPTION 3U\nFD_SET(n,p) ((p)->fds_bits[(n)/NFDBITS] |= (1L << ((n) % NFDBITS)))\n__sf_fake_stdin\nXST_PCI_INVALID_ADDRESS 1361L\n_INT32_EQ_LONG \n__GNUCLIKE___SECTION 1\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_DEVICE_ID 1U\nXUINT64_LSW(x) ((x).Lower)\nXPAR_MICROBLAZE_0_ICACHE_VICTIMS 0\n__SIZEOF_SIZE_T__ 4\n__DEC128_MAX__ 9.999999999999999999999999999999999E6144DL\nPostCnt\nXAXIDMA_DEVICE_TO_DMA 0x01\nXENV_TIME_STAMP_DELTA_US(Stamp1Ptr,Stamp2Ptr) (0)\nUINTPTR_MAX (__UINTPTR_MAX__)\n_REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_misc->_wcsrtombs_state)\n_SYS__TIMESPEC_H_ \ncputfsl(val,id) asm volatile("cput\\t%0,rfsl" stringify(id)::"d"(val))\nXAXIDMA_BD_BUFA_MSB_OFFSET 0x0C\n__UINT_LEAST64_MAX__ 0xffffffffffffffffULL\nmfear() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rear\\n" : "=d"(_rval)); _rval; })\nXENV_USLEEP(delay) \n__format_arg(fmtarg) __attribute__((__format_arg__ (fmtarg)))\n__SL64 0x8000\nXPAR_MICROBLAZE_0_NUMBER_OF_RD_ADDR_BRK 2\nXPAR_MICROBLAZE_M_AXI_DC_ARUSER_WIDTH 5\nXPAR_RGB_PWM_0_PWM_AXI_HIGHADDR 0x04A1FFFF\nXAxiDma_BdRingGetError(RingPtr) (XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_SR_OFFSET) & XAXIDMA_ERR_ALL_MASK)\nXPAR_MICROBLAZE_0_DADDR_SIZE 32\ntimerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0)\n_write\n_DEFAULT_SOURCE\nXPAR_MICROBLAZE_0_M_AXI_D_BUS_EXCEPTION 0\nXPAR_MICROBLAZE_NUM_SYNC_FF_CLK_IRQ 1\nXPAR_MICROBLAZE_0_S9_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_INTERRUPT_MON 0\n__CC_SUPPORTS_INLINE 1\nXAXIDMA_NO_CHANGE 0xFFFFFFFF\nXST_NOT_SGDMA 16L\nINT16_C(x) __INT16_C(x)\n__GNUCLIKE_MATH_BUILTIN_RELOPS \nXAXIDMA_BD_TUSER_FIELD_MASK 0x000F0000\nXPAR_INTC_0_NUM_INTR_INPUTS 1U\nPTRDIFF_MIN (-PTRDIFF_MAX - 1)\nPLAY\nstrtodf strtof\n__need_inttypes\nHasS2Mm\n__SIZEOF_LONG_LONG__ 8\nXPAR_MICROBLAZE_INTERRUPT_IS_EDGE 1\nXPAR_XINTC_HAS_IPR 1\nBUFSIZ 1024\nIsRxChannel\nXPAR_MICROBLAZE_DCACHE_ADDR_TAG 17\n__no_lock_analysis __lock_annotate(no_thread_safety_analysis)\nXPAR_MICROBLAZE_0_USE_EXT_BRK 0\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_CE_COUNTER_WIDTH 0U\n__NEWLIB_MINOR__ 4\nXPAR_MICROBLAZE_0_USE_CONFIG_RESET 0\nXST_SPI_NO_SLAVE 1155\nXST_NAND_PART_NOT_SUPPORTED 1444L\n__rangeof(type,start,end) (__offsetof(type, end) - __offsetof(type, start))\n_DEFAULT_SOURCE 1\n_WCHAR_T_DEFINED_ \n__SOFF 0x1000\nXPAR_MICROBLAZE_0_M_AXI_IC_AWUSER_WIDTH 5\n__bounded \n__WINT_TYPE__ unsigned int\nXST_OPBARB_NOT_FIXED_PRIORITY 1179\nXST_EMAC_MII_READ_ERROR 1003L\n__tm_min\nstates\n___int_least8_t_defined 1\nXINTC_H \nXPAR_AXI_INTC_0_KIND_OF_INTR 0xFFFFFFFF\nXPARAMETERS_H \nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_FAULT_INJECT 0U\n_NEWLIB_STDIO_H \n_REENT_CHECK(var,what,type,size,init) do { struct _reent *_r = (var); if (_r->what == NULL) { _r->what = (type)malloc(size); __reent_assert(_r->what); init; } } while (0)\nXPAR_MICROBLAZE_0_M4_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_USE_DIV 0\n_ATEXIT_DYNAMIC_ALLOC 1\nUINT_LEAST8_MAX (__UINT_LEAST8_MAX__)\nSTOPPED\n__INT16_MAX__ 0x7fff\n__tm_year\nXAXIDMA_BD_STS_DEC_ERR_MASK 0x40000000\n__FLT_MANT_DIG__ 24\nlbur(address) ({ u32 _rval; __asm__ __volatile__("lbur\\t%0,%1,r0\\n" : "=d"(_rval) : "d"(address)); _rval; })\n_blksize\nXST_SPI_TRANSFER_DONE 1152\nXPAR_BRAM_1_DEVICE_ID XPAR_INS_LMB_BRAM_IF_CNTLR_0_DEVICE_ID\n__sentinel __attribute__((__sentinel__))\nXST_SEND_ERROR 28L\n__va_copy(d,s) __builtin_va_copy(d,s)\nXPAR_AXIDMA_0_M_AXI_S2MM_DATA_WIDTH 32\n__GNUC_VA_LIST_COMPATIBILITY 1\nva_end(v) __builtin_va_end(v)\nXIN_SIE_OFFSET 16\nOptions\nisprint(__c) (__ctype_lookup(__c)&(_P|_U|_L|_N|_B))\n__asserts_shared(...) __lock_annotate(assert_shared_lock(__VA_ARGS__))\nXPAR_MICROBLAZE_0_USE_MSR_INSTR 0\n__have_longlong64 1\n___int16_t_defined 1\nget_drm_rids(d) (d.md.buf)\n_mult\n_SSIZE_T_DECLARED \nINLINE inline\nXAxiDma_BdRingBusy(RingPtr) (XAxiDma_BdRingHwIsStarted(RingPtr) && ((XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_SR_OFFSET) & XAXIDMA_IDLE_MASK) ? FALSE : TRUE))\nputc(x,fp) __sputc_r(_REENT, x, fp)\nXPAR_MICROBLAZE_0_DEBUG_INTERFACE 0\nXPAR_XEMACPS_0_ENET_SLCR_100Mbps_DIV0 8\n../src/main.c\nXPAR_MICROBLAZE_M12_AXIS_PROTOCOL GENERIC\nXPAR_SHARE_AXI_BRAM_CTRL_0_CE_COUNTER_WIDTH 0U\n__DEC32_MIN__ 1E-95DF\n__FLT_MIN_EXP__ (-125)\nXPAR_BRAM_1_BASEADDR 0x00000000U\n_mbrlen_state\n__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\n_EXFUN_NOTHROW(name,proto) name proto _NOTHROW\n__UINT64_C(c) c ## ULL\n_howmany(x,y) (((x)+((y)-1))/(y))\n__trylocks_exclusive(...) __lock_annotate(exclusive_trylock_function(__VA_ARGS__))\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_UE_FAILING_REGISTERS 0U\n__FLT_RADIX__ 2\nUINT64_C(x) __UINT64_C(x)\n_ANSI_STDARG_H_ \nXPAR_MICROBLAZE_DCACHE_USE_WRITEBACK 0\nint +2\nXCACHE_DISABLE_CACHE() { XCACHE_DISABLE_DCACHE(); XCACHE_DISABLE_ICACHE(); }\nXPAR_MICROBLAZE_0_S10_AXIS_PROTOCOL GENERIC\nXIN_IMR_OFFSET 32\n__RAND_MAX 0x7fffffff\n__LDBL_EPSILON__ 2.2204460492503131e-16L\nXPAR_MICROBLAZE_ICACHE_FORCE_TAG_LUTRAM 0\n_TIMEVAL_DEFINED \n__LOCK_INIT(class,lock) static int lock = 0;\n_INTPTR_EQ_INT \n__sfileno(p) ((p)->_file)\nXPAR_MICROBLAZE_0_S3_AXIS_DATA_WIDTH 32\n_C 040\n__UINTMAX_MAX__ 0xffffffffffffffffULL\nRxBdRing\n_BSDTYPES_DEFINED \nXPAR_MICROBLAZE_ICACHE_DATA_WIDTH 0\nXPAR_XSDPS_0_BUS_WIDTH 0\nPLAYING\n__DEC128_MAX_EXP__ 6145\nXPAR_MICROBLAZE_MMU_PRIVILEGED_INSTR 0\n_TIMER_T_ unsigned long\nXPAR_SHARE_AXI_BRAM_CTRL_0_S_AXI_HIGHADDR 0x04B01FFFU\nXPAR_MICROBLAZE_S12_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_IMPRECISE_EXCEPTIONS 0\nXPAR_XSDPS_0_BASEADDR 0xE0100000\n/home/vagrant/eCTF20/mb/drm_audio_fw/Debug\n__SWID 0x2000\n__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF\nXPAR_MICROBLAZE_USE_EXT_BRK 0\nXil_L2CacheFlushRange(Addr,Len) microblaze_flush_cache_ext_range((Addr), (Len))\n_REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(var))); _REENT_INIT_PTR_ZEROED(var); }\nXST_NAND_ERROR 1443L\nXPAR_PS7_USB_0_DEVICE_ID 0\n__NEWLIB_PATCHLEVEL__ 0\nXPAR_INTC_0_DEVICE_ID XPAR_AXI_INTC_0_DEVICE_ID\nXPAR_RGB_PWM_0_PWM_AXI_BASEADDR 0x04A10000\nXPAR_MICROBLAZE_FSL_LINKS 0\nXAxiDma_BdRingGetCurrBd(RingPtr) (XAxiDma_Bd *)XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_CDESC_OFFSET)\nXPAR_MICROBLAZE_S13_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_M8_AXIS_DATA_WIDTH 32\nXAXIDMA_CR_OFFSET 0x00000000\nINT_FAST8_MAX (__INT_FAST8_MAX__)\nshift\nXPAR_MICROBLAZE_M2_AXIS_PROTOCOL GENERIC\nFD_CLR(n,p) ((p)->fds_bits[(n)/NFDBITS] &= ~(1L << ((n) % NFDBITS)))\nXPAR_MICROBLAZE_0_M2_AXIS_DATA_WIDTH 32\nXAXIDMA_IRQ_IOC_MASK 0x00001000\n__int_fast8_t_defined 1\nXPAR_BRAM_2_CE_COUNTER_WIDTH 0U\n__FAST16 \n_REENT_MP_RESULT(ptr) ((ptr)->_mp->_result)\nXST_NAND_BUSY 1441L\n___int64_t_defined 1\nXPAR_BRAM_2_HIGHADDR 0xC0007FFFU\n__GNUCLIKE_BUILTIN_NEXT_ARG 1\nXIN_SIMULATION_MODE 0\n_toupper(__c) ((unsigned char)(__c) - \'a\' + \'A\')\nXST_FLASH_ADDRESS_ERROR 1135L\nXPAR_BRAM_3_DATA_WIDTH 32U\nXPAR_MICROBLAZE_0_AREA_OPTIMIZED 0\nowner\nInterruptProcessed\n__unused __attribute__((__unused__))\nq_region_lookup(q,i) (q.regions + (i * REGION_NAME_SZ))\n__INT16_TYPE__ short int\nXST_OPB2PLB_FAIL_SELFTEST 1326L\nXPAR_INTC_SINGLE_BASEADDR 0x04B30000\n__int_fast16_t_defined 1\n_off_t\nFirstBdPhysAddr\n__GNUCLIKE_BUILTIN_MEMCPY 1\nXPAR_MICROBLAZE_M_AXI_DC_WUSER_WIDTH 1\n___int_size_t_h \nXPAR_BRAM_2_BASEADDR 0xC0000000U\nXAXIDMA_BD_STS_ALL_ERR_MASK 0x70000000\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_ECC 0U\nXPAR_MICROBLAZE_0_DEBUG_EXTERNAL_TRACE 0\nmttlbhi(v) ({ __asm__ __volatile__("mts\\trtlbhi,%0\\n\\tnop\\n" ::"d"(v)); })\nXAXIDMA_CR_RESET_MASK 0x00000004\n_SYS_TIMESPEC_H_ \n_localtime_buf\n__GCC_ATOMIC_LONG_LOCK_FREE 2\nXPAR_MICROBLAZE_0_BASE_VECTORS 0x0000000000000000\nXST_DMA_SG_NOTHING_TO_COMMIT 519L\n__int_fast32_t_defined 1\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_S_AXI_CTRL_HIGHADDR 0xFFFFFFFFU\n__count\nXPAR_MICROBLAZE_M6_AXIS_PROTOCOL GENERIC\nXST_NAND_OPT_NOT_SUPPORTED 1445L\n__lock_acquire_recursive(lock) (_CAST_VOID 0)\nXPAR_MICROBLAZE_0_S7_AXIS_DATA_WIDTH 32\nINTMAX_MIN (-INTMAX_MAX - 1)\nXPAR_MICROBLAZE_RESET_MSR_DCE 0\nXPAR_MICROBLAZE_0_ICACHE_FORCE_TAG_LUTRAM 0\nXPAR_MICROBLAZE_S1_AXIS_PROTOCOL GENERIC\nXPAR_XIICPS_NUM_INSTANCES 1\nXPAR_MICROBLAZE_0_DEBUG_ENABLED 2\n__locks_exclusive(...) __lock_annotate(exclusive_lock_function(__VA_ARGS__))\nXPAR_MICROBLAZE_0_DCACHE_DATA_WIDTH 0\nXPAR_BRAM_3_ECC_ONOFF_REGISTER 0U\n__compiler_membar() __asm __volatile(" " : : : "memory")\nmfbtr() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rbtr\\n" : "=d"(_rval)); _rval; })\nXST_FAILURE 1L\n__SVID_VISIBLE 1\nXST_DMA_SG_LIST_EMPTY 513L\nXST_FLASH_TOO_MANY_REGIONS 1133L\nXPAR_MICROBLAZE_0_G_TEMPLATE_LIST 0\nfifo_fill\n__strong_reference(sym,aliassym) extern __typeof (sym) aliassym __attribute__ ((__alias__ (#sym)))\nXPAR_MICROBLAZE_0_RESET_MSR_EIP 0\nHwCnt\nXPAR_MICROBLAZE_NUMBER_OF_PC_BRK 4\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_ECC 0U\nXST_UART_BAUD_RANGE 1056L\nload_song_md\n_SYS_TYPES_H \nXPAR_MICROBLAZE_M2_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_M_AXI_IC_USER_SIGNALS 0\nXAXIDMA_DMA_TO_DEVICE 0x00\nXIL_IO_H \n_GCC_WCHAR_T \nXPAR_MB_DMA_AXI_BRAM_CTRL_0_ECC_ONOFF_RESET_VALUE 0U\nINT_FAST64_MAX (__INT_FAST64_MAX__)\nXPAR_MICROBLAZE_DCACHE_BASEADDR 0x00000000\nXPAR_MICROBLAZE_M_AXI_IC_BUSER_WIDTH 1\nXil_L2CacheInvalidate() microblaze_invalidate_cache_ext()\nXPAR_MICROBLAZE_M12_AXIS_DATA_WIDTH 32\nXil_DCacheInvalidate() Xil_L2CacheInvalidate(); Xil_L1DCacheInvalidate();\n__INT8 "hh"\nXPAR_MICROBLAZE_0_M_AXI_DC_THREAD_ID_WIDTH 1\nputfsl(val,id) asm volatile("put\\t%0,rfsl" stringify(id)::"d"(val))\nXPAR_MICROBLAZE_0_NUM_SYNC_FF_DBG_CLK 1\nXIN_INTC_PRIMARY 1\nXAxiDma_BdRingCntCalc(Alignment,Bytes) (uint32_t)((Bytes) / ((sizeof(XAxiDma_Bd) + ((Alignment)-1)) & ~((Alignment)-1)))\nXPAR_XSPIPS_0_HIGHADDR 0xE0006FFF\nXPAR_AXIDMA_0_NUM_MM2S_CHANNELS 1\nXPAR_MICROBLAZE_0_D_LMB_MON 0\n__need_size_t \nmfesr() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,resr\\n" : "=d"(_rval)); _rval; })\nva_start(v,l) __builtin_va_start(v,l)\nXPAR_MICROBLAZE_S5_AXIS_PROTOCOL GENERIC\n__volatile volatile\n_ANSI_STDDEF_H \nXPAR_MICROBLAZE_M14_AXIS_PROTOCOL GENERIC\nlhur(address) ({ u32 _rval; __asm__ __volatile__("lhur\\t%0,%1,r0\\n" : "=d"(_rval) : "d"(address)); _rval; })\nXPAR_MICROBLAZE_0_M14_AXIS_PROTOCOL GENERIC\nFastIntr\nXPAR_PS7_SD_0_BASEADDR 0xE0100000\n_BSD_WCHAR_T_\nXIL_EXCEPTION_ID_DPLB_EXCEPTION 4U\nXPAR_AXIDMA_0_MM2S_BURST_SIZE 16\nXPAR_MICROBLAZE_0_ENABLE_DISCRETE_PORTS 0\nXPAR_MICROBLAZE_M_AXI_DP_ADDR_WIDTH 32\nXPAR_MICROBLAZE_NUMBER_OF_WR_ADDR_BRK 2\nXPAR_MICROBLAZE_0_S11_AXIS_PROTOCOL GENERIC\n_TIME_T_ long\nXPAR_AXI_INTC_0_BASEADDR 0x04B30000\nXPAR_XEMACPS_0_ENET_SLCR_10Mbps_DIV0 8\nXAXIDMA_BUFFLEN_OFFSET 0x00000028\nXIntc_MasterEnable(BaseAddress) XIntc_Out32((BaseAddress) + XIN_MER_OFFSET, XIN_INT_MASTER_ENABLE_MASK | XIN_INT_HARDWARE_ENABLE_MASK)\nXPAR_BRAM_2_DEVICE_ID XPAR_MB_DMA_AXI_BRAM_CTRL_0_DEVICE_ID\nXPAR_MICROBLAZE_0_USE_NON_SECURE 0\nXAXIDMA_ERR_SG_INT_MASK 0x00000100\nXPAR_MICROBLAZE_0_ICACHE_LINE_LEN 4\n__wchb\n__need_size_t\n_ATEXIT_SIZE 32\nlwx(address) ({ u32 _rval; __asm__ __volatile__("lwx\\t%0,%1,r0\\n" : "=d"(_rval) : "d"(address)); _rval; })\n__INTMAX_C(c) c ## LL\n__tm_hour\nXPAR_MICROBLAZE_0_DCACHE_BASEADDR 0x00000000\nXPAR_MICROBLAZE_DEBUG_COUNTER_WIDTH 32\nXST_UART_BAUD_ERROR 1055L\n__timer_t_defined \nXST_UART_INIT_ERROR 1051L\nXPAR_PROC_BUS_1_FREQ_HZ 100000000\nINT32_MIN (-__INT32_MAX__ - 1)\nXPAR_MICROBLAZE_DEBUG_TRACE_ASYNC_RESET 0\nmbar(mask) ({ __asm__ __volatile__("mbar\\t" stringify(mask)); })\n__has_include(STR) __has_include__(STR)\nXPAR_MICROBLAZE_S1_AXIS_DATA_WIDTH 32\ntoascii(__c) ((__c)&0177)\n__DEC128_MIN__ 1E-6143DL\n__GNUCLIKE_ASM 3\nXST_IIC_BUS_BUSY 1077\nXPAR_MICROBLAZE_0_FPU_EXCEPTION 0\nXPAR_MICROBLAZE_MMU_ZONES 16\nTIMEVAL_TO_TIMESPEC(tv,ts) do { (ts)->tv_sec = (tv)->tv_sec; (ts)->tv_nsec = (tv)->tv_usec * 1000; } while (0)\nXPAR_MICROBLAZE_0_DIV_ZERO_EXCEPTION 0\n__GCC_IEC_559 0\nXPAR_MICROBLAZE_0_M10_AXIS_DATA_WIDTH 32\n__FLT_HAS_QUIET_NAN__ 1\nXPAR_MICROBLAZE_M_AXI_IC_THREAD_ID_WIDTH 1\nXPAR_MICROBLAZE_S9_AXIS_PROTOCOL GENERIC\n_GCC_WRAP_STDINT_H \nmfeare() ({ u32 _rval; __asm__ __volatile__("mfse\\t%0,rear\\n" : "=d"(_rval)); _rval; })\nnew_md\n_niobs\nXPAR_PS7_SD_0_HAS_EMIO 0\nXPAR_MICROBLAZE_0_INTERCONNECT 2\nXPAR_BRAM_1_DATA_WIDTH 32U\nXPAR_MICROBLAZE_ADDR_SIZE 32\n__STDC_HOSTED__ 1\nXPAR_MICROBLAZE_USE_NON_SECURE 0\nXAXIDMA_RX_CDESC0_MSB_OFFSET 0x00000044\nXPAR_MICROBLAZE_0_S15_AXIS_PROTOCOL GENERIC\nXPAR_GPIO_0_DEVICE_ID XPAR_FIFO_COUNT_AXI_GPIO_0_DEVICE_ID\nXPAR_BRAM_0_BASEADDR 0x00000000U\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_ECC_STATUS_REGISTERS 0U\nXPAR_MICROBLAZE_M6_AXIS_DATA_WIDTH 32\nrid_to_region_name\n_errno\n__ORDER_PDP_ENDIAN__ 3412\n__UINT32_TYPE__ long unsigned int\n__ATOMIC_ACQUIRE 2\nXPAR_PS7_SPI_0_BASEADDR 0xE0006000\n__tm_mday\nmtzpr(v) ({ __asm__ __volatile__("mts\\trzpr,%0\\n\\tnop\\n" ::"d"(v)); })\nXST_IPIF_REG_WIDTH_ERROR 531L\nxdbg_stmnt(x) \nXAxiDma_BdGetStride(BdPtr) ((XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STRIDE_VSIZE_OFFSET)) & XAXIDMA_BD_STRIDE_FIELD_MASK)\n__INT_FAST64_TYPE__ long long int\n__weak_reference(sym,alias) __asm__(".stabs \\"_" #alias "\\",11,0,0,0"); __asm__(".stabs \\"_" #sym "\\",1,0,0,0")\n__noinline __attribute__ ((__noinline__))\nSTDIN_BASEADDRESS 0xE0000000\n__requires_shared(...) __lock_annotate(shared_locks_required(__VA_ARGS__))\nXST_FLASH_BUSY 1126L\n__attribute_pure__ \n_HAVE_LONG_DOUBLE 1\n__INT_LEAST64_MAX__ 0x7fffffffffffffffLL\nXPAR_MICROBLAZE_0_DEBUG_EVENT_COUNTERS 5\n_fnargs\nXAxiDma_BdGetSts(BdPtr) (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STS_OFFSET) & XAXIDMA_BD_STS_ALL_MASK)\nalloca(size) __builtin_alloca(size)\n__UINT32_C(c) c ## UL\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_S_AXI_HIGHADDR 0xC0007FFFU\nXPAR_MICROBLAZE_0_M_AXI_IC_THREAD_ID_WIDTH 1\nXPAR_MICROBLAZE_FREQ 100000000\nXAXIDMA_BD_STRIDE_VSIZE_OFFSET 0x14\ntimersub(tvp,uvp,vvp) do { (vvp)->tv_sec = (tvp)->tv_sec - (uvp)->tv_sec; (vvp)->tv_usec = (tvp)->tv_usec - (uvp)->tv_usec; if ((vvp)->tv_usec < 0) { (vvp)->tv_sec--; (vvp)->tv_usec += 1000000; } } while (0)\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_CE_COUNTER_WIDTH 0U\n__section(x) __attribute__((__section__(x)))\nXil_AssertWait\nXST_SPI_SLAVE_ONLY 1158\nXST_OPBARB_PARK_NOT_ENABLED 1178\nXPAR_MICROBLAZE_0_OPCODE_0X0_ILLEGAL 0\nXPAR_MICROBLAZE_DCACHE_FORCE_TAG_LUTRAM 0\n__ptrvalue \ndrm_state\nXPAR_XSDPS_0_SDIO_CLK_FREQ_HZ 50000000\n__SNBF 0x0002\nXPAR_MICROBLAZE_0_DCACHE_LINE_LEN 4\n_REENT_INIT_MP(var) do { struct _reent *_r = (var); _r->_mp->_result_k = 0; _r->_mp->_result = _r->_mp->_p5s = _NULL; _r->_mp->_freelist = _NULL; } while (0)\nis_provisioned_rid\nXST_IIC_TX_FIFO_REG_RESET_ERROR 1080\nXPAR_FIFO_COUNT_AXI_GPIO_0_DEVICE_ID 0\nmfshr() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rshr\\n" : "=d"(_rval)); _rval; })\nXAXIDMA_BD_NUM_WORDS 16U\nXAXIDMA_BD_CTRL_ALL_MASK 0x0C000000\n__GNUC_VA_LIST \nXIL_PRINTF_H \n_fpos_t\nXPAR_MICROBLAZE_USE_PCMP_INSTR 0\nXPAR_XSDPS_0_DEVICE_ID XPAR_PS7_SD_0_DEVICE_ID\nXIN_CONTROLLER_MAX_INTRS 32\nXPAR_BRAM_2_ECC_ONOFF_RESET_VALUE 0U\n_NEWLIB_VERSION_H__ 1\nXPAR_XIICPS_0_I2C_CLK_FREQ_HZ 108333336\nXPAR_MICROBLAZE_0_ASYNC_INTERRUPT 1\nUINTPTR\n__need_wint_t\nXPAR_INTC_SINGLE_HIGHADDR 0x04B3FFFF\nXPAR_XEMACPS_0_ENET_CLK_FREQ_HZ 125000000\n__ATOMIC_RELAXED 0\nXPAR_MICROBLAZE_DEBUG_EVENT_COUNTERS 5\nXPAR_MICROBLAZE_S5_AXIS_DATA_WIDTH 32\n__LDBL_MIN__ 2.2250738585072014e-308L\nXAXIDMA_BD_ARUSER_FIELD_MASK 0xF0000000\nINT_LEAST8_MAX (__INT_LEAST8_MAX__)\n_signal_buf\nXAXIDMA_RX_CDESC0_OFFSET 0x00000040\nXPAR_XINTC_HAS_IVR 1\n__GNUCLIKE_BUILTIN_STDARG 1\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_DATA_WIDTH 32U\n_IONBF 2\n_cookie\n__POSIX_VISIBLE 200809\n__NEWLIB__ 2\nXil_L1ICacheDisable() microblaze_disable_icache()\n_DEFUN(name,arglist,args) name(args)\n__returns_twice __attribute__((__returns_twice__))\nnputfsl(val,id) asm volatile("nput\\t%0,rfsl" stringify(id)::"d"(val))\nplay_song\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_CE_FAILING_REGISTERS 0U\nXST_DMA_SG_BD_LOCKED 518L\ncommands\nXAXIDMA_MICROMODE_MIN_BUF_ALIGN 0xFFF\nXPAR_BRAM_1_FAULT_INJECT 0U\n_REENT_CHECK_RAND48(var) _REENT_CHECK(var, _r48, struct _rand48 *, sizeof *((var)->_r48), _REENT_INIT_RAND48((var)))\nXPAR_PS7_UART_0_DEVICE_ID 0\nXil_L1ICacheEnable() microblaze_enable_icache()\nXPAR_MICROBLAZE_0_USE_STACK_PROTECTION 0\nHandlerTable\nXPAR_MICROBLAZE_0_EDK_SPECIAL microblaze\nXPAR_MICROBLAZE_0_MMU_PRIVILEGED_INSTR 0\nXPAR_MICROBLAZE_0_RESET_MSR_IE 0\nXST_SPI_RECEIVE_NOT_EMPTY 1161\n_END_STD_C \n__sfeof(p) ((int)(((p)->_flags & __SEOF) != 0))\n_NULL 0\nXPAR_MICROBLAZE_0_M1_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_D_LMB 1\nXPAR_MICROBLAZE_0_M3_AXIS_DATA_WIDTH 32\n__wchar_t__ \nUPPER_32_BITS(n) ((u32)(((n) >> 16) >> 16))\nXST_PFIFO_ERROR 504L\nInterruptController\n__Long long\n__lock_close(lock) (_CAST_VOID 0)\nXAxiDma_BdRingPrev(RingPtr,BdPtr) (((u32)(BdPtr) <= (RingPtr)->FirstBdAddr) ? (XAxiDma_Bd *)(RingPtr)->LastBdAddr : (XAxiDma_Bd *)((u32)(BdPtr) - (RingPtr)->Separation))\n__pt_guarded_by(x) __lock_annotate(pt_guarded_by(x))\n_WCHAR_T_DECLARED \nmicroblaze_nbread_datafsl(val,id) ngetfsl(val, id)\n__alloc_size(x) __attribute__((__alloc_size__(x)))\nXPAR_MICROBLAZE_0_NUM_SYNC_FF_CLK_DEBUG 2\n_REENT_SMALL_CHECK_INIT(ptr) do { if ((ptr) && !(ptr)->__sdidinit) __sinit (ptr); } while (0)\n__ATOMIC_RELEASE 3\n_UNBUF_STREAM_OPT 1\nXPAR_PS7_USB_0_HIGHADDR 0xE0002FFF\nSLEEP_H \nXPAR_MICROBLAZE_0_PVR 0\nXPAR_PS7_SD_0_DEVICE_ID 0\n__trylocks_shared(...) __lock_annotate(shared_trylock_function(__VA_ARGS__))\nXAXIDMA_ERR_DECODE_MASK 0x00000040\nXPAR_MICROBLAZE_NUM_SYNC_FF_CLK 2\nXPAR_MICROBLAZE_AVOID_PRIMITIVES 0\nXST_DMA_TRANSFER_ERROR 511L\n__INT_FAST16_TYPE__ int\nINT16_MAX (__INT16_MAX__)\nXPAR_MICROBLAZE_M_AXI_DP_EXCLUSIVE_ACCESS 0\nXil_Htons Xil_EndianSwap16\nmicroblaze_nbwrite_datafsl(val,id) nputfsl(val, id)\nQUERY_PLAYER\n_mblen_state\nXPAR_MICROBLAZE_ASYNC_INTERRUPT 1\nngetfsl(val,id) asm volatile("nget\\t%0,rfsl" stringify(id) : "=d"(val))\n__tm_sec\nXPAR_XGPIOPS_0_HIGHADDR 0xE000AFFF\n__FAST32 \nXIN_ILR_OFFSET 36\nXPAR_MICROBLAZE_0_S11_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_0_ILL_OPCODE_EXCEPTION 0\nREGION_NAMES\n_on_exit_args\nXPAR_MICROBLAZE_0_DCACHE_FORCE_TAG_LUTRAM 0\nXST_FLASH_NOT_SUPPORTED 1132L\n__SNLK 0x0001\n__SSTR 0x0200\nXSTATUS_H \nIsReady\n_cvtbuf\nGREEN\nXPAR_MICROBLAZE_S9_AXIS_DATA_WIDTH 32\n_REENT_INIT_ATEXIT _NULL, _ATEXIT_INIT,\n__cleanup\nXPAR_MICROBLAZE_0_M5_AXIS_PROTOCOL GENERIC\nsAxiDma\n__INT_MAX__ 0x7fffffff\n__GXX_ABI_VERSION 1010\nXPAR_AXIDMA_0_INCLUDE_S2MM 0\n__FLT_MAX__ 3.4028234663852886e+38F\nXPAR_MICROBLAZE_0_S0_AXIS_PROTOCOL GENERIC\n__INT_LEAST8_TYPE__ signed char\nXil_ICacheEnable() Xil_L1ICacheEnable()\nnew_md_len\nXPAR_BRAM_2_UE_FAILING_REGISTERS 0U\nXAXIDMA_ERR_INTERNAL_MASK 0x00000010\nXPAR_AXIDMA_0_INCLUDE_SG 0\nXPAR_INTC_0_HAS_FAST 0U\nXil_DCacheFlushRange(Addr,Len) Xil_L2CacheFlushRange((Addr), (Len)); Xil_L1DCacheFlushRange((Addr), (Len));\nUINT64_MAX (__UINT64_MAX__)\ngetfsl(val,id) asm volatile("get\\t%0,rfsl" stringify(id) : "=d"(val))\nXPAR_MICROBLAZE_M_AXI_DC_ADDR_WIDTH 32\n_wcrtomb_state\n__SIZEOF_WCHAR_T__ 4\nXil_L1ICacheInvalidate() microblaze_invalidate_icache()\nXPAR_MICROBLAZE_0_S13_AXIS_DATA_WIDTH 32\nXIN_SVC_ALL_ISRS_OPTION 2UL\n__FLT_EVAL_METHOD__ 0\nXIL_ASSERT_H \nXPAR_SHARE_AXI_BRAM_CTRL_0_ECC_ONOFF_RESET_VALUE 0U\n_CTYPE_H_ \n__WINT_MIN__ 0U\nXPAR_AXI_DMA_0_INCLUDE_S2MM 0\nAUDIO_SAMPLING_RATE 48000\n__INT8_MAX__ 0x7f\nXAxiDma_BdSetVSize(BdPtr,VSize) { u32 val; val = (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STRIDE_VSIZE_OFFSET) & ~XAXIDMA_BD_VSIZE_FIELD_MASK); val |= ((u32)(VSize) << XAXIDMA_BD_VSIZE_FIELD_SHIFT); XAxiDma_BdWrite((BdPtr), XAXIDMA_BD_STRIDE_VSIZE_OFFSET, val); }\nXPAR_MICROBLAZE_USE_REORDER_INSTR 1\nXPAR_MICROBLAZE_S11_AXIS_DATA_WIDTH 32\nLastBdAddr\n__INT_LEAST32_MAX__ 0x7fffffffL\ncmd_channel\nXPAR_MICROBLAZE_0_M_AXI_DC_AWUSER_WIDTH 5\nXPAR_XEMACPS_0_DEVICE_ID XPAR_PS7_ETHERNET_0_DEVICE_ID\n__GNUCLIKE_BUILTIN_VARARGS 1\nUINT32_C(x) __UINT32_C(x)\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_ECC_STATUS_REGISTERS 0U\n__ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) cname\nXPAR_MICROBLAZE_M_AXI_IC_AWUSER_WIDTH 5\nXPAR_MICROBLAZE_0_INTERRUPT_IS_EDGE 1\n_SYS__INTSUP_H \n___int_least16_t_defined 1\nL_tmpnam FILENAME_MAX\nXPAR_BRAM_3_HIGHADDR 0x04B01FFFU\nXPAR_SHARE_AXI_BRAM_CTRL_0_ECC_ONOFF_REGISTER 0U\nowner_id\n_REENT_RAND48_SEED(ptr) ((ptr)->_r48->_seed)\nXIntc_MasterDisable(BaseAddress) XIntc_Out32((BaseAddress) + XIN_MER_OFFSET, 0)\nXPAR_MICROBLAZE_M_AXI_DP_THREAD_ID_WIDTH 1\nchange_state(state,color) c->drm_state = state; setLED(led, color);\n_SYS_SIZE_T_H \n__VALIST __gnuc_va_list\nXPAR_MICROBLAZE_0_TRACE 0\nXPAR_MICROBLAZE_0_M9_AXIS_PROTOCOL GENERIC\n__UINT_FAST16_MAX__ 0xffffffffU\n__UINT_FAST64_TYPE__ long long unsigned int\nINT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)\nRESTART\nXPAR_BRAM_0_ECC_ONOFF_REGISTER 0U\nrids\nXPAR_MICROBLAZE_0_S4_AXIS_PROTOCOL GENERIC\nXST_FLASH_ERASE_SUSPENDED 1129L\nXPAR_XSDPS_0_HAS_CD 1\n__locks_shared(...) __lock_annotate(shared_lock_function(__VA_ARGS__))\nXAXIDMA_BD_HW_NUM_BYTES 52\nXPAR_AXIDMA_0_BASEADDR 0x04B10000\nXAXIDMA_BD_STS_ALL_MASK 0xFC000000\nXPAR_MICROBLAZE_0_M_AXI_DC_USER_VALUE 31\nXAXIDMA_ERR_SLAVE_MASK 0x00000020\n__SIZE_MAX__ 0xffffffffU\nXST_RESET_ERROR 8L\n_SYS_TYPES_FD_SET \nUTIL_H \n_RAND48_MULT_0 (0xe66d)\nXAxiDma_BdSetTUser(BdPtr,TUser) { u32 val; val = (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_MCCTL_OFFSET) & ~XAXIDMA_BD_TUSER_FIELD_MASK); val |= ((u32)(TUser) << XAXIDMA_BD_TUSER_FIELD_SHIFT); XAxiDma_BdWrite((BdPtr), XAXIDMA_BD_MCCTL_OFFSET, val); }\nAXIDMA_CHANNEL_HALTED 2\nXST_TMRCTR_TIMER_FAILED 1226\n_REENT_EMERGENCY(ptr) ((ptr)->_emergency)\nXIL_EXCEPTION_ID_DIV_BY_ZERO 5U\n__FLT_MAX_10_EXP__ 38\nXAXIDMA_BD_NDESC_OFFSET 0x00\nXPAR_MICROBLAZE_0_LOCKSTEP_SLAVE 0\n__ULong\nXST_IPIF_IP_ACK_ERROR 537L\nXPAR_MICROBLAZE_0_S15_AXIS_DATA_WIDTH 32\nXAxiDma_BdRingGetFreeCnt(RingPtr) ((RingPtr)->FreeCnt)\n__UINT_FAST8_MAX__ 0xffffffffU\nfsl_isinvalid(result) asm volatile("addic\\t%0,r0,0" : "=d"(result))\n_Kmax (sizeof (size_t) << 3)\nXPAR_MICROBLAZE_0_FSL_LINKS 0\nUINT16_C(x) __UINT16_C(x)\nXST_DEVICE_BUSY 21L\nXPAR_PS7_GPIO_0_DEVICE_ID 0\nUINT_FAST16_MAX (__UINT_FAST16_MAX__)\nXAxiDma_IntrGetIrq(InstancePtr,Direction) (XAxiDma_ReadReg((InstancePtr)->RegBase + (XAXIDMA_RX_OFFSET * Direction), XAXIDMA_SR_OFFSET) & XAXIDMA_IRQ_ALL_MASK)\nXPAR_AXIDMA_0_INCLUDE_MM2S_DRE 0\n__need_NULL\noffsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)\nXPAR_AXI_DMA_0_INCLUDE_MM2S_DRE 0\n__datatype_type_tag(kind,type) \nXPAR_MICROBLAZE_0_USE_FPU 0\nXPAR_BRAM_1_CE_FAILING_REGISTERS 0U\n__always_inline __attribute__((__always_inline__))\n__containerof(x,s,m) ({ const volatile __typeof(((s *)0)->m) *__x = (x); __DEQUALIFY(s *, (const volatile char *)__x - __offsetof(s, m));})\nXil_Out16LE Xil_Out16\nXCACHE_ENABLE_DCACHE() \nXPAR_MB_DMA_AXI_BRAM_CTRL_0_UE_FAILING_REGISTERS 0U\n__packed __attribute__((__packed__))\n__DEC32_MIN_EXP__ (-94)\nXST_FLASH_CFI_QUERY_ERROR 1138L\nXPAR_PWM_NUM_INSTANCES 1\nXPAR_MICROBLAZE_0_S8_AXIS_PROTOCOL GENERIC\nXIL_EXCEPTION_ID_FSL 0U\nXPAR_MICROBLAZE_I_LMB 1\n_B 0200\n_NEWLIB_VERSION "2.4.0"\nXIL_EXCEPTION_ID_FIRST 0U\n__offsetof(type,field) offsetof(type, field)\n_strtok_last\nXPAR_MICROBLAZE_0_RESET_MSR_EE 0\nXPAR_MICROBLAZE_0_USE_BRANCH_TARGET_CACHE 0\nXPAR_AXI_DMA_0_ENABLE_MULTI_CHANNEL 0\nXPAR_MICROBLAZE_0_USE_ICACHE 0\nXPAR_BRAM_2_FAULT_INJECT 0U\nXST_USB_NO_BUF 1414\nXPAR_MICROBLAZE_LOCKSTEP_SLAVE 0\n_SYS__TYPES_H \nXPAR_AXI_INTC_0_DEVICE_ID 0\nXST_INVALID_PARAM 15L\n_RAND48_SEED_2 (0x1234)\n__LONG_MAX__ 0x7fffffffL\nXST_NOT_INTERRUPT 20L\n_HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1\n__RCSID(s) struct __hack\n__INT32_C(c) c ## L\n_AND ,\n__END_DECLS \nFreeHead\nXAxiDma_BdGetVSize(BdPtr) ((XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STRIDE_VSIZE_OFFSET)) & XAXIDMA_BD_VSIZE_FIELD_MASK)\nsizetype\n___int_least64_t_defined 1\n__DEC64_EPSILON__ 1E-15DD\n_seed\nset_stopped() change_state(STOPPED, RED)\n_seek\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_WRITE_ACCESS 2U\nXPAR_AXI_DMA_0_MICRO_DMA 0\n__DEC32_MAX_EXP__ 97\n__SLBF 0x0001\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_S_AXI_BASEADDR 0xC0000000U\nXPAR_MICROBLAZE_0_S14_AXIS_PROTOCOL GENERIC\nXIL_COMPONENT_IS_STARTED 0x22222222U\nXST_INTC_FAIL_SELFTEST 1201\nXIL_EXCEPTION_ID_LAST XIL_EXCEPTION_ID_MMU\nXAxiDma_BdSetId(BdPtr,Id) (XAxiDma_BdWrite((BdPtr), XAXIDMA_BD_ID_OFFSET, (UINTPTR)(Id)))\nXPAR_AXI_INTC_0_TYPE 0U\nXST_VDMA_MISMATCH_ERROR 1430\n_STDIO_H_ \nXPAR_BRAM_0_HIGHADDR 0x0001FFFFU\nXAXIDMA_ERR_SG_SLV_MASK 0x00000200\nXIL_TYPES_H \nXAxiDma_BdRingIntGetEnabled(RingPtr) (XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_CR_OFFSET) & XAXIDMA_IRQ_ALL_MASK)\nfast_putc(x,p) (--(p)->_w < 0 ? __swbuf_r(_REENT, (int)(x), p) == EOF : (*(p)->_p = (x), (p)->_p++, 0))\nXST_IIC_TBA_READBACK_ERROR 1087\nsbea(lladdr,data) ({ __asm__ __volatile__("sbea\\t%0,%M1,%L1\\n" ::"d"(data), "d"(lladdr)); })\nXIntc_Out32 Xil_Out32\nXST_DMA_SG_BD_NOT_COMMITTED 524L\nXIN_IVR_OFFSET 24\n__lock_release_recursive(lock) (_CAST_VOID 0)\nXPAR_BRAM_3_CE_COUNTER_WIDTH 0U\n__sgetc_raw_r(__ptr,__f) (--(__f)->_r < 0 ? __srget_r(__ptr, __f) : (int)(*(__f)->_p++))\n__size_t__ \n__SYS_CONFIG_H__ \nXPAR_INT_AXI_GPIO_0_GPIO_IO_O_MASK 0X000001U\n__predict_false(exp) __builtin_expect((exp), 0)\n_REENT_SIGNAL_BUF(ptr) ((ptr)->_signal_buf)\n_PTR void *\nisdigit(__c) (__ctype_lookup(__c)&_N)\nCHUNK_SZ 16000\n__CHAR_BIT__ 8\n__INTMAX_TYPE__ long long int\nXPAR_MICROBLAZE_USE_EXT_NM_BRK 0\n__ctype_lookup(__c) ((__ctype_ptr__+sizeof(""[__c]))[(int)(__c)])\n_POINTER_INT long\n_ATEXIT_INIT {_NULL, 0, {_NULL}, _NULL}\n_REENT_RAND48_ADD(ptr) ((ptr)->_r48->_add)\nXPAR_MICROBLAZE_M11_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_COMPONENT_NAME system_microblaze_0_0\nXPAR_PS7_ETHERNET_0_BASEADDR 0xE000B000\nXPAR_MICROBLAZE_D_AXI 1\n__warn_references(sym,msg) __asm__(".stabs \\"" msg "\\",30,0,0,0"); __asm__(".stabs \\"_" #sym "\\",1,0,0,0")\n__has_builtin(x) 0\nXPAR_MICROBLAZE_I_LMB_MON 0\n_REENT_CHECK_ASCTIME_BUF(var) _REENT_CHECK(var, _asctime_buf, char *, _REENT_ASCTIME_SIZE, memset((var)->_asctime_buf, 0, _REENT_ASCTIME_SIZE))\nXPAR_MICROBLAZE_PVR_USER2 0x00000000\n_BSD_SIZE_T_ \n_freelist\nXPAR_MICROBLAZE_EDGE_IS_POSITIVE 1\nXPAR_MICROBLAZE_0_S2_AXIS_DATA_WIDTH 32\n__has_include_next(STR) __has_include_next__(STR)\n_STRING_H_ \nXPAR_MICROBLAZE_NUM_SYNC_FF_DBG_TRACE_CLK 2\n__INTPTR_MAX__ 0x7fffffff\nXPAR_BRAM_1_ECC_STATUS_REGISTERS 0U\n__caddr_t_defined \nRunState\nXPAR_AXI_INTC_0_NUM_INTR_INPUTS 1\nXST_EMAC_PARSE_ERROR 1006L\nFD_ISSET(n,p) ((p)->fds_bits[(n)/NFDBITS] & (1L << ((n) % NFDBITS)))\n__GCC_ATOMIC_POINTER_LOCK_FREE 2\nXil_L2CacheFlush() microblaze_flush_cache_ext()\nmftlbx() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rtlbx\\n" : "=d"(_rval)); _rval; })\n__DBL_MAX__ ((double)1.7976931348623157e+308L)\nXAXIDMA_TX_OFFSET 0x00000000\nputchar(x) putc(x, stdout)\n_RAND48_MULT_1 (0xdeec)\n_offset\nXPAR_BRAM_0_ECC 0U\ntimercmp(tvp,uvp,cmp) (((tvp)->tv_sec == (uvp)->tv_sec) ? ((tvp)->tv_usec cmp (uvp)->tv_usec) : ((tvp)->tv_sec cmp (uvp)->tv_sec))\nquery_song\nXST_IPIF_IP_ENABLE_ERROR 538L\nXPAR_MICROBLAZE_M_AXI_DC_USER_SIGNALS 0\nXPAR_MICROBLAZE_0_M_AXI_DC_DATA_WIDTH 32\nUSERNAMES\nXPAR_MICROBLAZE_0_M_AXI_IC_USER_VALUE 31\nXPAR_MICROBLAZE_0_M7_AXIS_DATA_WIDTH 32\n__need___va_list \n__DEC64_MAX_EXP__ 385\nNUM_PROVISIONED_REGIONS 2\n__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\nXPAR_PS7_I2C_0_HIGHADDR 0xE0004FFF\nXPAR_PROC_BUS_0_FREQ_HZ 100000000\n__LDBL_HAS_DENORM__ 1\n__sbuf\nXPAR_MICROBLAZE_0_M1_AXIS_DATA_WIDTH 32\ndrm_md\nXAXIDMA_ERR_ALL_MASK 0x00000770\nshort +1\nmtpid(v) ({ __asm__ __volatile__("mts\\trpid,%0\\n\\tnop\\n" ::"d"(v)); })\nWINT_MIN (__WINT_MIN__)\n_l64a_buf\nXPAR_MICROBLAZE_M1_AXIS_PROTOCOL GENERIC\nUSERNAME_SZ 64\nXPAR_MICROBLAZE_DIV_ZERO_EXCEPTION 0\nXAXIDMA_BD_STRIDE_FIELD_SHIFT 0\nRegBase\n_RAND48_MULT_2 (0x0005)\nncgetfsl(val,id) asm volatile("ncget\\t%0,rfsl" stringify(id) : "=d"(val))\n_CLOCKID_T_ unsigned long\n__CC_SUPPORTS_VARADIC_XXX 1\n__XUINT64__ \n__GCC_ATOMIC_INT_LOCK_FREE 2\nXAxiDma_BdGetCtrl(BdPtr) (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_CTRL_LEN_OFFSET) & XAXIDMA_BD_CTRL_ALL_MASK)\nXST_HWICAP_WRITE_DONE 1421\n__lockable __lock_annotate(lockable)\ntimeradd(tvp,uvp,vvp) do { (vvp)->tv_sec = (tvp)->tv_sec + (uvp)->tv_sec; (vvp)->tv_usec = (tvp)->tv_usec + (uvp)->tv_usec; if ((vvp)->tv_usec >= 1000000) { (vvp)->tv_sec++; (vvp)->tv_usec -= 1000000; } } while (0)\nXAXIDMA_BD_HAS_DRE_SHIFT 8\n__has_extension __has_feature\n__REGISTER_PREFIX__ \nmb_suspend() ({ __asm__ __volatile__("suspend\\t"); })\nXAxiDma_BdWrite(BaseAddress,Offset,Data) (*(u32 *)((UINTPTR)(void *)(BaseAddress) + (u32)(Offset))) = (u32)(Data)\n__unlocks(...) __lock_annotate(unlock_function(__VA_ARGS__))\n_REENT_MP_RESULT_K(ptr) ((ptr)->_mp->_result_k)\nXPAR_MICROBLAZE_M_AXI_IC_USER_VALUE 31\nXIN_INTC_NOCASCADE 0\nHwHead\nXil_AssertNonvoidAlways() { Xil_Assert(__FILE__, __LINE__); Xil_AssertStatus = XIL_ASSERT_OCCURRED; return 0; }\nXST_SPI_TOO_MANY_SLAVES 1156\nXPAR_BRAM_2_WRITE_ACCESS 0U\nXPAR_BRAM_1_ECC 0U\nXil_Htonl Xil_EndianSwap32\n_asctime_buf\nXPAR_BRAM_1_CE_COUNTER_WIDTH 0U\nXAxiDma_BdGetTId(BdPtr) ((XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STS_OFFSET)) & XAXIDMA_BD_TID_FIELD_MASK)\nXAXIDMA_COALESCE_MASK 0x00FF0000\nXAXIDMA_MAX_TRANSFER_LEN 0x7FFFFF\n__wch\nXST_NOT_POLLED 10L\nSEEK_CUR 1\nXST_PFIFO_NO_ROOM 502L\nXPAR_MICROBLAZE_0_ICACHE_ALWAYS_USED 0\n_wcsrtombs_state\nmfslr() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rslr\\n" : "=d"(_rval)); _rval; })\nXST_USB_BUF_TOO_BIG 1413\nXPAR_AXIDMA_0_M_AXI_MM2S_DATA_WIDTH 32\n__INT_FAST8_TYPE__ int\nXPAR_MICROBLAZE_M5_AXIS_PROTOCOL GENERIC\nXPAR_XIICPS_0_BASEADDR 0xE0004000\nUINTMAX_C(x) __UINTMAX_C(x)\nXPAR_MICROBLAZE_0_USE_DIV 0\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_BASEADDR 0x00000000U\nAddrWidth\n__ptr_t void *\n__strftimelike(fmtarg,firstvararg) __attribute__((__format__ (__strftime__, fmtarg, firstvararg)))\nXAXIDMA_BD_MINIMUM_ALIGNMENT 0x40\nXPAR_MICROBLAZE_S0_AXIS_PROTOCOL GENERIC\nXPAR_AXI_DMA_0_HIGHADDR 0x04B1FFFF\nunsigned\nXPAR_SHARE_AXI_BRAM_CTRL_0_CE_FAILING_REGISTERS 0U\nXPAR_MICROBLAZE_0_M_AXI_IC_USER_SIGNALS 0\n_LOCK_RECURSIVE_T\nXPAR_MICROBLAZE_M_AXI_IC_RUSER_WIDTH 1\n__LARGEFILE_VISIBLE 0\n__sgetc_r(__ptr,__p) __sgetc_raw_r(__ptr, __p)\n__UINTMAX_C(c) c ## ULL\n__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD\n__need_ptrdiff_t\nXPAR_MICROBLAZE_0_DATA_SIZE 32\nXPAR_PS7_ETHERNET_0_ENET_SLCR_100MBPS_DIV1 5\n__requires_exclusive(...) __lock_annotate(exclusive_locks_required(__VA_ARGS__))\nXPAR_MICROBLAZE_M1_AXIS_DATA_WIDTH 32\ninternal_state\nXAXIDMA_IRQ_DELAY_MASK 0x00002000\n_PARAMS(paramlist) paramlist\nXAXIDMA_BD_CTRL_TXEOF_MASK 0x04000000\nUINT8_MAX (__UINT8_MAX__)\nXPAR_MICROBLAZE_0_M_AXI_DP_DATA_WIDTH 32\nXPAR_XUSBPS_0_DEVICE_ID XPAR_PS7_USB_0_DEVICE_ID\nXAxiDma_BdRingNext(RingPtr,BdPtr) (((UINTPTR)(BdPtr) >= (RingPtr)->LastBdAddr) ? (UINTPTR)(RingPtr)->FirstBdAddr : (UINTPTR)((UINTPTR)(BdPtr) + (RingPtr)->Separation))\nXPAR_MICROBLAZE_M11_AXIS_DATA_WIDTH 32\nXPAR_BRAM_2_ECC 0U\nXIntc_EnableIntr(BaseAddress,EnableMask) XIntc_Out32((BaseAddress) + XIN_IER_OFFSET, (EnableMask))\n__DBL_HAS_DENORM__ 1\n__ATFILE_VISIBLE 1\n_GLOBAL_REENT _global_impure_ptr\nULONG64_HI_MASK 0xFFFFFFFF00000000U\nXPAR_AXI_DMA_0_BASEADDR 0x04B10000\n_wctomb_state\nXAXIDMA_BD_ARCACHE_FIELD_SHIFT 24\nINTMAX_C(x) __INTMAX_C(x)\nIntcType\n__PTRDIFF_TYPE__ int\nXST_IPIF_RESET_REGISTER_ERROR 532L\nXPAR_MICROBLAZE_MMU_TLB_ACCESS 3\n__GCC_ATOMIC_CHAR16_T_LOCK_FREE 1\nXPAR_MICROBLAZE_0_NUMBER_OF_WR_ADDR_BRK 2\nXPAR_MICROBLAZE_ID 0\nXPAR_PS7_ETHERNET_0_IS_CACHE_COHERENT 0\nXPAR_XGPIO_NUM_INSTANCES 1\n__GNUC_STDC_INLINE__ 1\nXPAR_MICROBLAZE_M9_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_DCACHE_HIGHADDR 0x3FFFFFFF\nlogout\nuid_to_username\n__guarded_by(x) __lock_annotate(guarded_by(x))\nXST_DEVICE_IS_STARTED 5L\nXST_DMA_SG_LIST_EXISTS 522L\nXPAR_MICROBLAZE_S4_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_D_LMB 1\n__EXPORT \nXPAR_GPIO_0_HIGHADDR 0x04B2FFFF\nXST_NAND_READY 1442L\nXPAR_MICROBLAZE_0_DCACHE_VICTIMS 0\n_SYS__TIMEVAL_H_ \nGNU C11 6.2.0 -mlittle-endian -mcpu=v10.0 -mxl-soft-mul -g3 -O0 -fmessage-length=0 -ffunction-sections -fdata-sections\nXPAR_GPIO_0_IS_DUAL 0\nXST_PFIFO_DEADLOCK 505L\nIsStarted\n__XSI_VISIBLE 0\nXPAR_MICROBLAZE_RESET_MSR_EIP 0\nLOGOUT\n_iobs\nRingIndex\n_emergency\n__PTRDIFF_T \n__VERSION__ "6.2.0"\nFD_ZERO(p) (__extension__ (void)({ size_t __i; char *__tmp = (char *)p; for (__i = 0; __i < sizeof (*(p)); ++__i) *__tmp++ = 0; }))\nXAXIDMA_CR_KEYHOLE_MASK 0x00000008\nEXIT_SUCCESS 0\nXIL_EXCEPTION_ID_ILLEGAL_OPCODE 2U\nXST_WDTTB_TIMER_FAILED 1251L\nXPAR_AXI_DMA_0_NUM_S2MM_CHANNELS 1\nXST_IPIF_DEVICE_PENDING_ERROR 539L\nXAXIDMA_BD_BYTES_TO_CLEAR 48\nXST_DMA_SG_LIST_FULL 517L\nXPAR_MICROBLAZE_0_M15_AXIS_DATA_WIDTH 32\nmtmsr(v) ({ __asm__ __volatile__("mts\\trmsr,%0\\n\\tnop\\n" ::"d"(v)); })\n__LEAST8 "hh"\n_rand_next\nXPAR_BRAM_3_ECC 0U\nXPAR_MICROBLAZE_S0_AXIS_DATA_WIDTH 32\nXPAR_GPIO_0_BASEADDR 0x04B20000\nnum_regions\n_U 01\nXPAR_XBRAM_NUM_INSTANCES 4U\nXil_AssertVoid(Expression) { if (Expression) { Xil_AssertStatus = XIL_ASSERT_NONE; } else { Xil_Assert(__FILE__, __LINE__); Xil_AssertStatus = XIL_ASSERT_OCCURRED; return; } }\nXAXIDMA_BD_STS_OFFSET 0x1C\nXPAR_AXI_INTC_0_HAS_FAST 0\nXPAR_AXI_DMA_0_DEVICE_ID 0\nXAXIDMA_BD_ARCACHE_FIELD_MASK 0x0F000000\nXPAR_MICROBLAZE_0_DCACHE_HIGHADDR 0x3FFFFFFF\n_CAST_VOID (void)\n__SIZE_T \nXUINT64_MSW(x) ((x).Upper)\n__lock_close_recursive(lock) (_CAST_VOID 0)\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_FAULT_INJECT 0U\n__CHAR32_TYPE__ long unsigned int\nXPAR_MICROBLAZE_S8_AXIS_PROTOCOL GENERIC\n_maxwds\nXPAR_MICROBLAZE_USE_BARREL 0\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_DATA_WIDTH 32U\nXPAR_AXI_DMA_0_S2MM_BURST_SIZE 16\nPostHead\nXPAR_MICROBLAZE_0_ADDR_SIZE 32\nXPAR_MICROBLAZE_M5_AXIS_DATA_WIDTH 32\nusername_to_uid\n__SIZEOF_POINTER__ 4\n__DOTS , ...\nINT8_C(x) __INT8_C(x)\nXPAR_XEMACPS_0_ENET_SLCR_100Mbps_DIV1 5\n__pure __attribute__((__pure__))\nXPAR_MICROBLAZE_M15_AXIS_DATA_WIDTH 32\n_WANT_IO_LONG_DOUBLE 1\nXPAR_MICROBLAZE_FAULT_TOLERANT 0\nXPAR_BRAM_0_DEVICE_ID XPAR_DATA_LMB_BRAM_IF_CNTLR_1_DEVICE_ID\n_T_SIZE \nsuboptarg\nXPAR_MICROBLAZE_IC_AXI_MON 0\nXAxiDma_BdRingSnapShotCurrBd(RingPtr) { if (!RingPtr->IsRxChannel) { (RingPtr)->BdaRestart = (XAxiDma_Bd *)(UINTPTR)XAxiDma_ReadReg( (RingPtr)->ChanBase, XAXIDMA_CDESC_OFFSET); } else { if (!RingPtr->RingIndex) { (RingPtr)->BdaRestart = (XAxiDma_Bd *)(UINTPTR)XAxiDma_ReadReg( (RingPtr)->ChanBase, XAXIDMA_CDESC_OFFSET); } else { (RingPtr)->BdaRestart = (XAxiDma_Bd *)(UINTPTR)XAxiDma_ReadReg( (RingPtr)->ChanBase, (XAXIDMA_RX_CDESC0_OFFSET + (RingPtr->RingIndex - 1) * XAXIDMA_RX_NDESC_OFFSET)); } } }\nXAxiDma_BdGetBufAddr(BdPtr) (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_BUFA_OFFSET))\n__int20\nXPAR_PS7_ETHERNET_0_ENET_SLCR_100MBPS_DIV0 8\nXPAR_BRAM_0_CE_FAILING_REGISTERS 0U\n__CONCAT1(x,y) x ## y\nXIntc_In32 Xil_In32\n__clock_t_defined \nXPAR_MICROBLAZE_LOCKSTEP_MASTER 0\n_BSD_WCHAR_T_ \nXPAR_MICROBLAZE_M_AXI_IC_DATA_WIDTH 32\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_HIGHADDR 0x0001FFFFU\n__WCHAR_MAX__ 0x7fffffff\n__GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))\nXPAR_MICROBLAZE_0_M_AXI_IC_ADDR_WIDTH 32\nXPAR_AXIDMA_0_DEVICE_ID XPAR_AXI_DMA_0_DEVICE_ID\nXAXIDMA_BD_USR4_OFFSET 0x30\nXPAR_SHARE_AXI_BRAM_CTRL_0_FAULT_INJECT 0U\n__LONG_LONG_MAX__ 0x7fffffffffffffffLL\nXPAR_MICROBLAZE_0_M_AXI_DC_BUSER_WIDTH 1\nINT8_MIN (-__INT8_MAX__ - 1)\nXST_DEVICE_IS_STOPPED 6L\n_T_WCHAR_ \nXST_IIC_DRR_READBACK_ERROR 1085\n_NOARGS void\nXST_IPIF_DEVICE_ACK_ERROR 534L\n_REENT_MBRLEN_STATE(ptr) ((ptr)->_misc->_mbrlen_state)\nXAxiDma_GetTxRing(InstancePtr) (&((InstancePtr)->TxBdRing))\nXPAR_MICROBLAZE_MMU_ITLB_SIZE 2\n_POSIX_C_SOURCE\nXPAR_PS7_SD_0_MIO_BANK 0\nXPAR_XUSBPS_0_BASEADDR 0xE0002000\nNumberofIntrs\nXAXIDMA_HW_H_ \nXPAR_BRAM_1_UE_FAILING_REGISTERS 0U\nXPAR_MICROBLAZE_ALLOW_DCACHE_WR 1\nXCACHE_DISABLE_DCACHE() \n__asserts_exclusive(...) __lock_annotate(assert_exclusive_lock(__VA_ARGS__))\n__SRW 0x0010\nXPAR_MICROBLAZE_0_DP_AXI_MON 0\nXPAR_MICROBLAZE_DCACHE_BYTE_SIZE 8192\n_SYS_CDEFS_H_ \nXAxiDma_BdSetARCache(BdPtr,ARCache) { u32 val; val = (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_MCCTL_OFFSET) & ~XAXIDMA_BD_ARCACHE_FIELD_MASK); val |= ((u32)(ARCache) << XAXIDMA_BD_ARCACHE_FIELD_SHIFT); XAxiDma_BdWrite((BdPtr), XAXIDMA_BD_MCCTL_OFFSET, val); }\nXPAR_MICROBLAZE_M_AXI_IC_ARUSER_WIDTH 5\nXPAR_MICROBLAZE_S4_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_0_COMPONENT_NAME system_microblaze_0_0\nXPAR_BRAM_3_ECC_ONOFF_RESET_VALUE 0U\nXAXIDMA_BD_HAS_DRE_MASK 0xF00\nXPAR_MICROBLAZE_0_NUM_SYNC_FF_CLK_IRQ 1\n_tolower(__c) ((unsigned char)(__c) - \'A\' + \'a\')\n_close\nXPAR_MICROBLAZE_BASE_VECTORS 0x0000000000000000\nXAXIDMA_BD_STS_INT_ERR_MASK 0x10000000\nlwr(address) ({ u32 _rval; __asm__ __volatile__("lwr\\t%0,%1,r0\\n" : "=d"(_rval) : "d"(address)); _rval; })\nXPAR_FIFO_COUNT_AXI_GPIO_0_IS_DUAL 0\n_glue\n__NEWLIB_H__ 1\nXST_NO_FEATURE 19L\nUINT_FAST32_MAX (__UINT_FAST32_MAX__)\nXPAR_MICROBLAZE_0_M_AXI_IP_DATA_WIDTH 32\nXAXIDMA_BD_STS_COMPLETE_MASK 0x80000000\nXPAR_XSDPS_0_HIGHADDR 0xE0100FFF\n__RCSID_SOURCE(s) struct __hack\nmb_swapb(v) ({ u32 _rval; __asm__ __volatile__("swapb\\t%0,%1\\n" : "=d"(_rval) : "d"(v)); _rval; })\nXAxiDma_BdRingEnableCyclicDMA(RingPtr) (RingPtr->Cyclic = 1)\n__UINT_LEAST16_TYPE__ short unsigned int\nXPAR_MICROBLAZE_M9_AXIS_DATA_WIDTH 32\nXAXIDMA_SGCTL_OFFSET 0x0000002c\nXENV_TIME_STAMP_GET(StampPtr) \n__pure2 __attribute__((__const__))\n__LDBL_HAS_QUIET_NAN__ 1\nXPAR_BRAM_1_WRITE_ACCESS 2U\nXPAR_MICROBLAZE_RESET_MSR_BIP 0\ncputfsl_interruptible(val,id) asm volatile( "\\n1:\\n\\tncput\\t%0,rfsl" stringify(id) "\\n\\t" "addic\\tr18,r0,0\\n\\t" "bnei\\tr18,1b\\n" ::"d"(val) : "r18")\nXPAR_MICROBLAZE_0_I_LMB 1\nXPAR_MICROBLAZE_CORE_CLOCK_FREQ_HZ 100000000\n__PLATFORM_CONFIG_H_ \nSRC_CONSTANTS_H_ \n__reent_assert(x) ((void)0)\n_POSIX_C_SOURCE 200809L\nXAxiDma_ReadReg(BaseAddress,RegOffset) XAxiDma_In32((BaseAddress) + (RegOffset))\nINTPTR_MAX (__INTPTR_MAX__)\nXAxiDma_BdRingGetIrq(RingPtr) (XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_SR_OFFSET) & XAXIDMA_IRQ_ALL_MASK)\nXPAR_PS7_SD_0_BUS_WIDTH 0\n__u_int_defined \nXil_Ntohl Xil_EndianSwap32\nXPAR_MICROBLAZE_M_AXI_DC_EXCLUSIVE_ACCESS 0\nXPAR_MICROBLAZE_0_ECC_USE_CE_EXCEPTION 0\n__LDBL_MANT_DIG__ 53\nset_playing() change_state(PLAYING, GREEN)\nXPAR_MICROBLAZE_0_M0_AXIS_PROTOCOL GENERIC\ncolor\nXAxiDma_BdWrite64(BaseAddress,Offset,Data) (*(u64 *)((UINTPTR)(void *)(BaseAddress) + (u32)(Offset))) = (u64)(Data)\nXPAR_MICROBLAZE_DCACHE_LINE_LEN 4\n_EXFNPTR(name,proto) (* name) proto\n_Bigint\nFIFO_CAP 4096 * 4\nXPAR_MICROBLAZE_M_AXI_IP_DATA_WIDTH 32\nUINT_LEAST16_MAX (__UINT_LEAST16_MAX__)\n_misc_reent\nquery_player\nINT8_MAX (__INT8_MAX__)\nPreCnt\nHAVE_INITFINI_ARRAY 1\nXPAR_SHARE_AXI_BRAM_CTRL_0_DEVICE_ID 3U\nXPAR_AXIDMA_0_INCLUDE_MM2S 1\nXAXIDMA_BD_HAS_DRE_OFFSET 0x3C\nXPAR_BRAM_0_ECC_STATUS_REGISTERS 0U\n___int8_t_defined 1\nHasSg\n__FAST64 "ll"\n_REENT_STRTOK_LAST(ptr) ((ptr)->_misc->_strtok_last)\nNFDBITS (sizeof (fd_mask) * 8)\ngen_song_md\nXENV_STANDALONE_H \nXPAR_INS_LMB_BRAM_IF_CNTLR_0_ECC_ONOFF_REGISTER 0U\n__uintptr_t\nXPAR_MICROBLAZE_0_S10_AXIS_DATA_WIDTH 32\n_REENT_RAND48_MULT(ptr) ((ptr)->_r48->_mult)\n__BSD_VISIBLE 1\n_atexit0\nXIL_COMPONENT_IS_READY 0x11111111U\nXIN_MER_OFFSET 28\nINT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)\nXPAR_PS7_ETHERNET_0_ENET_SLCR_10MBPS_DIV0 8\nXPAR_AXI_DMA_0_INCLUDE_MM2S 1\nXPAR_MICROBLAZE_S8_AXIS_DATA_WIDTH 32\nXST_FLASH_BLOCKING_CALL_ERROR 1137L\n__UINT_LEAST32_MAX__ 0xffffffffUL\nis_provisioned_uid\n__DEVOLATILE(type,var) ((type)(__uintptr_t)(volatile void *)(var))\nXPAR_MICROBLAZE_S10_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_BRANCH_TARGET_CACHE_SIZE 0\nXAXIDMA_BD_CTRL_TXSOF_MASK 0x08000000\nNULL ((void *)0)\nXST_FLASH_ERROR 1128L\n__ORDER_BIG_ENDIAN__ 4321\nXPAR_MICROBLAZE_0_M4_AXIS_PROTOCOL GENERIC\n_X 0100\nXPAR_MICROBLAZE_PIADDR_SIZE 32\n_getdate_err\n_MACHINE__DEFAULT_TYPES_H \nXPAR_AXI_DMA_0_INCLUDE_SG 0\n__UINT_FAST32_TYPE__ unsigned int\nBaseAddress\n_SYS__SIGSET_H_ \nswr(address,data) ({ __asm__ __volatile__("swr\\t%0,%1,r0\\n" ::"d"(data), "d"(address)); })\n__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\nXPAR_AXI_DMA_0_INCLUDE_S2MM_DRE 0\nXST_EMAC_COLLISION_ERROR 1007L\n__MICROBLAZEEL__ 1\nXPAR_MICROBLAZE_0_D_AXI 1\nSTOP\n_POSIX_SOURCE 1\nUINT32_MAX (__UINT32_MAX__)\nXPAR_AXI_DMA_0_NUM_MM2S_CHANNELS 1\nXPAR_MICROBLAZE_EDK_IPTYPE PROCESSOR\n__generic(expr,t,yes,no) _Generic(expr, t: yes, default: no)\nXCACHE_DISABLE_ICACHE() \nXCACHE_FLUSH_DCACHE_RANGE(Addr,Len) \nXPAR_MICROBLAZE_0_DCACHE_BYTE_SIZE 8192\nXPAR_MICROBLAZE_M_AXI_IP_THREAD_ID_WIDTH 1\nXPAR_INTC_0_KIND_OF_INTR 0xFFFFFFFFU\nXAXIDMA_BD_STS_SLV_ERR_MASK 0x20000000\nXST_DMA_SG_LIST_ERROR 526L\nXPAR_MICROBLAZE_DYNAMIC_BUS_SIZING 0\n__need_wchar_t\n__FLT_DECIMAL_DIG__ 9\n__INT32_TYPE__ long int\nmfmsr() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rmsr\\n" : "=d"(_rval)); _rval; })\n_T_PTRDIFF \n_REENT_SMALL \nXST_EMAC_MEMORY_ALLOC_ERROR 1002L\nFreeCnt\nXST_DMA_RESET_REGISTER_ERROR 512L\nva_arg(v,l) __builtin_va_arg(v,l)\nxdbg_printf(...) \nXPAR_MICROBLAZE_0_BRANCH_TARGET_CACHE_SIZE 0\nXST_UART_CONFIG_ERROR 1053L\nXAxiDma_BdGetLength(BdPtr,LengthMask) (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_CTRL_LEN_OFFSET) & LengthMask)\n_READ_WRITE_RETURN_TYPE int\ndigital_out\nmicroblaze_getfpex_operand_a() ({ extern u32 mb_fpex_op_a; mb_fpex_op_a; })\nlhuea(lladdr) ({ u32 _rval; __asm__ __volatile__("lhuea\\t%0,%M1,%L1\\n" : "=d"(_rval) : "d"(lladdr)); _rval; })\nXPAR_MICROBLAZE_M_AXI_DC_BUSER_WIDTH 1\n__ctype_ptr__\nXPAR_MICROBLAZE_0_M8_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_ASYNC_WAKEUP 3\nXPAR_INTC_0_HIGHADDR 0x04B3FFFFU\n__UINTPTR_TYPE__ unsigned int\nXENV_TIME_STAMP_DELTA_MS(Stamp1Ptr,Stamp2Ptr) (0)\nXPAR_MICROBLAZE_0_CACHE_BYTE_SIZE 8192\n__FINITE_MATH_ONLY__ 0\nXPAR_MICROBLAZE_0_S3_AXIS_PROTOCOL GENERIC\nmtshr(v) ({ __asm__ __volatile__("mts\\trshr,%0\\n\\tnop\\n" ::"d"(v)); })\nInitialized\nXAxiDma_Bd\nXil_L1ICacheInvalidateRange(Addr,Len) microblaze_invalidate_icache_range((Addr), (Len))\nXPAR_MICROBLAZE_0_I_AXI 1\nXAXIDMA_RX_NDESC_OFFSET 0x00000020\nXPAR_MICROBLAZE_0_USE_MMU 0\nXST_IIC_STAND_REG_RESET_ERROR 1079\n_REENT_INIT(var) { 0, (__FILE *)&__sf_fake_stdin, (__FILE *)&__sf_fake_stdout, (__FILE *)&__sf_fake_stderr, 0, _NULL, 0, 0, "C", _NULL, _NULL, 0, 0, _NULL, _NULL, _NULL, _NULL, _NULL, _REENT_INIT_ATEXIT {_NULL, 0, _NULL}, _NULL, _NULL, _NULL }\nXAXIDMA_IRQ_ALL_MASK 0x00007000\nXIntc_Config\nXPAR_MICROBLAZE_0_M_AXI_IP_THREAD_ID_WIDTH 1\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_FAULT_INJECT 0U\nPTRDIFF_MAX (__PTRDIFF_MAX__)\nUINTMAX_MAX (__UINTMAX_MAX__)\n__sglue\nXPAR_PS7_SD_0_SDIO_CLK_FREQ_HZ 50000000\nINT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)\nXPAR_XGPIOPS_NUM_INSTANCES 1\nXAXIDMA_CR_RUNSTOP_MASK 0x00000001\nXPAR_MICROBLAZE_0_DCACHE_ADDR_TAG 17\n_EXPARM(name,proto) (* name) proto\n__daddr_t_defined \nXPAR_MICROBLAZE_DADDR_SIZE 32\nXPAR_MICROBLAZE_PVR_USER1 0x00\nXPAR_MICROBLAZE_ALLOW_ICACHE_WR 1\nXPAR_BRAM_0_WRITE_ACCESS 2U\n__INT16 "h"\nXil_In32LE Xil_In32\nXST_FR_BUF_LOCKED 1402\n__STDINT_EXP(x) __ ##x ##__\nXPAR_MICROBLAZE_0_S1_AXIS_PROTOCOL GENERIC\nset_working() change_state(WORKING, YELLOW)\nXPAR_CPU_CORE_CLOCK_FREQ_HZ 100000000\nXPAR_SHARE_AXI_BRAM_CTRL_0_S_AXI_BASEADDR 0x04B00000U\nXPAR_MICROBLAZE_INTERRUPT_MON 0\n_SYS__STDINT_H \n__XSTRING(x) __STRING(x)\nXPAR_PS7_I2C_0_DEVICE_ID 0\n__GCC_ATOMIC_BOOL_LOCK_FREE 1\n__DEC64_MAX__ 9.999999999999999E384DD\n__INT_FAST32_MAX__ 0x7fffffff\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_S_AXI_CTRL_BASEADDR 0xFFFFFFFFU\n_file\n_flags\nXPAR_MICROBLAZE_0_S7_AXIS_PROTOCOL GENERIC\nXST_FR_NO_BUF 1403\nXAXIDMA_BD_TUSER_FIELD_SHIFT 16\nXST_DMA_SG_NO_DATA 525L\n__ATTRIBUTE_IMPURE_PTR__ \nXPAR_BRAM_1_ECC_ONOFF_RESET_VALUE 1U\n_SIGNED signed\nXPAR_PS7_M_AXI_GP0_S_AXI_BASEADDR 0x40000000\nXPAR_MICROBLAZE_G_USE_EXCEPTIONS 0\nXPAR_XINTC_HAS_CIE 1\nlong +4\n__sFILE\nXPAR_MICROBLAZE_USE_ICACHE 0\n_WANT_IO_LONG_LONG 1\n_fns\nSIZE_MAX (__SIZE_MAX__)\nXIN_IER_OFFSET 8\nXPAR_SHARE_AXI_BRAM_CTRL_0_S_AXI_CTRL_BASEADDR 0xFFFFFFFFU\nXAXIDMA_TDESC_OFFSET 0x00000010\n__scanflike(fmtarg,firstvararg) __attribute__((__format__ (__scanf__, fmtarg, firstvararg)))\nLOWER_32_BITS(n) ((u32)(n))\nXPAR_MICROBLAZE_DEBUG_PROFILE_SIZE 0\n__SIG_ATOMIC_MAX__ 0x7fffffff\nXPAR_MICROBLAZE_0_USE_HW_MUL 0\nXAxiDma_BdRingGetSr(RingPtr) XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_SR_OFFSET)\n__SEOF 0x0020\n__SIZEOF_DOUBLE__ 8\n__UINT_FAST32_MAX__ 0xffffffffU\n__LDBL_MAX_EXP__ 1024\nXST_IS_STARTED 23L\nXPAR_MICROBLAZE_IMPRECISE_EXCEPTIONS 0\nWORKING\nmfpvr(rn) ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rpvr" stringify(rn) "\\n" : "=d"(_rval)); _rval; })\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_BASEADDR 0x00000000U\n_REENT_CHECK_MP(var) _REENT_CHECK(var, _mp, struct _mprec *, sizeof *((var)->_mp), _REENT_INIT_MP(var))\nXST_FR_TX_ERROR 1400\nXPAR_CPU_M_AXI_DP_FREQ_HZ 100000000\nXPAR_AXIDMA_0_NUM_S2MM_CHANNELS 1\n__GNU_VISIBLE 0\n__SWR 0x0008\nXAXIDMA_BD_ARUSER_FIELD_SHIFT 28\nXPAR_AXIDMA_0_SG_INCLUDE_STSCNTRL_STRM 0\nmicroblaze_nbread_cntlfsl(val,id) ncgetfsl(val, id)\nXST_INTC_CONNECT_ERROR 1202\nXIntc\nXPAR_MICROBLAZE_0_M6_AXIS_DATA_WIDTH 32\n_RAND48_SEED_0 (0x330e)\nPROVISIONED_RIDS\nXIN_INT_MASTER_ENABLE_MASK 0x1UL\n__SAPP 0x0100\nXPAR_MICROBLAZE_0_UNALIGNED_EXCEPTIONS 0\nXST_USB_ALREADY_CONFIGURED 1410\n__int32_t\nquery\nmicroblaze_bread_cntlfsl(val,id) cgetfsl(val, id)\nlbuea(lladdr) ({ u32 _rval; __asm__ __volatile__("lbuea\\t%0,%M1,%L1\\n" : "=d"(_rval) : "d"(lladdr)); _rval; })\n__INTMAX_MAX__ 0x7fffffffffffffffLL\n__uint32_t\nwav_size\nstdin (_REENT->_stdin)\nXIN_IVAR_OFFSET 0x100\nXAxiDma_BdSetStride(BdPtr,Stride) { u32 val; val = (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_STRIDE_VSIZE_OFFSET) & ~XAXIDMA_BD_STRIDE_FIELD_MASK); val |= ((u32)(Stride) << XAXIDMA_BD_STRIDE_FIELD_SHIFT); XAxiDma_BdWrite((BdPtr), XAXIDMA_BD_STRIDE_VSIZE_OFFSET, val); }\nXPAR_PS7_UART_0_BASEADDR 0xE0000000\nXPAR_BRAM_3_CE_FAILING_REGISTERS 0U\n__GNUCLIKE_BUILTIN_VAALIST 1\nis_locked\nXAxiDma_IntrDisable(InstancePtr,Mask,Direction) XAxiDma_WriteReg((InstancePtr)->RegBase + (XAXIDMA_RX_OFFSET * Direction), XAXIDMA_CR_OFFSET, (XAxiDma_ReadReg((InstancePtr)->RegBase + (XAXIDMA_RX_OFFSET * Direction), XAXIDMA_CR_OFFSET)) & ~(Mask & XAXIDMA_IRQ_ALL_MASK))\nXAXIDMA_RX_TDESC0_MSB_OFFSET 0x0000004C\n__signed signed\nXAxiDma_BdGetId(BdPtr) (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_ID_OFFSET))\n__value\n_SYS_FEATURES_H \nisxdigit(__c) (__ctype_lookup(__c)&(_X|_N))\n_REENT_MBLEN_STATE(ptr) ((ptr)->_misc->_mblen_state)\nregion_name_to_rid\nXPAR_MICROBLAZE_M10_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_FREQ 100000000\ncp_num\nXCACHE_ENABLE_CACHE() { XCACHE_ENABLE_DCACHE(); XCACHE_ENABLE_ICACHE(); }\n__restrict restrict\nCallBackRef\nXPAR_MICROBLAZE_0_S1_AXIS_DATA_WIDTH 32\n__u_short_defined \n_mprec\nPAUSED\nmyISR\n__need_wchar_t \nXPAR_AXI_DMA_0_M_AXI_S2MM_DATA_WIDTH 32\nUINT_FAST64_MAX (__UINT_FAST64_MAX__)\nTxBdRing\nXAXIDMA_BD_TID_FIELD_SHIFT 8\niscntrl(__c) (__ctype_lookup(__c)&_C)\nmttlbsx(v) ({ __asm__ __volatile__("mts\\trtlbsx,%0\\n\\tnop\\n" ::"d"(v)); })\n__nonnull_all __attribute__((__nonnull__))\n_p5s\n__ATOMIC_ACQ_REL 4\nXPAR_XSPIPS_0_SPI_CLK_FREQ_HZ 166666672\nXPAR_MICROBLAZE_0_M_AXI_DC_USER_SIGNALS 0\n_T_WCHAR \nXPAR_MICROBLAZE_DEBUG_EXTERNAL_TRACE 0\nXPAR_MICROBLAZE_M3_AXIS_PROTOCOL GENERIC\n_SIZET_ \n__INT8_TYPE__ signed char\nXPAR_CPU_M_AXI_IP_FREQ_HZ 100000000\n__LDBL_DENORM_MIN__ 4.9406564584124654e-324L\nAckBeforeService\ncp_xfil_cnt\nXil_In16LE Xil_In16\n__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\nXAxiDma_IntrGetEnabled(InstancePtr,Direction) XAxiDma_ReadReg((InstancePtr)->RegBase + (XAXIDMA_RX_OFFSET * Direction), XAXIDMA_CR_OFFSET) & XAXIDMA_IRQ_ALL_MASK)\n__hidden __attribute__((__visibility__("hidden")))\nXPAR_MICROBLAZE_0_OPTIMIZATION 0\nXAXIDMA_SRCADDR_OFFSET 0x00000018\n_STDDEF_H_ \n_ATFILE_SOURCE 1\nXPAR_AXIDMA_0_c_addr_width 32\nXPAR_MICROBLAZE_0_PVR_USER2 0x00000000\nREGION_NAME_SZ 64\n__GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)\n_ELIDABLE_INLINE static __inline__\nXPAR_MICROBLAZE_ADDR_TAG_BITS 17\nXPAR_BRAM_0_UE_FAILING_REGISTERS 0U\n_REENT_RAND_NEXT(ptr) ((ptr)->_r48->_rand_next)\nXPAR_MICROBLAZE_TRACE 0\nXCACHE_INVALIDATE_DCACHE_RANGE(Addr,Len) \n__INT_FAST32_TYPE__ int\n__lock_init_recursive(lock) (_CAST_VOID 0)\nINTPTR_MIN (-__INTPTR_MAX__ - 1)\nXPAR_XUARTPS_0_HAS_MODEM 0\nTIMESPEC_TO_TIMEVAL(tv,ts) do { (tv)->tv_sec = (ts)->tv_sec; (tv)->tv_usec = (ts)->tv_nsec / 1000; } while (0)\nXPAR_MICROBLAZE_USE_CONFIG_RESET 0\nXIL_ASSERT_OCCURRED 1U\nXPAR_MICROBLAZE_0_M0_AXIS_DATA_WIDTH 32\nXPAR_SHARE_AXI_BRAM_CTRL_0_DATA_WIDTH 32U\n_NOTHROW \nsbr(address,data) ({ __asm__ __volatile__("sbr\\t%0,%1,r0\\n" ::"d"(data), "d"(address)); })\n__CC_SUPPORTS___INLINE__ 1\nXPAR_MICROBLAZE_S11_AXIS_PROTOCOL GENERIC\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_S_AXI_CTRL_BASEADDR 0xFFFFFFFFU\nXIL_EXCEPTION_ID_UNALIGNED_ACCESS 1U\n__DEC64_MANT_DIG__ 16\nset_paused() change_state(PAUSED, BLUE)\nshare_song\nprovisioned_only\nXPAR_BRAM_0_FAULT_INJECT 0U\n__int_fast64_t_defined 1\n_S 010\nXPAR_MICROBLAZE_M0_AXIS_PROTOCOL GENERIC\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_ECC_ONOFF_REGISTER 0U\nswx(address,data) ({ __asm__ __volatile__("swx\\t%0,%1,r0\\n" ::"d"(data), "d"(address)); })\nFOPEN_MAX 20\nHasMm2S\n_REENT_SIGNAL_SIZE 24\nXST_DMA_BD_ERROR 527L\nXST_DEVICE_NOT_FOUND 2L\nFD_SETSIZE 64\nXAxiDma_GetRxRing(InstancePtr) (&((InstancePtr)->RxBdRing[0]))\nmb_printf(...) xil_printf(MB_PROMPT __VA_ARGS__)\n_BSD_PTRDIFF_T_ \n__WCHAR_T \nXAxiDma_BdGetARUser(BdPtr) ((XAxiDma_BdRead((BdPtr), XAXIDMA_BD_MCCTL_OFFSET)) & XAXIDMA_BD_ARUSER_FIELD_MASK)\n__CC_SUPPORTS___FUNC__ 1\nXCACHE_ENABLE_ICACHE() \nXAXIDMA_BD_CTRL_LEN_OFFSET 0x18\nmtgpr(rn,v) ({ __asm__ __volatile__("or\\t" stringify(rn) ",r0,%0\\n" ::"d"(v)); })\nXIL_EXCEPTION_H \nMAX_REGIONS 64\nXPAR_MICROBLAZE_0_DYNAMIC_BUS_SIZING 0\n__DEC64_MIN__ 1E-383DD\nXil_DCacheEnable() Xil_L1DCacheEnable()\n__INT16_C(c) c\nmftlbhi() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rtlbhi\\n" : "=d"(_rval)); _rval; })\nSIG_ATOMIC_MIN (-__STDINT_EXP(INT_MAX) - 1)\nXPAR_MICROBLAZE_0_NUMBER_OF_PC_BRK 4\nfsl_iserror(error) asm volatile("mfs\\t%0,rmsr\\n\\t" "andi\\t%0,%0,0x10" : "=d"(error))\nXAXIDMA_BD_STRIDE_FIELD_MASK 0x0000FFFF\nXPAR_MICROBLAZE_0_S5_AXIS_DATA_WIDTH 32\n__attribute_format_strfmon__(a,b) \n__microblaze__ 1\nXPAR_BRAM_3_ECC_STATUS_REGISTERS 0U\n__SIZEOF_SHORT__ 2\nXPAR_MICROBLAZE_LOCKSTEP_SELECT 0\nlength\nXPAR_MICROBLAZE_S15_AXIS_PROTOCOL GENERIC\n__have_long32 1\ncgetfsl_interruptible(val,id) asm volatile("\\n1:\\n\\tncget\\t%0,rfsl" stringify(id) "\\n\\t" "addic\\tr18,r0,0\\n\\t" "bnei\\tr18,1b\\n" : "=d"(val)::"r18")\n__GCC_ATOMIC_SHORT_LOCK_FREE 1\nXAxiDma_WriteReg(BaseAddress,RegOffset,Data) XAxiDma_Out32((BaseAddress) + (RegOffset), (Data))\n__UINT8_MAX__ 0xff\nXPAR_MICROBLAZE_DEBUG_ENABLED 2\nXAXIDMA_BD_USR3_OFFSET 0x2C\nXPAR_MICROBLAZE_M4_AXIS_PROTOCOL GENERIC\n_REENT_MBRTOWC_STATE(ptr) ((ptr)->_misc->_mbrtowc_state)\nXAXIDMA_BD_USR1_OFFSET 0x24\nXST_UART \nXAxiDma\nBLUE\nmd_size\nXPAR_RGB_PWM_0_DEVICE_ID 0\n_gamma_signgam\nXPAR_MICROBLAZE_0_USE_PCMP_INSTR 0\nLOGIN\nXPAR_PS7_SPI_0_SPI_CLK_FREQ_HZ 166666672\n__BEGIN_DECLS \nUART_DEVICE_ID 0\nmicroblaze_bwrite_cntlfsl(val,id) cputfsl(val, id)\n__SIZEOF_WINT_T__ 4\nXPAR_MICROBLAZE_M10_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_PC_WIDTH 32\n__UINTPTR_MAX__ 0xffffffffU\n_REENT_TM(ptr) ((ptr)->_localtime_buf)\nXPAR_MICROBLAZE_0_M14_AXIS_DATA_WIDTH 32\nXST_IPIF_DEVICE_STATUS_ERROR 533L\nXIntc_AckIntr(BaseAddress,AckMask) XIntc_Out32((BaseAddress) + XIN_IAR_OFFSET, (AckMask))\n_current_category\ngetc(fp) __sgetc_r(_REENT, fp)\nmttlbx(v) ({ __asm__ __volatile__("mts\\trtlbx,%0\\n\\tnop\\n" ::"d"(v)); })\nXPAR_PS7_SD_0_IS_CACHE_COHERENT 0\nXNULL NULL\n__LOCK_INIT_RECURSIVE(class,lock) static int lock = 0;\n__ATOMIC_CONSUME 1\nXPAR_MICROBLAZE_0_DCACHE_USE_WRITEBACK 0\nXPAR_INTC_MAX_NUM_INTR_INPUTS 1\n__FLT_MIN__ 1.1754943508222875e-38F\n__INT_LEAST16_TYPE__ short int\nXST_EMAC_OUT_OF_BUFFERS 1005L\n__UINT_LEAST64_TYPE__ long long unsigned int\nINTMAX_MAX (__INTMAX_MAX__)\ntostring(s) #s\n_BEGIN_STD_C \nSHARED_DDR_BASE (0x20000000 + 0x1CC00000)\nlwea(lladdr) ({ u32 _rval; __asm__ __volatile__("lwea\\t%0,%M1,%L1\\n" : "=d"(_rval) : "d"(lladdr)); _rval; })\nXST_UART_TEST_FAIL 1054L\nphysadr physadr_t\nXPAR_MICROBLAZE_M8_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_S10_AXIS_DATA_WIDTH 32\nINT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)\n__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\nMAX_SONG_SZ (1 << 25)\nPAUSE\nXIL_EXCEPTION_ID_MMU 7U\nUSER_IDS\n__SIZEOF_PTRDIFF_T__ 4\nXPAR_MICROBLAZE_S3_AXIS_PROTOCOL GENERIC\nlogged_in\n_ST_INT32\n__DBL_DECIMAL_DIG__ 17\nXPAR_MICROBLAZE_0_IP_AXI_MON 0\nXINTC_L_H \n__sf_fake_stderr\nXPAR_MICROBLAZE_0_M12_AXIS_PROTOCOL GENERIC\n__sclearerr(p) ((void)((p)->_flags &= ~(__SERR|__SEOF)))\n_ATTRIBUTE(attrs) __attribute__ (attrs)\nXPAR_SHARE_AXI_BRAM_CTRL_0_WRITE_ACCESS 0U\nchar +0\nNUM_USERS 3\nXPAR_MICROBLAZE_0_RESET_MSR_DCE 0\n_flockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __lock_acquire_recursive((fp)->_lock))\n_VA_LIST_T_H \nXAXIDMA_HALTED_MASK 0x00000001\nXST_DMA_ERROR 9L\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_DEVICE_ID 0U\n_ATFILE_SOURCE\nSEEK_SET 0\n_VA_LIST_ \nXPAR_MICROBLAZE_0_S9_AXIS_DATA_WIDTH 32\nXST_FLASH_READY 1127L\n__sdidinit\nMB_PROMPT "\\r\\nMB> "\n__DBL_MIN_EXP__ (-1021)\n__exported __attribute__((__visibility__("default")))\nXST_IIC_GENERAL_CALL_ADDRESS 1078\n__LEAST32 "l"\nXPAR_BRAM_3_FAULT_INJECT 0U\nXPAR_XUARTPS_NUM_INSTANCES 1\nINT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)\n__LITTLE_ENDIAN__ 1\n__SNPT 0x0800\n__result_use_check __attribute__((__warn_unused_result__))\nXPAR_MICROBLAZE_FPU_EXCEPTION 0\ndma_cnt\nSIG_ATOMIC_MAX (__STDINT_EXP(INT_MAX))\nXAXIDMA_CR_CYCLIC_MASK 0x00000010\nEXIT_FAILURE 1\nXPAR_MICROBLAZE_DATA_SIZE 32\nXPAR_PS7_ETHERNET_0_DEVICE_ID 0\nXPAR_MICROBLAZE_0_USE_EXTENDED_FSL_INSTR 0\n__STDC_VERSION__ 201112L\nXST_FLASH_ALIGNMENT_ERROR 1136L\n__LDBL_MAX_10_EXP__ 308\n__INT32 "l"\nXPAR_PS7_SPI_0_HIGHADDR 0xE0006FFF\n_flock_t\n__IMPORT \nfwopen(__cookie,__fn) funopen(__cookie, (int (*)())0, __fn, (fpos_t (*)())0, (int (*)())0)\n___int32_t_defined 1\nXPAR_XEMACPS_0_HIGHADDR 0xE000BFFF\n__sf_fake_stdout\nXPAR_AXIDMA_0_MICRO_DMA 0\nXST_IPIF_DEVICE_ID_ERROR 540L\nXPAR_MICROBLAZE_M4_AXIS_DATA_WIDTH 32\n__INT64_TYPE__ long long int\nXPAR_MICROBLAZE_S7_AXIS_PROTOCOL GENERIC\nmtslr(v) ({ __asm__ __volatile__("mts\\trslr,%0\\n\\tnop\\n" ::"d"(v)); })\n__DEC32_MAX__ 9.999999E96DF\nmfpid() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rpid\\n" : "=d"(_rval)); _rval; })\nXAxiDma_BdRingIntDisable(RingPtr,Mask) (XAxiDma_WriteReg((RingPtr)->ChanBase, XAXIDMA_CR_OFFSET, XAxiDma_ReadReg((RingPtr)->ChanBase, XAXIDMA_CR_OFFSET) & ~((Mask)&XAXIDMA_IRQ_ALL_MASK)))\nXST_SPI_SLAVE_MODE_FAULT 1159\nXPAR_MICROBLAZE_M14_AXIS_DATA_WIDTH 32\n__malloc_like __attribute__((__malloc__))\n___int_ptrdiff_t_h \n__lock_try_acquire_recursive(lock) (_CAST_VOID 0)\nXPAR_MICROBLAZE_M_AXI_I_BUS_EXCEPTION 0\n__UINT_LEAST32_TYPE__ long unsigned int\nXST_DMA_SG_IS_STOPPED 515L\nXPAR_MICROBLAZE_0_S13_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_0_M_AXI_DC_WUSER_WIDTH 1\n_NOINLINE_STATIC _NOINLINE static\n_LONG_DOUBLE long double\n_WANT_IO_C99_FORMATS 1\n__GNUCLIKE_MATH_BUILTIN_CONSTANTS \nXPAR_MICROBLAZE_0_USE_BARREL 0\nXPAR_MICROBLAZE_ENDIANNESS 1\nXENV_H \nXPAR_MICROBLAZE_DCACHE_ALWAYS_USED 0\n__PMT(args) args\n_P 020\nputfsl_interruptible(val,id) asm volatile( "\\n1:\\n\\tnput\\t%0,rfsl" stringify(id) "\\n\\t" "addic\\tr18,r0,0\\n\\t" "bnei\\tr18,1b\\n" ::"d"(val) : "r18")\nXST_NAND_CACHE_ERROR 1450L\nXAXIDMA_DESTADDR_MSB_OFFSET 0x0000001C\nXPAR_MICROBLAZE_USE_STACK_PROTECTION 0\nXPAR_AXI_DMA_0_SG_INCLUDE_STSCNTRL_STRM 0\nXPAR_MICROBLAZE_EDK_SPECIAL microblaze\n_REENT_GETDATE_ERR_P(ptr) (&((ptr)->_misc->_getdate_err))\nXAXIDMA_RX_OFFSET 0x00000030\n__SORD 0x2000\nmtfsr(v) ({ __asm__ __volatile__("mts\\trfsr,%0\\n\\tnop\\n" ::"d"(v)); })\n__COPYRIGHT(s) struct __hack\n_flags2\n_WIDE_ORIENT 1\nshort\nunsigned signed\n_REENT_MBTOWC_STATE(ptr) ((ptr)->_misc->_mbtowc_state)\nXST_ERROR_COUNT_MAX 22L\nXPAR_MICROBLAZE_DEBUG_TRACE_SIZE 8192\nXPAR_MICROBLAZE_ICACHE_BASEADDR 0x00000000\nXST_RECV_ERROR 27L\nXPAR_MICROBLAZE_0_M_AXI_IC_ARUSER_WIDTH 5\nXPAR_PS7_I2C_0_I2C_CLK_FREQ_HZ 108333336\n__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL\nChanBase\n_XDEBUG_H \nXPAR_MB_DMA_AXI_BRAM_CTRL_0_ECC 0U\nXST_IPIF_ERROR 541L\nXPAR_MICROBLAZE_0_PVR_USER1 0x00\nXST_IIC_NOT_SLAVE 1088\nXIN_IPR_OFFSET 4\nXPAR_MICROBLAZE_0_PC_WIDTH 32\n__LEAST64 "ll"\nXPAR_MICROBLAZE_S3_AXIS_DATA_WIDTH 32\n__SMBF 0x0080\nXIL_EXCEPTION_ID_STACK_VIOLATION 7U\nXAXIDMA_ALL_BDS 0x0FFFFFFF\nshr(address,data) ({ __asm__ __volatile__("shr\\t%0,%1,r0\\n" ::"d"(data), "d"(address)); })\nINT_LEAST16_MAX (__INT_LEAST16_MAX__)\nXPAR_MICROBLAZE_0_M_AXI_DP_EXCLUSIVE_ACCESS 0\nSTDOUT_BASEADDRESS 0xE0000000\nXPAR_MICROBLAZE_0_M_AXI_IC_BUSER_WIDTH 1\nXAXIDMA_BD_TID_FIELD_MASK 0x00000F00\n__UINT16_MAX__ 0xffff\nXAxiDma_BdSetARUser(BdPtr,ARUser) { u32 val; val = (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_MCCTL_OFFSET) & ~XAXIDMA_BD_ARUSER_FIELD_MASK); val |= ((u32)(ARUser) << XAXIDMA_BD_ARUSER_FIELD_SHIFT); XAxiDma_BdWrite((BdPtr), XAXIDMA_BD_MCCTL_OFFSET, val); }\nXIN_SVC_SGL_ISR_OPTION 1UL\n_ST_INT32 __attribute__ ((__mode__ (__SI__)))\n__alloc_align(x) __attribute__((__alloc_align__(x)))\nXST_SPI_POLL_DONE 1163\nXPAR_MICROBLAZE_CACHE_BYTE_SIZE 8192\nXPAR_PS7_SPI_0_DEVICE_ID 0\n__lock_try_acquire(lock) (_CAST_VOID 0)\nXPAR_MICROBLAZE_ILL_OPCODE_EXCEPTION 0\nXAXIDMA_SR_OFFSET 0x00000004\nXPAR_MICROBLAZE_RESET_MSR_ICE 0\n__CONCAT(x,y) __CONCAT1(x,y)\nXPAR_BRAM_3_BASEADDR 0x04B00000U\nXPAR_MICROBLAZE_AREA_OPTIMIZED 0\nUnhandledInterrupts\n__DBL_HAS_QUIET_NAN__ 1\n__LDBL_MIN_10_EXP__ (-307)\nPREVIEW_SZ (PREVIEW_TIME_SEC * AUDIO_SAMPLING_RATE * BYTES_PER_SAMP)\n__DEC32_MANT_DIG__ 7\n__NO_INLINE__ 1\nXPAR_MICROBLAZE_0_S14_AXIS_DATA_WIDTH 32\nXAXIDMA_BD_WORDLEN_MASK 0xFF\nXPAR_MICROBLAZE_M8_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_0_ICACHE_BASEADDR 0x00000000\nXPAR_SHARE_AXI_BRAM_CTRL_0_S_AXI_CTRL_HIGHADDR 0xFFFFFFFFU\nXPAR_FIFO_COUNT_AXI_GPIO_0_HIGHADDR 0x04B2FFFF\nUINT8_C(x) __UINT8_C(x)\nBYTES_PER_SAMP 2\nXST_REGISTER_ERROR 14L\n_REENT_ASCTIME_SIZE 26\n__DEC_EVAL_METHOD__ 2\nXPAR_PS7_ETHERNET_0_HIGHADDR 0xE000BFFF\nXPAR_MICROBLAZE_0_AVOID_PRIMITIVES 0\n__LDBL_HAS_INFINITY__ 1\n__FLT_DIG__ 6\n__SERR 0x0040\nXPAR_BRAM_0_CE_COUNTER_WIDTH 0U\nXPAR_MICROBLAZE_0_USE_INTERRUPT 1\n_FSEEK_OPTIMIZATION 1\nXPAR_XGPIOPS_0_DEVICE_ID XPAR_PS7_GPIO_0_DEVICE_ID\nXST_EMAC_MEMORY_SIZE_ERROR 1001L\n_IOFBF 0\nXPAR_MICROBLAZE_FSL_EXCEPTION 0\nXAxiDma_BdRead(BaseAddress,Offset) (*(u32 *)(((void *)(UINTPTR)(BaseAddress)) + (u32)(Offset)))\nlogin\nXPAR_MICROBLAZE_S14_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_ICACHE_LINE_LEN 4\nXPAR_AXI_INTC_0_HIGHADDR 0x04B3FFFF\n__u_char_defined \nXAXIDMA_DESTADDR_OFFSET 0x00000018\nINT_FAST32_MAX (__INT_FAST32_MAX__)\nXPAR_MICROBLAZE_0_DEBUG_COUNTER_WIDTH 32\nXPAR_AXI_INTC_0_INT_AXI_GPIO_0_GPIO_IO_O_INTR 0U\nstringify(s) tostring(s)\nXST_NAND_WRITE_PROTECTED 1451L\nXST_USB_BUF_ALIGN_ERROR 1411\nXil_DCacheInvalidateRange(Addr,Len) Xil_L2CacheInvalidateRange((Addr), (Len)); Xil_L1DCacheInvalidateRange((Addr), (Len));\nXPAR_MICROBLAZE_0_USE_REORDER_INSTR 1\nXST_NAND_TIMEOUT_ERROR 1446L\nmicroblaze_nbwrite_cntlfsl(val,id) ncputfsl(val, id)\nXPAR_FIFO_COUNT_AXI_GPIO_0_BASEADDR 0x04B20000\nXST_SPI_MODE_FAULT 1151\nnum_users\n__SIZEOF_LONG_DOUBLE__ 8\npacking1\npacking2\nXPAR_MICROBLAZE_0_DC_AXI_MON 0\nfropen(__cookie,__fn) funopen(__cookie, __fn, (int (*)())0, (fpos_t (*)())0, (int (*)())0)\nuids\nXPAR_MICROBLAZE_USE_MMU 0\n__DBL_DENORM_MIN__ ((double)4.9406564584124654e-324L)\n__FLT_HAS_DENORM__ 1\nXPAR_MICROBLAZE_0_SCO 0\nXPAR_MICROBLAZE_0_LOCKSTEP_MASTER 0\nXPAR_XEMACPS_0_BASEADDR 0xE000B000\nXPAR_AXI_DMA_0_MM2S_BURST_SIZE 16\nXPAR_PS7_GPIO_0_HIGHADDR 0xE000AFFF\nXAxiDma_BdSetTDest(BdPtr,TDest) { u32 val; val = (XAxiDma_BdRead((BdPtr), XAXIDMA_BD_MCCTL_OFFSET) & ~XAXIDMA_BD_TDEST_FIELD_MASK); val |= ((u32)(TDest) << XAXIDMA_BD_TDEST_FIELD_SHIFT); XAxiDma_BdWrite((BdPtr), XAXIDMA_BD_MCCTL_OFFSET, val); }\nmfzpr() ({ u32 _rval; __asm__ __volatile__("mfs\\t%0,rzpr\\n" : "=d"(_rval)); _rval; })\nXPAR_PS7_UART_0_HAS_MODEM 0\nXPAR_MICROBLAZE_0_M_AXI_DP_THREAD_ID_WIDTH 1\n_GCC_MAX_ALIGN_T \nXST_USB_NO_DESC_AVAILABLE 1412\nCyclicBd\nXPAR_XEMACPS_0_ENET_SLCR_1000Mbps_DIV1 1\n_sign\nXPAR_DATA_LMB_BRAM_IF_CNTLR_1_CE_FAILING_REGISTERS 0U\n_stdout_r(x) ((x)->_stdout)\nXPAR_MICROBLAZE_S7_AXIS_DATA_WIDTH 32\nXPAR_MICROBLAZE_0_FSL_EXCEPTION 0\nXPAR_MICROBLAZE_M_AXI_DC_USER_VALUE 31\n__SIZEOF_FLOAT__ 4\nDATA_SYNC mbar(1)\nmain\n__DEC128_EPSILON__ 1E-33DL\n__SIZE_T__ \n_LITTLE_ENDIAN 1\n__SIZE_TYPE__ unsigned int\nXPAR_MICROBLAZE_USE_BRANCH_TARGET_CACHE 0\nXPAR_AXI_DMA_0_ADDR_WIDTH 32\nXST_FLASH_TIMEOUT_ERROR 1134L\nXPAR_MICROBLAZE_0_DEBUG_TRACE_ASYNC_RESET 0\nXPAR_XSDPS_0_HAS_EMIO 0\nXST_IIC_RX_FIFO_REG_RESET_ERROR 1081\n__UINT_LEAST8_TYPE__ unsigned char\n_RAND48_SEED_1 (0xabcd)\n__unreachable() __builtin_unreachable()\nisalpha(__c) (__ctype_lookup(__c)&(_U|_L))\nmicroblaze_bwrite_datafsl(val,id) putfsl(val, id)\n__STRING(x) #x\nXPAR_MICROBLAZE_S15_AXIS_DATA_WIDTH 32\nXPAR_XUARTPS_0_HIGHADDR 0xE0000FFF\nXAXIDMA_BD_STS_RXSOF_MASK 0x08000000\nmfpvre(rn) ({ u32 _rval; __asm__ __volatile__("mfse\\t%0,rpvr" stringify(rn) "\\n" : "=d"(_rval)); _rval; })\nXPAR_MICROBLAZE_0_M3_AXIS_PROTOCOL GENERIC\n__CHAR16_TYPE__ short unsigned int\n__time_t_defined \n_SYS_SELECT_H \nisspace(__c) (__ctype_lookup(__c)&_S)\nXPAR_XSPIPS_0_DEVICE_ID XPAR_PS7_SPI_0_DEVICE_ID\nXil_L2CacheInvalidateRange(Addr,Len) microblaze_invalidate_cache_ext_range((Addr), (Len))\nXPAR_MICROBLAZE_0_M_AXI_IC_WUSER_WIDTH 1\nispunct(__c) (__ctype_lookup(__c)&_P)\n_r48\n_funlockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __lock_release_recursive((fp)->_lock))\nmb_hibernate() ({ __asm__ __volatile__("hibernate\\t"); })\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_CE_FAILING_REGISTERS 0U\nFILENAME_MAX 1024\nXPAR_MICROBLAZE_0_M12_AXIS_DATA_WIDTH 32\n_REENT_CHECK_EMERGENCY(var) _REENT_CHECK(var, _emergency, char *, _REENT_EMERGENCY_SIZE, )\n__THROW \nXPAR_MICROBLAZE_ICACHE_VICTIMS 0\nWCHAR_MIN (__WCHAR_MIN__)\nXPAR_MICROBLAZE_0_USE_EXT_NM_BRK 0\nXPAR_MICROBLAZE_NUM_SYNC_FF_DBG_CLK 1\nXPAR_MICROBLAZE_0_USE_DCACHE 0\nXST_EMAC_MII_BUSY 1004L\nDIGITAL_OUT\nget_drm_song(d) ((char *)(&d.md) + d.md.md_size)\n__need_NULL \nfile_size\nXIN_REAL_MODE 1\nXPAR_MICROBLAZE_0_S5_AXIS_PROTOCOL GENERIC\nXPAR_XSDPS_0_HAS_WP 0\n__clockid_t_defined \nXPAR_MB_DMA_AXI_BRAM_CTRL_0_S_AXI_CTRL_HIGHADDR 0xFFFFFFFFU\ntimerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)\nXST_FLASH_WRITE_SUSPENDED 1130L\nputchar_unlocked(x) putc_unlocked(x, stdout)\nXPAR_MICROBLAZE_DEBUG_INTERFACE 0\nXAXIDMA_COALESCE_SHIFT 16\nXPAR_XIICPS_0_HIGHADDR 0xE0004FFF\nXPAR_XUARTPS_0_UART_CLK_FREQ_HZ 100000000\n_MACHINE__TYPES_H \n__GNUC_MINOR__ 2\nXPAR_XSPIPS_NUM_INSTANCES 1\n__STDC_UTF_16__ 1\nXPAR_MICROBLAZE_0_EDK_IPTYPE PROCESSOR\n_read\n_SUSECONDS_T_DECLARED \nXIN_INTC_LAST 3\nXil_Ntohs Xil_EndianSwap16\nXPAR_MICROBLAZE_0_M7_AXIS_PROTOCOL GENERIC\nXPAR_MICROBLAZE_M_AXI_DC_RUSER_WIDTH 1\nXST_SPI_RECEIVE_OVERRUN 1154\nPROVISIONED_PINS\n_rand48\ntoupper(__c) __extension__ ({ __typeof__ (__c) __x = (__c); islower (__x) ? (int) __x - \'a\' + \'A\' : (int) __x;})\nXPAR_MICROBLAZE_0_MMU_TLB_ACCESS 3\nXPAR_MICROBLAZE_0_S2_AXIS_PROTOCOL GENERIC\n__GNUC__ 6\n__DEC64_MIN_EXP__ (-382)\nXPAR_MB_DMA_AXI_BRAM_CTRL_0_DEVICE_ID 2U\nXPAR_INS_LMB_BRAM_IF_CNTLR_0_WRITE_ACCESS 2U\nXST_LOOPBACK_ERROR 17L\n__MS_types__\nXPAR_BRAM_2_CE_FAILING_REGISTERS 0U\n__FLT_DENORM_MIN__ 1.4012984643248171e-45F\nHasDRE\nXST_DATA_LOST 26L\nisalnum(__c) (__ctype_lookup(__c)&(_U|_L|_N))\n_STDARG_H \nXPAR_INS_LMB_BRAM_IF_CNTLR_0_S_AXI_CTRL_BASEADDR 0xFFFFFFFFU\nXil_L1DCacheDisable() microblaze_disable_dcache()\nXil_L1DCacheFlushRange(Addr,Len) microblaze_invalidate_dcache_range((Addr), (Len))\n__UINT_LEAST8_MAX__ 0xff\nXAXIDMA_BD_TDEST_FIELD_SHIFT 0\nXPAR_MICROBLAZE_DCACHE_VICTIMS 0\n__UINT32_MAX__ 0xffffffffUL\n_MACHSTDLIB_H_ \n__INT_LEAST8_MAX__ 0x7f\nWINT_MAX (__WINT_MAX__)\n_stdin_r(x) ((x)->_stdin)\n_stderr_r(x) ((x)->_stderr)\ngetfsl_interruptible(val,id) asm volatile("\\n1:\\n\\tnget\\t%0,rfsl" stringify(id) "\\n\\t" "addic\\tr18,r0,0\\n\\t" "bnei\\tr18,1b\\n" : "=d"(val)::"r18")\n__INT64_C(c) c ## LL\nXAxiDma_Out32 Xil_Out32\nXPAR_INTC_0_INTC_TYPE 0U\nXPAR_XSPIPS_0_BASEADDR 0xE0006000\n__GNUC_PATCHLEVEL__ 0\nFirstBdAddr\nINT32_MAX (__INT32_MAX__)\ninit_uart\ninit_platform\ndisable_caches\ncleanup_platform\n../src/platform.c\nenable_caches\nMm2SBurstSize\nBaseAddr\nu32NrSamples\nS2MmDataWidth\nPWM_H \nS2MmNumChannels\nPWM_AXI_PERIOD_REG_OFFSET 8\nMm2sNumChannels\nsetLED\nPWM_mReadReg(BaseAddress,RegOffset) Xil_In32((BaseAddress) + (RegOffset))\nS2MmBurstSize\nXil_ExceptionHandler\nHasMm2SDRE\nXAxiDma_Config\nSetUpInterruptSystem\npCfgPtr\nMm2SDataWidth\nHasS2MmDRE\nPWM_AXI_CTRL_REG_OFFSET 0\n../src/util.c\nfnConfigDma\nXStatus\nPWM_mWriteReg(BaseAddress,RegOffset,Data) Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))\nhdlr\nPWM_AXI_DUTY_REG_OFFSET 64\nenableLED\nXIntcInstancePtr\nfnAudioPlay\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/bin/../lib/gcc/microblaze-xilinx-elf/6.2.0/../../../../microblaze-xilinx-elf/lib/le/crt0.o\n_vector_sw_exception\n_vector_interrupt\n_vector_hw_exception\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/bin/../lib/gcc/microblaze-xilinx-elf/6.2.0/le/crtbegin.o\n__CTOR_LIST__\n__DTOR_LIST__\nderegister_tm_clones\n__do_global_dtors_aux\ncompleted.5083\ndtor_idx.5085\nframe_dummy\nobject.5095\nlib_a-mallocr.o\nmalloc_extend_top\nsbrk.o\nheap_ptr\n/opt/Xilinx/SDK/2017.4/gnu/microblaze/lin/bin/../lib/gcc/microblaze-xilinx-elf/6.2.0/le/crtend.o\n__CTOR_END__\n__do_global_ctors_aux\n./src/main.o\nsAxiDma\nInterruptProcessed\nInterruptController\nxil_printf.o\ngetnum\npadding.part.0\noutnum\nxintc.o\nStubHandler\nxil_assert.o\nXil_AssertCallbackRoutine\nlib_a-ctype_.o\n_ctype_b\nlib_a-impure.o\nimpure_data\n__sdata_start\n__sbss2_end\n__sdata2_start\nstrcpy\nPROVISIONED_PINS\n___CTORS_LIST___\nPROVISIONED_RIDS\nXil_MemCpy\nmicroblaze_enable_dcache\n__malloc_unlock\nMB_InterruptVectorTable\nXil_Assert\nenable_caches\nmemmove\nXUartPs_SendByte\n__errno\nXil_ExceptionInit\n__sbss_start\nXIntc_BitPosMask\nusleep\nis_provisioned_rid\nis_provisioned_uid\nXIntc_ConfigTable\nmemcpy\n__TMC_END__\nUSERNAMES\n__DTOR_END__\ninit_platform\n__rodata_end\nXIntc_DeviceInterruptHandler\nmalloc\n__udivsi3\nXIntc_Start\n__malloc_top_pad\nis_locked\ninit_uart\n_sbrk_r\n_crtinit\n__malloc_max_sbrked_mem\n_heap_end\n_global_impure_ptr\nREGION_NAMES\n__bss_end\n__tbss_start\nmyISR\nXAxiDma_ConfigTable\nPWM_Set_Period\nBLUE\nXil_ExceptionRegisterHandler\nPWM_Set_Duty\n__init\nXil_AssertWait\n_heap_start\n__sbss_end\nXNullHandler\nmicroblaze_register_handler\nxil_printf\n__umodsi3\nPWM_Enable\nXAxiDma_Busy\nlogin\nuid_to_username\n__sbss2_start\nshare_song\n_free_r\n__call_exitprocs\nUSER_IDS\ngen_song_md\n__malloc_sbrk_base\nplay_song\n__rodata_start\nrid_to_region_name\n_SDA_BASE_\nSetUpInterruptSystem\nPROVISIONED_UIDS\nGREEN\n__data_end\n__mulsi3\n__malloc_current_mallinfo\nquery_song\nusername_to_uid\n__malloc_av_\noutbyte\n__malloc_lock\nsbrk\nquery_player\n__bss_start\n_STACK_SIZE\n__tdata_start\n__tdata_end\nfnAudioPlay\nload_song_md\nmemset\nmain\nXAxiDma_SimpleTransfer\n__malloc_max_total_mem\n_HEAP_SIZE\n_malloc_r\n_start1\n_stack_end\nXil_AssertStatus\n__sdata_end\n_malloc_trim_r\n___DTORS_LIST___\nstrcmp\nXAxiDma_CfgInitialize\nlogout\nXIntc_InterruptHandler\n__fini\nXAxiDma_Reset\n__sdata2_end\nXIntc_Connect\nXIntc_Enable\nsetLED\n___CTORS_END___\nfnConfigDma\n__stack\nXil_ExceptionEnable\n__malloc_trim_threshold\n_heap\n_hw_exception_handler\nmicroblaze_enable_interrupts\nmicroblaze_enable_icache\n__ctype_ptr__\nXIntc_Initialize\n__tbss_end\n_ctype_\n_program_init\n_exit\nXAxiDma_LookupConfig\nstrlen\nXAxiDma_ResetIsDone\n__data_start\n_program_clean\nREGION_IDS\n_SDA2_BASE_\ndigital_out\nenableLED\nfree\nYELLOW\n__interrupt_handler\n.symtab\n.strtab\n.shstrtab\n.vectors.reset\n.vectors.sw_exception\n.vectors.interrupt\n.vectors.hw_exception\n.text\n.init\n.fini\n.ctors\n.dtors\n.rodata\n.sdata2\n.data\n.sdata\n.sbss\n.bss\n.heap\n.stack\n.debug_frame\n.debug_info\n.debug_abbrev\n.debug_aranges\n.debug_ranges\n.debug_macro\n.debug_line\n.debug_str\n')])])]),A("h3",{attrs:{id:"new-flags"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#new-flags"}},[_._v("#")]),_._v(" New Flags")]),_._v(" "),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v("dy`0\np)`0`\n@x`2\n!0\"\"\nMB> Could not find region ID '%d'\n<unknown region>\nMB> Could not find region name '%s'\nMB> Could not find uid '%d'\n<unknown user>\nMB> Could not find username '%s'\nMB> No user logged in\nMB> User '%s' does not have access to this song\nMB> User '%s' has access to this song\nMB> Region Match. Full Song can be played. Unlocking...\nMB> Invalid region\nMB> Already logged in. Please log out first.\nMB> Logged in for user '%s'\nMB> Incorrect pin for user '%s'\nMB> User not found\nMB> Logging out...\nMB> Not logged in\nMB> Queried player (%d regions, %d users)\nMB> Queried song (%d regions, %d users)\nMB> No user is logged in. Cannot share song\nMB> User '%s' is not song's owner. Cannot share song\nMB> Username not found\nMB> Shared song with '%s'\nMB> Reading Audio File...\nMB> Song length = %dB\nMB> Song is locked.  Playing only %ds = %dB\nMB> Song is unlocked. Playing full song\nMB> Pausing... \nMB> Resuming... \nMB> Stopping playback...\nMB> Restarting song... \nMB> Only playing 30 seconds\nMB> \nMB> Dumping song (%dB)...\nMB> Song dump finished\nMB> DMA configuration ERROR\nMB> Audio DRM Module has Booted\nMB> Done Playing Song\n1234567890\n00000000\n0987654321\ndrew\nmisha\nUnited States\nJapan\nAustralia\nMB> No config found for %d\nMB> Initialization failed %d\nMB> Device configured as SG mode\n0123456789ABCDEF\nxintc_intr.c\nxintc.c\n         (((((                  \nAAAAAA\nBBBBBB\n         (((((                  \nAAAAAA\nBBBBBB\n.shstrtab\n.vectors.reset\n.vectors.sw_exception\n.vectors.interrupt\n.vectors.hw_exception\n.text\n.init\n.fini\n.ctors\n.dtors\n.rodata\n.sdata2\n.data\n.sdata\n.sbss\n.bss\n.heap\n.stack\n")])])]),A("h2",{attrs:{id:"gdb-info-functions"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#gdb-info-functions"}},[_._v("#")]),_._v(" gdb info functions")]),_._v(" "),A("h3",{attrs:{id:"original-2"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#original-2"}},[_._v("#")]),_._v(" original")]),_._v(" "),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v("All defined functions:\n\nFile ../src/main.c:\nvoid digital_out();\nint gen_song_md(char *);\nint is_locked();\nint is_provisioned_rid(char);\nint is_provisioned_uid(char);\nvoid load_song_md();\nvoid login();\nvoid logout();\nint main();\nvoid myISR(void);\nvoid play_song();\nvoid query_player();\nvoid query_song();\nint region_name_to_rid(char *, char *, int);\nint rid_to_region_name(char, char **, int);\nvoid share_song();\nint uid_to_username(char, char **, int);\nint username_to_uid(char *, char *, int);\n\nFile ../src/platform.c:\nvoid cleanup_platform();\nvoid disable_caches();\nvoid enable_caches();\nvoid init_platform();\nvoid init_uart();\n\nFile ../src/util.c:\nint SetUpInterruptSystem(XIntc *, XInterruptHandler);\nvoid enableLED(u32 *);\nu32 fnAudioPlay(XAxiDma, u32, u32);\nXStatus fnConfigDma(XAxiDma *);\nvoid setLED(u32 *, struct color);\n\nNon-debugging symbols:\n0x00006764  __interrupt_handler\n0x00006764  _interrupt_handler\n0x00006808  microblaze_register_handler\n0x0000681c  usleep\n0x00006844  Xil_ExceptionInit\n0x0000684c  Xil_ExceptionEnable\n0x0000686c  Xil_ExceptionRegisterHandler\n0x00006894  Xil_MemCpy\n0x00006904  getnum\n0x00006980  padding.part\n0x000069d8  outnum\n0x00006be4  xil_printf\n0x00007014  XAxiDma_Reset\n0x00007178  XAxiDma_ResetIsDone\n0x000071c4  XAxiDma_CfgInitialize\n0x00007634  XAxiDma_Busy\n0x0000766c  XAxiDma_SimpleTransfer\n---Type <return> to continue, or q <return> to quit---\n0x000077e0  XAxiDma_LookupConfig\n0x00007808  PWM_Set_Period\n0x00007814  PWM_Set_Duty\n0x0000782c  PWM_Enable\n0x0000783c  XIntc_InterruptHandler\n0x00007898  XIntc_DeviceInterruptHandler\n0x00007a2c  StubHandler\n0x00007a7c  XIntc_Initialize\n0x00007c90  XIntc_Start\n0x00007d98  XIntc_Connect\n0x00007e90  XIntc_Enable\n0x00007f5c  outbyte\n0x00007f88  Xil_Assert\n0x00007fd0  XNullHandler\n0x00007fd8  XUartPs_SendByte\n0x00007ff4  __errno\n0x00008004  __init\n0x00008040  __fini\n")])])]),A("h3",{attrs:{id:"new-compiler-flags"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#new-compiler-flags"}},[_._v("#")]),_._v(" new compiler flags")]),_._v(" "),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v("All defined functions:\n")])])]),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v("dy`0\np)`0`\n@x`2\n!0\"\"\nMB> Could not find region ID '%d'\n<unknown region>\nMB> Could not find region name '%s'\nMB> Could not find uid '%d'\n<unknown user>\nMB> Could not find username '%s'\nMB> No user logged in\nMB> User '%s' does not have access to this song\nMB> User '%s' has access to this song\nMB> Region Match. Full Song can be played. Unlocking...\nMB> Invalid region\nMB> Already logged in. Please log out first.\nMB> Logged in for user '%s'\nMB> Incorrect pin for user '%s'\nMB> User not found\nMB> Logging out...\nMB> Not logged in\nMB> Queried player (%d regions, %d users)\nMB> Queried song (%d regions, %d users)\nMB> No user is logged in. Cannot share song\nMB> User '%s' is not song's owner. Cannot share song\nMB> Username not found\nMB> Shared song with '%s'\nMB> Reading Audio File...\nMB> Song length = %dB\nMB> Song is locked.  Playing only %ds = %dB\nMB> Song is unlocked. Playing full song\nMB> Pausing... \nMB> Resuming... \nMB> Stopping playback...\nMB> Restarting song... \nMB> Only playing 30 seconds\nMB> \nMB> Dumping song (%dB)...\nMB> Song dump finished\nMB> DMA configuration ERROR\nMB> Audio DRM Module has Booted\nMB> Done Playing Song\n1234567890\n00000000\n0987654321\ndrew\nmisha\nUnited States\nJapan\nAustralia\nMB> No config found for %d\nMB> Initialization failed %d\nMB> Device configured as SG mode\n0123456789ABCDEF\nxintc_intr.c\nxintc.c\n         (((((                  \nAAAAAA\nBBBBBB\n         (((((                  \nAAAAAA\nBBBBBB\n.shstrtab\n.vectors.reset\n.vectors.sw_exception\n.vectors.interrupt\n.vectors.hw_exception\n.text\n.init\n.fini\n.ctors\n.dtors\n.rodata\n.sdata2\n.data\n.sdata\n.sbss\n.bss\n.heap\n.stack\n")])])]),A("h2",{attrs:{id:"gdb-info-functions-2"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#gdb-info-functions-2"}},[_._v("#")]),_._v(" gdb info functions")]),_._v(" "),A("h3",{attrs:{id:"original-3"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#original-3"}},[_._v("#")]),_._v(" original")]),_._v(" "),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v("All defined functions:\n\nFile ../src/main.c:\nvoid digital_out();\nint gen_song_md(char *);\nint is_locked();\nint is_provisioned_rid(char);\nint is_provisioned_uid(char);\nvoid load_song_md();\nvoid login();\nvoid logout();\nint main();\nvoid myISR(void);\nvoid play_song();\nvoid query_player();\nvoid query_song();\nint region_name_to_rid(char *, char *, int);\nint rid_to_region_name(char, char **, int);\nvoid share_song();\nint uid_to_username(char, char **, int);\nint username_to_uid(char *, char *, int);\n\nFile ../src/platform.c:\nvoid cleanup_platform();\nvoid disable_caches();\nvoid enable_caches();\nvoid init_platform();\nvoid init_uart();\n\nFile ../src/util.c:\nint SetUpInterruptSystem(XIntc *, XInterruptHandler);\nvoid enableLED(u32 *);\nu32 fnAudioPlay(XAxiDma, u32, u32);\nXStatus fnConfigDma(XAxiDma *);\nvoid setLED(u32 *, struct color);\n\nNon-debugging symbols:\n0x00006764  __interrupt_handler\n0x00006764  _interrupt_handler\n0x00006808  microblaze_register_handler\n0x0000681c  usleep\n0x00006844  Xil_ExceptionInit\n0x0000684c  Xil_ExceptionEnable\n0x0000686c  Xil_ExceptionRegisterHandler\n0x00006894  Xil_MemCpy\n0x00006904  getnum\n0x00006980  padding.part\n0x000069d8  outnum\n0x00006be4  xil_printf\n0x00007014  XAxiDma_Reset\n0x00007178  XAxiDma_ResetIsDone\n0x000071c4  XAxiDma_CfgInitialize\n0x00007634  XAxiDma_Busy\n0x0000766c  XAxiDma_SimpleTransfer\n---Type <return> to continue, or q <return> to quit---\n0x000077e0  XAxiDma_LookupConfig\n0x00007808  PWM_Set_Period\n0x00007814  PWM_Set_Duty\n0x0000782c  PWM_Enable\n0x0000783c  XIntc_InterruptHandler\n0x00007898  XIntc_DeviceInterruptHandler\n0x00007a2c  StubHandler\n0x00007a7c  XIntc_Initialize\n0x00007c90  XIntc_Start\n0x00007d98  XIntc_Connect\n0x00007e90  XIntc_Enable\n0x00007f5c  outbyte\n0x00007f88  Xil_Assert\n0x00007fd0  XNullHandler\n0x00007fd8  XUartPs_SendByte\n0x00007ff4  __errno\n0x00008004  __init\n0x00008040  __fini\n")])])]),A("h3",{attrs:{id:"new-compiler-flags-2"}},[A("a",{staticClass:"header-anchor",attrs:{href:"#new-compiler-flags-2"}},[_._v("#")]),_._v(" new compiler flags")]),_._v(" "),A("div",{staticClass:"language- extra-class"},[A("pre",{pre:!0,attrs:{class:"language-text"}},[A("code",[_._v("All defined functions:\n")])])])])}),[],!1,null,null,null);n.default=R.exports}}]);